
AVRASM ver. 2.1.30  C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm Thu Dec 28 15:37:52 2023

C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3174
00002b 253d
00002c 2e30
00002d 6632      	.DB  0x74,0x31,0x3D,0x25,0x30,0x2E,0x32,0x66
00002e 7420
00002f 3d32
000030 3025
000031 322e      	.DB  0x20,0x74,0x32,0x3D,0x25,0x30,0x2E,0x32
000032 0066
000033 3374
000034 253d
000035 2e30      	.DB  0x66,0x0,0x74,0x33,0x3D,0x25,0x30,0x2E
000036 6632
000037 7420
000038 3d34
000039 3025      	.DB  0x32,0x66,0x20,0x74,0x34,0x3D,0x25,0x30
00003a 322e
00003b 0066      	.DB  0x2E,0x32,0x66,0x0
                 _0x2000003:
00003c c080      	.DB  0x80,0xC0
                 _0x2020000:
00003d 4e2d
00003e 4e41
C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1130): warning: .cseg .db misalignment - padding zero byte
00003f 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1132): warning: .cseg .db misalignment - padding zero byte
000040 0001      	.DB  0x1
                 _0x20A0000:
000041 4e2d
000042 4e41
000043 4900
000044 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\nima8\Desktop\tamrin3\Debug\List\tamrin3.asm(1135): warning: .cseg .db misalignment - padding zero byte
000045 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000046 0002      	.DW  0x02
000047 0298      	.DW  __base_y_G100
000048 0078      	.DW  _0x2000003*2
                 
000049 0001      	.DW  0x01
00004a 029c      	.DW  __seed_G105
00004b 0080      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bffb      	OUT  GICR,R31
000052 bfeb      	OUT  GICR,R30
000053 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000054 e08d      	LDI  R24,(14-2)+1
000055 e0a2      	LDI  R26,2
000056 27bb      	CLR  R27
                 __CLEAR_REG:
000057 93ed      	ST   X+,R30
000058 958a      	DEC  R24
000059 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005d 93ed      	ST   X+,R30
00005e 9701      	SBIW R24,1
00005f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000060 e8ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000061 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000062 9185      	LPM  R24,Z+
000063 9195      	LPM  R25,Z+
000064 9700      	SBIW R24,0
000065 f061      	BREQ __GLOBAL_INI_END
000066 91a5      	LPM  R26,Z+
000067 91b5      	LPM  R27,Z+
000068 9005      	LPM  R0,Z+
000069 9015      	LPM  R1,Z+
00006a 01bf      	MOVW R22,R30
00006b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006c 9005      	LPM  R0,Z+
00006d 920d      	ST   X+,R0
00006e 9701      	SBIW R24,1
00006f f7e1      	BRNE __GLOBAL_INI_LOOP
000070 01fb      	MOVW R30,R22
000071 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000072 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000073 bfed      	OUT  SPL,R30
000074 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000075 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000076 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000077 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000078 940c 0087 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;float t1,t2,t3,t4;
                 ;char st1[20];
                 ;char st2[20];
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000B {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000C ADMUX=adc_input | ADC_VREF_TYPE;
00007a 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007b 81e8      	LD   R30,Y
00007c b9e7      	OUT  0x7,R30
                 ; 0000 000D // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 000E delay_us(10);
                +
00007d e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
00007e 958a     +DEC R24
00007f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 000F // Start the AD conversion
                 ; 0000 0010 ADCSRA|=(1<<ADSC);
000080 9a36      	SBI  0x6,6
                 ; 0000 0011 // Wait for the AD conversion to complete
                 ; 0000 0012 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000081 9b34      	SBIS 0x6,4
000082 cffe      	RJMP _0x3
                 ; 0000 0013 ADCSRA|=(1<<ADIF);
000083 9a34      	SBI  0x6,4
                 ; 0000 0014 return ADCW;
000084 b1e4      	IN   R30,0x4
000085 b1f5      	IN   R31,0x4+1
000086 c143      	RJMP _0x20C0006
                 ; 0000 0015 }
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0019 {
                 _main:
                 ; .FSTART _main
                 ; 0000 001A // Declare your local variables here
                 ; 0000 001B 
                 ; 0000 001C // Input/Output Ports initialization
                 ; 0000 001D // Port A initialization
                 ; 0000 001E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 001F DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000087 e0e0      	LDI  R30,LOW(0)
000088 bbea      	OUT  0x1A,R30
                 ; 0000 0020 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0021 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000089 bbeb      	OUT  0x1B,R30
                 ; 0000 0022 
                 ; 0000 0023 // Port B initialization
                 ; 0000 0024 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0025 DDRB=(1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
00008a e8e7      	LDI  R30,LOW(135)
00008b bbe7      	OUT  0x17,R30
                 ; 0000 0026 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0027 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00008c e0e0      	LDI  R30,LOW(0)
00008d bbe8      	OUT  0x18,R30
                 ; 0000 0028 
                 ; 0000 0029 // Port C initialization
                 ; 0000 002A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 002B DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00008e efe7      	LDI  R30,LOW(247)
00008f bbe4      	OUT  0x14,R30
                 ; 0000 002C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=0
                 ; 0000 002D PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000090 e0e0      	LDI  R30,LOW(0)
000091 bbe5      	OUT  0x15,R30
                 ; 0000 002E 
                 ; 0000 002F // Port D initialization
                 ; 0000 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0031 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000092 bbe1      	OUT  0x11,R30
                 ; 0000 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0033 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000093 bbe2      	OUT  0x12,R30
                 ; 0000 0034 
                 ; 0000 0035 // ADC initialization
                 ; 0000 0036 // ADC Clock frequency: 62.500 kHz
                 ; 0000 0037 // ADC Voltage Reference: AREF pin
                 ; 0000 0038 // ADC Auto Trigger Source: Free Running
                 ; 0000 0039 ADMUX=ADC_VREF_TYPE;
000094 b9e7      	OUT  0x7,R30
                 ; 0000 003A ADCSRA=(1<<ADEN) | (0<<ADSC) | (1<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
000095 eae4      	LDI  R30,LOW(164)
000096 b9e6      	OUT  0x6,R30
                 ; 0000 003B SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000097 e0e0      	LDI  R30,LOW(0)
000098 bfe0      	OUT  0x30,R30
                 ; 0000 003C 
                 ; 0000 003D // Alphanumeric LCD initialization
                 ; 0000 003E // Connections are specified in the
                 ; 0000 003F // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0040 // RS - PORTC Bit 0
                 ; 0000 0041 // RD - PORTC Bit 1
                 ; 0000 0042 // EN - PORTC Bit 2
                 ; 0000 0043 // D4 - PORTC Bit 4
                 ; 0000 0044 // D5 - PORTC Bit 5
                 ; 0000 0045 // D6 - PORTC Bit 6
                 ; 0000 0046 // D7 - PORTC Bit 7
                 ; 0000 0047 // Characters/line: 16
                 ; 0000 0048 lcd_init(16);
000099 e1a0      	LDI  R26,LOW(16)
00009a d104      	RCALL _lcd_init
                 ; 0000 0049 while (1)
                 _0x6:
                 ; 0000 004A       {
                 ; 0000 004B t1=read_adc(0);
00009b e0a0      	LDI  R26,LOW(0)
00009c dfdd      	RCALL _read_adc
00009d e6a0      	LDI  R26,LOW(_t1)
00009e e0b2      	LDI  R27,HIGH(_t1)
00009f 940e 0635 	CALL SUBOPT_0x0
                 ; 0000 004C t2=read_adc(1);
0000a1 e0a1      	LDI  R26,LOW(1)
0000a2 dfd7      	RCALL _read_adc
0000a3 e6a4      	LDI  R26,LOW(_t2)
0000a4 e0b2      	LDI  R27,HIGH(_t2)
0000a5 940e 0635 	CALL SUBOPT_0x0
                 ; 0000 004D t3=read_adc(2);
0000a7 e0a2      	LDI  R26,LOW(2)
0000a8 dfd1      	RCALL _read_adc
0000a9 e6a8      	LDI  R26,LOW(_t3)
0000aa e0b2      	LDI  R27,HIGH(_t3)
0000ab 940e 0635 	CALL SUBOPT_0x0
                 ; 0000 004E t4=read_adc(3);
0000ad e0a3      	LDI  R26,LOW(3)
0000ae dfcb      	RCALL _read_adc
0000af e6ac      	LDI  R26,LOW(_t4)
0000b0 e0b2      	LDI  R27,HIGH(_t4)
0000b1 940e 0635 	CALL SUBOPT_0x0
                 ; 0000 004F t1=t1/2.046;
0000b3 91a0 0260 	LDS  R26,_t1
0000b5 91b0 0261 	LDS  R27,_t1+1
0000b7 9180 0262 	LDS  R24,_t1+2
0000b9 9190 0263 	LDS  R25,_t1+3
0000bb 940e 063c 	CALL SUBOPT_0x1
0000bd 93e0 0260 	STS  _t1,R30
0000bf 93f0 0261 	STS  _t1+1,R31
0000c1 9360 0262 	STS  _t1+2,R22
0000c3 9370 0263 	STS  _t1+3,R23
                 ; 0000 0050 t2=t2/2.046;
0000c5 91a0 0264 	LDS  R26,_t2
0000c7 91b0 0265 	LDS  R27,_t2+1
0000c9 9180 0266 	LDS  R24,_t2+2
0000cb 9190 0267 	LDS  R25,_t2+3
0000cd 940e 063c 	CALL SUBOPT_0x1
0000cf 93e0 0264 	STS  _t2,R30
0000d1 93f0 0265 	STS  _t2+1,R31
0000d3 9360 0266 	STS  _t2+2,R22
0000d5 9370 0267 	STS  _t2+3,R23
                 ; 0000 0051 t3=t3/2.046;
0000d7 91a0 0268 	LDS  R26,_t3
0000d9 91b0 0269 	LDS  R27,_t3+1
0000db 9180 026a 	LDS  R24,_t3+2
0000dd 9190 026b 	LDS  R25,_t3+3
0000df 940e 063c 	CALL SUBOPT_0x1
0000e1 93e0 0268 	STS  _t3,R30
0000e3 93f0 0269 	STS  _t3+1,R31
0000e5 9360 026a 	STS  _t3+2,R22
0000e7 9370 026b 	STS  _t3+3,R23
                 ; 0000 0052 t4=t4/2.046;
0000e9 91a0 026c 	LDS  R26,_t4
0000eb 91b0 026d 	LDS  R27,_t4+1
0000ed 9180 026e 	LDS  R24,_t4+2
0000ef 9190 026f 	LDS  R25,_t4+3
0000f1 940e 063c 	CALL SUBOPT_0x1
0000f3 93e0 026c 	STS  _t4,R30
0000f5 93f0 026d 	STS  _t4+1,R31
0000f7 9360 026e 	STS  _t4+2,R22
0000f9 9370 026f 	STS  _t4+3,R23
                 ; 0000 0053 sprintf(st1,"t1=%0.2f t2=%0.2f",t1,t2);
0000fb e7e0      	LDI  R30,LOW(_st1)
0000fc e0f2      	LDI  R31,HIGH(_st1)
0000fd 93fa      	ST   -Y,R31
0000fe 93ea      	ST   -Y,R30
                +
0000ff e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000100 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000101 93fa      	ST   -Y,R31
000102 93ea      	ST   -Y,R30
000103 91e0 0260 	LDS  R30,_t1
000105 91f0 0261 	LDS  R31,_t1+1
000107 9160 0262 	LDS  R22,_t1+2
000109 9170 0263 	LDS  R23,_t1+3
00010b 940e 0987 	CALL __PUTPARD1
00010d 91e0 0264 	LDS  R30,_t2
00010f 91f0 0265 	LDS  R31,_t2+1
000111 9160 0266 	LDS  R22,_t2+2
000113 9170 0267 	LDS  R23,_t2+3
000115 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 0054 sprintf(st2,"t3=%0.2f t4=%0.2f",t3,t4);
000117 e8e4      	LDI  R30,LOW(_st2)
000118 e0f2      	LDI  R31,HIGH(_st2)
000119 93fa      	ST   -Y,R31
00011a 93ea      	ST   -Y,R30
                +
00011b e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
00011c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
00011d 93fa      	ST   -Y,R31
00011e 93ea      	ST   -Y,R30
00011f 91e0 0268 	LDS  R30,_t3
000121 91f0 0269 	LDS  R31,_t3+1
000123 9160 026a 	LDS  R22,_t3+2
000125 9170 026b 	LDS  R23,_t3+3
000127 940e 0987 	CALL __PUTPARD1
000129 91e0 026c 	LDS  R30,_t4
00012b 91f0 026d 	LDS  R31,_t4+1
00012d 9160 026e 	LDS  R22,_t4+2
00012f 9170 026f 	LDS  R23,_t4+3
000131 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 0055 lcd_clear();
000133 d039      	RCALL _lcd_clear
                 ; 0000 0056 lcd_puts(st1);
000134 e7a0      	LDI  R26,LOW(_st1)
000135 e0b2      	LDI  R27,HIGH(_st1)
000136 d057      	RCALL _lcd_puts
                 ; 0000 0057 lcd_gotoxy(0,1);
000137 e0e0      	LDI  R30,LOW(0)
000138 93ea      	ST   -Y,R30
000139 e0a1      	LDI  R26,LOW(1)
00013a d025      	RCALL _lcd_gotoxy
                 ; 0000 0058 lcd_puts(st2);
00013b e8a4      	LDI  R26,LOW(_st2)
00013c e0b2      	LDI  R27,HIGH(_st2)
00013d d050      	RCALL _lcd_puts
                 ; 0000 0059 }
00013e cf5c      	RJMP _0x6
                 ; 0000 005A }
                 _0x9:
00013f cfff      	RJMP _0x9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000140 93aa      	ST   -Y,R26
000141 b3e5      	IN   R30,0x15
000142 70ef      	ANDI R30,LOW(0xF)
000143 2fae      	MOV  R26,R30
000144 81e8      	LD   R30,Y
000145 7fe0      	ANDI R30,LOW(0xF0)
000146 2bea      	OR   R30,R26
000147 bbe5      	OUT  0x15,R30
                +
000148 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000149 958a     +DEC R24
00014a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00014b 9aaa      	SBI  0x15,2
                +
00014c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00014d 958a     +DEC R24
00014e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00014f 98aa      	CBI  0x15,2
                +
000150 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000151 958a     +DEC R24
000152 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000153 c076      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000154 93aa      	ST   -Y,R26
000155 81a8      	LD   R26,Y
000156 dfe9      	RCALL __lcd_write_nibble_G100
000157 81e8          ld    r30,y
000158 95e2          swap  r30
000159 83e8          st    y,r30
00015a 81a8      	LD   R26,Y
00015b dfe4      	RCALL __lcd_write_nibble_G100
                +
00015c e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00015d 958a     +DEC R24
00015e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00015f c06a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000160 93aa      	ST   -Y,R26
000161 81e8      	LD   R30,Y
000162 e0f0      	LDI  R31,0
000163 56e8      	SUBI R30,LOW(-__base_y_G100)
000164 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000165 81e0      	LD   R30,Z
000166 81a9      	LDD  R26,Y+1
000167 0fae      	ADD  R26,R30
000168 dfeb      	RCALL __lcd_write_data
000169 8059      	LDD  R5,Y+1
00016a 8048      	LDD  R4,Y+0
00016b 9622      	ADIW R28,2
00016c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00016d e0a2      	LDI  R26,LOW(2)
00016e 940e 064a 	CALL SUBOPT_0x3
000170 e0ac      	LDI  R26,LOW(12)
000171 dfe2      	RCALL __lcd_write_data
000172 e0a1      	LDI  R26,LOW(1)
000173 940e 064a 	CALL SUBOPT_0x3
000175 e0e0      	LDI  R30,LOW(0)
000176 2e4e      	MOV  R4,R30
000177 2e5e      	MOV  R5,R30
000178 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000179 93aa      	ST   -Y,R26
00017a 81a8      	LD   R26,Y
00017b 30aa      	CPI  R26,LOW(0xA)
00017c f011      	BREQ _0x2000005
00017d 1457      	CP   R5,R7
00017e f048      	BRLO _0x2000004
                 _0x2000005:
00017f e0e0      	LDI  R30,LOW(0)
000180 93ea      	ST   -Y,R30
000181 9443      	INC  R4
000182 2da4      	MOV  R26,R4
000183 dfdc      	RCALL _lcd_gotoxy
000184 81a8      	LD   R26,Y
000185 30aa      	CPI  R26,LOW(0xA)
000186 f409      	BRNE _0x2000007
000187 c042      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
000188 9453      	INC  R5
000189 9aa8      	SBI  0x15,0
00018a 81a8      	LD   R26,Y
00018b dfc8      	RCALL __lcd_write_data
00018c 98a8      	CBI  0x15,0
00018d c03c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00018e 93ba      	ST   -Y,R27
00018f 93aa      	ST   -Y,R26
000190 931a      	ST   -Y,R17
                 _0x2000008:
000191 81a9      	LDD  R26,Y+1
000192 81ba      	LDD  R27,Y+1+1
000193 91ed      	LD   R30,X+
000194 83a9      	STD  Y+1,R26
000195 83ba      	STD  Y+1+1,R27
000196 2f1e      	MOV  R17,R30
000197 30e0      	CPI  R30,0
000198 f019      	BREQ _0x200000A
000199 2fa1      	MOV  R26,R17
00019a dfde      	RCALL _lcd_putchar
00019b cff5      	RJMP _0x2000008
                 _0x200000A:
00019c 8118      	LDD  R17,Y+0
00019d 9623      	ADIW R28,3
00019e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00019f 93aa      	ST   -Y,R26
0001a0 b3e4      	IN   R30,0x14
0001a1 6fe0      	ORI  R30,LOW(0xF0)
0001a2 bbe4      	OUT  0x14,R30
0001a3 9aa2      	SBI  0x14,2
0001a4 9aa0      	SBI  0x14,0
0001a5 9aa1      	SBI  0x14,1
0001a6 98aa      	CBI  0x15,2
0001a7 98a8      	CBI  0x15,0
0001a8 98a9      	CBI  0x15,1
0001a9 8078      	LDD  R7,Y+0
0001aa 81e8      	LD   R30,Y
0001ab 58e0      	SUBI R30,-LOW(128)
                +
0001ac 93e0 029a+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001ae 81e8      	LD   R30,Y
0001af 54e0      	SUBI R30,-LOW(192)
                +
0001b0 93e0 029b+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001b2 e1a4      	LDI  R26,LOW(20)
0001b3 e0b0      	LDI  R27,0
0001b4 940e 074b 	CALL _delay_ms
0001b6 940e 0650 	CALL SUBOPT_0x4
0001b8 940e 0650 	CALL SUBOPT_0x4
0001ba 940e 0650 	CALL SUBOPT_0x4
0001bc e2a0      	LDI  R26,LOW(32)
0001bd df82      	RCALL __lcd_write_nibble_G100
                +
0001be e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001bf 958a     +DEC R24
0001c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001c1 e2a8      	LDI  R26,LOW(40)
0001c2 df91      	RCALL __lcd_write_data
0001c3 e0a4      	LDI  R26,LOW(4)
0001c4 df8f      	RCALL __lcd_write_data
0001c5 e8a5      	LDI  R26,LOW(133)
0001c6 df8d      	RCALL __lcd_write_data
0001c7 e0a6      	LDI  R26,LOW(6)
0001c8 df8b      	RCALL __lcd_write_data
0001c9 dfa3      	RCALL _lcd_clear
                 _0x20C0006:
0001ca 9621      	ADIW R28,1
0001cb 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001cc 93ba      	ST   -Y,R27
0001cd 93aa      	ST   -Y,R26
0001ce 931a      	ST   -Y,R17
0001cf 930a      	ST   -Y,R16
0001d0 81aa      	LDD  R26,Y+2
0001d1 81bb      	LDD  R27,Y+2+1
0001d2 9612      	ADIW R26,2
0001d3 940e 0969 	CALL __GETW1P
0001d5 9730      	SBIW R30,0
0001d6 f129      	BREQ _0x2020010
0001d7 81aa      	LDD  R26,Y+2
0001d8 81bb      	LDD  R27,Y+2+1
0001d9 9614      	ADIW R26,4
0001da 940e 0969 	CALL __GETW1P
0001dc 018f      	MOVW R16,R30
0001dd 9730      	SBIW R30,0
0001de f061      	BREQ _0x2020012
                +
0001df 3002     +CPI R16 , LOW ( 2 )
0001e0 e0e0     +LDI R30 , HIGH ( 2 )
0001e1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001e2 f080      	BRLO _0x2020013
0001e3 01f8      	MOVW R30,R16
0001e4 9731      	SBIW R30,1
0001e5 018f      	MOVW R16,R30
                +
0001e6 81aa     +LDD R26 , Y + 2
0001e7 81bb     +LDD R27 , Y + 2 + 1
0001e8 9614     +ADIW R26 , 4
0001e9 93ed     +ST X + , R30
0001ea 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001eb 81aa      	LDD  R26,Y+2
0001ec 81bb      	LDD  R27,Y+2+1
0001ed 9612      	ADIW R26,2
0001ee 940e 0657 	CALL SUBOPT_0x5
0001f0 9731      	SBIW R30,1
0001f1 81ac      	LDD  R26,Y+4
0001f2 83a0      	STD  Z+0,R26
                 _0x2020013:
0001f3 81aa      	LDD  R26,Y+2
0001f4 81bb      	LDD  R27,Y+2+1
0001f5 940e 0969 	CALL __GETW1P
0001f7 23ff      	TST  R31
0001f8 f012      	BRMI _0x2020014
0001f9 940e 0657 	CALL SUBOPT_0x5
                 _0x2020014:
0001fb c006      	RJMP _0x2020015
                 _0x2020010:
0001fc 81aa      	LDD  R26,Y+2
0001fd 81bb      	LDD  R27,Y+2+1
0001fe efef      	LDI  R30,LOW(65535)
0001ff efff      	LDI  R31,HIGH(65535)
000200 93ed      	ST   X+,R30
000201 93fc      	ST   X,R31
                 _0x2020015:
000202 8119      	LDD  R17,Y+1
000203 8108      	LDD  R16,Y+0
000204 9625      	ADIW R28,5
000205 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
000206 940e 065d 	CALL SUBOPT_0x6
000208 e8e0      	LDI  R30,LOW(128)
000209 83ea      	STD  Y+2,R30
00020a e3ef      	LDI  R30,LOW(63)
00020b 83eb      	STD  Y+3,R30
00020c 940e 09a4 	CALL __SAVELOCR4
00020e 85ee      	LDD  R30,Y+14
00020f 85ff      	LDD  R31,Y+14+1
000210 3fef      	CPI  R30,LOW(0xFFFF)
000211 efaf      	LDI  R26,HIGH(0xFFFF)
000212 07fa      	CPC  R31,R26
000213 f449      	BRNE _0x2020019
000214 85e8      	LDD  R30,Y+8
000215 85f9      	LDD  R31,Y+8+1
000216 93fa      	ST   -Y,R31
000217 93ea      	ST   -Y,R30
                +
000218 e7aa     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000219 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00021a 940e 0526 	CALL _strcpyf
00021c c0b7      	RJMP _0x20C0005
                 _0x2020019:
00021d 3fef      	CPI  R30,LOW(0x7FFF)
00021e e7af      	LDI  R26,HIGH(0x7FFF)
00021f 07fa      	CPC  R31,R26
000220 f449      	BRNE _0x2020018
000221 85e8      	LDD  R30,Y+8
000222 85f9      	LDD  R31,Y+8+1
000223 93fa      	ST   -Y,R31
000224 93ea      	ST   -Y,R30
                +
000225 e7ab     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000226 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000227 940e 0526 	CALL _strcpyf
000229 c0aa      	RJMP _0x20C0005
                 _0x2020018:
00022a 85ab      	LDD  R26,Y+11
00022b 30a7      	CPI  R26,LOW(0x7)
00022c f010      	BRLO _0x202001B
00022d e0e6      	LDI  R30,LOW(6)
00022e 87eb      	STD  Y+11,R30
                 _0x202001B:
00022f 851b      	LDD  R17,Y+11
                 _0x202001C:
000230 2fe1      	MOV  R30,R17
000231 5011      	SUBI R17,1
000232 30e0      	CPI  R30,0
000233 f019      	BREQ _0x202001E
000234 940e 0664 	CALL SUBOPT_0x7
000236 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
000237 85ec     +LDD R30 , Y + 12
000238 85fd     +LDD R31 , Y + 12 + 1
000239 856e     +LDD R22 , Y + 12 + 2
00023a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00023b 940e 099e 	CALL __CPD10
00023d f421      	BRNE _0x202001F
00023e e030      	LDI  R19,LOW(0)
00023f 940e 0664 	CALL SUBOPT_0x7
000241 c02d      	RJMP _0x2020020
                 _0x202001F:
000242 853b      	LDD  R19,Y+11
000243 940e 0673 	CALL SUBOPT_0x8
000245 f009      	BREQ PC+2
000246 f408      	BRCC PC+2
000247 c00b      	RJMP _0x2020021
000248 940e 0664 	CALL SUBOPT_0x7
                 _0x2020022:
00024a 940e 0673 	CALL SUBOPT_0x8
00024c f028      	BRLO _0x2020024
00024d 940e 067e 	CALL SUBOPT_0x9
00024f 940e 0683 	CALL SUBOPT_0xA
000251 cff8      	RJMP _0x2020022
                 _0x2020024:
000252 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000253 940e 0673 	CALL SUBOPT_0x8
000255 f440      	BRSH _0x2020028
000256 940e 067e 	CALL SUBOPT_0x9
000258 940e 068f 	CALL SUBOPT_0xB
00025a 940e 0696 	CALL SUBOPT_0xC
00025c 5031      	SUBI R19,LOW(1)
00025d cff5      	RJMP _0x2020026
                 _0x2020028:
00025e 940e 0664 	CALL SUBOPT_0x7
                 _0x2020025:
                +
000260 85ec     +LDD R30 , Y + 12
000261 85fd     +LDD R31 , Y + 12 + 1
000262 856e     +LDD R22 , Y + 12 + 2
000263 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000264 940e 069b 	CALL SUBOPT_0xD
000266 940e 0696 	CALL SUBOPT_0xC
000268 940e 0673 	CALL SUBOPT_0x8
00026a f020      	BRLO _0x2020029
00026b 940e 067e 	CALL SUBOPT_0x9
00026d 940e 0683 	CALL SUBOPT_0xA
                 _0x2020029:
                 _0x2020020:
00026f e010      	LDI  R17,LOW(0)
                 _0x202002A:
000270 85eb      	LDD  R30,Y+11
000271 17e1      	CP   R30,R17
000272 f1a8      	BRLO _0x202002C
                +
000273 81ac     +LDD R26 , Y + 4
000274 81bd     +LDD R27 , Y + 4 + 1
000275 818e     +LDD R24 , Y + 4 + 2
000276 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000277 940e 06a2 	CALL SUBOPT_0xE
000279 940e 069b 	CALL SUBOPT_0xD
00027b 01df      	MOVW R26,R30
00027c 01cb      	MOVW R24,R22
00027d 940e 057d 	CALL _floor
                +
00027f 83ec     +STD Y + 4 , R30
000280 83fd     +STD Y + 4 + 1 , R31
000281 836e     +STD Y + 4 + 2 , R22
000282 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000283 940e 067e 	CALL SUBOPT_0x9
000285 940e 0899 	CALL __DIVF21
000287 940e 0788 	CALL __CFD1U
000289 2f0e      	MOV  R16,R30
00028a 940e 06a9 	CALL SUBOPT_0xF
00028c 940e 06b0 	CALL SUBOPT_0x10
00028e 27ff      	CLR  R31
00028f 2766      	CLR  R22
000290 2777      	CLR  R23
000291 940e 07c1 	CALL __CDF1
                +
000293 81ac     +LDD R26 , Y + 4
000294 81bd     +LDD R27 , Y + 4 + 1
000295 818e     +LDD R24 , Y + 4 + 2
000296 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000297 940e 084b 	CALL __MULF12
000299 940e 067e 	CALL SUBOPT_0x9
00029b 940e 06b5 	CALL SUBOPT_0x11
00029d 940e 0696 	CALL SUBOPT_0xC
00029f 2fe1      	MOV  R30,R17
0002a0 5f1f      	SUBI R17,-1
0002a1 30e0      	CPI  R30,0
0002a2 f669      	BRNE _0x202002A
0002a3 940e 06a9 	CALL SUBOPT_0xF
0002a5 e2ee      	LDI  R30,LOW(46)
0002a6 93ec      	ST   X,R30
0002a7 cfc8      	RJMP _0x202002A
                 _0x202002C:
0002a8 940e 06ba 	CALL SUBOPT_0x12
0002aa 9731      	SBIW R30,1
0002ab 85aa      	LDD  R26,Y+10
0002ac 83a0      	STD  Z+0,R26
0002ad 3030      	CPI  R19,0
0002ae f42c      	BRGE _0x202002E
0002af 9531      	NEG  R19
0002b0 85a8      	LDD  R26,Y+8
0002b1 85b9      	LDD  R27,Y+8+1
0002b2 e2ed      	LDI  R30,LOW(45)
0002b3 c003      	RJMP _0x2020113
                 _0x202002E:
0002b4 85a8      	LDD  R26,Y+8
0002b5 85b9      	LDD  R27,Y+8+1
0002b6 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
0002b7 93ec      	ST   X,R30
0002b8 940e 06ba 	CALL SUBOPT_0x12
0002ba 940e 06ba 	CALL SUBOPT_0x12
0002bc 9731      	SBIW R30,1
0002bd 01bf      	MOVW R22,R30
0002be 2fa3      	MOV  R26,R19
0002bf e0ea      	LDI  R30,LOW(10)
0002c0 940e 0923 	CALL __DIVB21
0002c2 5de0      	SUBI R30,-LOW(48)
0002c3 01db      	MOVW R26,R22
0002c4 93ec      	ST   X,R30
0002c5 940e 06ba 	CALL SUBOPT_0x12
0002c7 9731      	SBIW R30,1
0002c8 01bf      	MOVW R22,R30
0002c9 2fa3      	MOV  R26,R19
0002ca e0ea      	LDI  R30,LOW(10)
0002cb 940e 094d 	CALL __MODB21
0002cd 5de0      	SUBI R30,-LOW(48)
0002ce 01db      	MOVW R26,R22
0002cf 93ec      	ST   X,R30
0002d0 85a8      	LDD  R26,Y+8
0002d1 85b9      	LDD  R27,Y+8+1
0002d2 e0e0      	LDI  R30,LOW(0)
0002d3 93ec      	ST   X,R30
                 _0x20C0005:
0002d4 940e 09ab 	CALL __LOADLOCR4
0002d6 9660      	ADIW R28,16
0002d7 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0002d8 93ba      	ST   -Y,R27
0002d9 93aa      	ST   -Y,R26
0002da 97ef      	SBIW R28,63
0002db 9761      	SBIW R28,17
0002dc 940e 09a2 	CALL __SAVELOCR6
0002de e010      	LDI  R17,0
                +
0002df 01fe     +MOVW R30 , R28
0002e0 5ae8     +SUBI R30 , LOW ( - 88 )
0002e1 4fff     +SBCI R31 , HIGH ( - 88 )
0002e2 9001     +LD R0 , Z +
0002e3 81f0     +LD R31 , Z
0002e4 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002e5 87e8      	STD  Y+8,R30
0002e6 87f9      	STD  Y+8+1,R31
                +
0002e7 01fe     +MOVW R30 , R28
0002e8 5aea     +SUBI R30 , LOW ( - 86 )
0002e9 4fff     +SBCI R31 , HIGH ( - 86 )
0002ea 9001     +LD R0 , Z +
0002eb 81f0     +LD R31 , Z
0002ec 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002ed 83ee      	STD  Y+6,R30
0002ee 83ff      	STD  Y+6+1,R31
0002ef 81ae      	LDD  R26,Y+6
0002f0 81bf      	LDD  R27,Y+6+1
0002f1 e0e0      	LDI  R30,LOW(0)
0002f2 e0f0      	LDI  R31,HIGH(0)
0002f3 93ed      	ST   X+,R30
0002f4 93fc      	ST   X,R31
                 _0x2020030:
0002f5 01de      	MOVW R26,R28
0002f6 5aa4      	SUBI R26,LOW(-(92))
0002f7 4fbf      	SBCI R27,HIGH(-(92))
0002f8 940e 0657 	CALL SUBOPT_0x5
0002fa 9731      	SBIW R30,1
0002fb 91e4      	LPM  R30,Z
0002fc 2f2e      	MOV  R18,R30
0002fd 30e0      	CPI  R30,0
0002fe f409      	BRNE PC+2
0002ff c1e9      	RJMP _0x2020032
000300 2fe1      	MOV  R30,R17
000301 30e0      	CPI  R30,0
000302 f439      	BRNE _0x2020036
000303 3225      	CPI  R18,37
000304 f411      	BRNE _0x2020037
000305 e011      	LDI  R17,LOW(1)
000306 c002      	RJMP _0x2020038
                 _0x2020037:
000307 940e 06c0 	CALL SUBOPT_0x13
                 _0x2020038:
000309 c1de      	RJMP _0x2020035
                 _0x2020036:
00030a 30e1      	CPI  R30,LOW(0x1)
00030b f4c1      	BRNE _0x2020039
00030c 3225      	CPI  R18,37
00030d f419      	BRNE _0x202003A
00030e 940e 06c0 	CALL SUBOPT_0x13
000310 c1d6      	RJMP _0x2020114
                 _0x202003A:
000311 e012      	LDI  R17,LOW(2)
000312 e0e0      	LDI  R30,LOW(0)
000313 8bed      	STD  Y+21,R30
000314 e000      	LDI  R16,LOW(0)
000315 322d      	CPI  R18,45
000316 f411      	BRNE _0x202003B
000317 e001      	LDI  R16,LOW(1)
000318 c1cf      	RJMP _0x2020035
                 _0x202003B:
000319 322b      	CPI  R18,43
00031a f419      	BRNE _0x202003C
00031b e2eb      	LDI  R30,LOW(43)
00031c 8bed      	STD  Y+21,R30
00031d c1ca      	RJMP _0x2020035
                 _0x202003C:
00031e 3220      	CPI  R18,32
00031f f419      	BRNE _0x202003D
000320 e2e0      	LDI  R30,LOW(32)
000321 8bed      	STD  Y+21,R30
000322 c1c5      	RJMP _0x2020035
                 _0x202003D:
000323 c002      	RJMP _0x202003E
                 _0x2020039:
000324 30e2      	CPI  R30,LOW(0x2)
000325 f439      	BRNE _0x202003F
                 _0x202003E:
000326 e050      	LDI  R21,LOW(0)
000327 e013      	LDI  R17,LOW(3)
000328 3320      	CPI  R18,48
000329 f411      	BRNE _0x2020040
00032a 6800      	ORI  R16,LOW(128)
00032b c1bc      	RJMP _0x2020035
                 _0x2020040:
00032c c002      	RJMP _0x2020041
                 _0x202003F:
00032d 30e3      	CPI  R30,LOW(0x3)
00032e f491      	BRNE _0x2020042
                 _0x2020041:
00032f 3320      	CPI  R18,48
000330 f010      	BRLO _0x2020044
000331 332a      	CPI  R18,58
000332 f008      	BRLO _0x2020045
                 _0x2020044:
000333 c007      	RJMP _0x2020043
                 _0x2020045:
000334 e0aa      	LDI  R26,LOW(10)
000335 9f5a      	MUL  R21,R26
000336 2d50      	MOV  R21,R0
000337 2fe2      	MOV  R30,R18
000338 53e0      	SUBI R30,LOW(48)
000339 0f5e      	ADD  R21,R30
00033a c1ad      	RJMP _0x2020035
                 _0x2020043:
00033b e040      	LDI  R20,LOW(0)
00033c 322e      	CPI  R18,46
00033d f411      	BRNE _0x2020046
00033e e014      	LDI  R17,LOW(4)
00033f c1a8      	RJMP _0x2020035
                 _0x2020046:
000340 c00f      	RJMP _0x2020047
                 _0x2020042:
000341 30e4      	CPI  R30,LOW(0x4)
000342 f499      	BRNE _0x2020049
000343 3320      	CPI  R18,48
000344 f010      	BRLO _0x202004B
000345 332a      	CPI  R18,58
000346 f008      	BRLO _0x202004C
                 _0x202004B:
000347 c008      	RJMP _0x202004A
                 _0x202004C:
000348 6200      	ORI  R16,LOW(32)
000349 e0aa      	LDI  R26,LOW(10)
00034a 9f4a      	MUL  R20,R26
00034b 2d40      	MOV  R20,R0
00034c 2fe2      	MOV  R30,R18
00034d 53e0      	SUBI R30,LOW(48)
00034e 0f4e      	ADD  R20,R30
00034f c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000350 362c      	CPI  R18,108
000351 f419      	BRNE _0x202004D
000352 6002      	ORI  R16,LOW(2)
000353 e015      	LDI  R17,LOW(5)
000354 c193      	RJMP _0x2020035
                 _0x202004D:
000355 c003      	RJMP _0x202004E
                 _0x2020049:
000356 30e5      	CPI  R30,LOW(0x5)
000357 f009      	BREQ PC+2
000358 c18f      	RJMP _0x2020035
                 _0x202004E:
000359 2fe2      	MOV  R30,R18
00035a 36e3      	CPI  R30,LOW(0x63)
00035b f459      	BRNE _0x2020053
00035c 940e 06c7 	CALL SUBOPT_0x14
00035e 940e 06ce 	CALL SUBOPT_0x15
000360 940e 06c7 	CALL SUBOPT_0x14
000362 81a4      	LDD  R26,Z+4
000363 93aa      	ST   -Y,R26
000364 940e 06d5 	CALL SUBOPT_0x16
000366 c180      	RJMP _0x2020054
                 _0x2020053:
000367 34e5      	CPI  R30,LOW(0x45)
000368 f011      	BREQ _0x2020057
000369 36e5      	CPI  R30,LOW(0x65)
00036a f409      	BRNE _0x2020058
                 _0x2020057:
00036b c003      	RJMP _0x2020059
                 _0x2020058:
00036c 36e6      	CPI  R30,LOW(0x66)
00036d f009      	BREQ PC+2
00036e c048      	RJMP _0x202005A
                 _0x2020059:
00036f 01fe      	MOVW R30,R28
000370 9676      	ADIW R30,22
000371 87ee      	STD  Y+14,R30
000372 87ff      	STD  Y+14+1,R31
000373 940e 06db 	CALL SUBOPT_0x17
000375 940e 096d 	CALL __GETD1P
000377 940e 06e2 	CALL SUBOPT_0x18
000379 940e 06e7 	CALL SUBOPT_0x19
00037b 85ad      	LDD  R26,Y+13
00037c 23aa      	TST  R26
00037d f032      	BRMI _0x202005B
00037e 89ad      	LDD  R26,Y+21
00037f 32ab      	CPI  R26,LOW(0x2B)
000380 f059      	BREQ _0x202005D
000381 32a0      	CPI  R26,LOW(0x20)
000382 f081      	BREQ _0x202005F
000383 c017      	RJMP _0x2020060
                 _0x202005B:
000384 940e 06e9 	CALL SUBOPT_0x1A
000386 940e 0755 	CALL __ANEGF1
000388 940e 06e2 	CALL SUBOPT_0x18
00038a e2ed      	LDI  R30,LOW(45)
00038b 8bed      	STD  Y+21,R30
                 _0x202005D:
00038c ff07      	SBRS R16,7
00038d c005      	RJMP _0x2020061
00038e 89ed      	LDD  R30,Y+21
00038f 93ea      	ST   -Y,R30
000390 940e 06d5 	CALL SUBOPT_0x16
000392 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000393 85ee      	LDD  R30,Y+14
000394 85ff      	LDD  R31,Y+14+1
000395 9631      	ADIW R30,1
000396 87ee      	STD  Y+14,R30
000397 87ff      	STD  Y+14+1,R31
000398 9731      	SBIW R30,1
000399 89ad      	LDD  R26,Y+21
00039a 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
00039b ff05      	SBRS R16,5
00039c e046      	LDI  R20,LOW(6)
00039d 3626      	CPI  R18,102
00039e f451      	BRNE _0x2020064
00039f 940e 06e9 	CALL SUBOPT_0x1A
0003a1 940e 0987 	CALL __PUTPARD1
0003a3 934a      	ST   -Y,R20
0003a4 89ab      	LDD  R26,Y+19
0003a5 89bc      	LDD  R27,Y+19+1
0003a6 940e 0594 	CALL _ftoa
0003a8 c009      	RJMP _0x2020065
                 _0x2020064:
0003a9 940e 06e9 	CALL SUBOPT_0x1A
0003ab 940e 0987 	CALL __PUTPARD1
0003ad 934a      	ST   -Y,R20
0003ae 932a      	ST   -Y,R18
0003af 89ac      	LDD  R26,Y+20
0003b0 89bd      	LDD  R27,Y+20+1
0003b1 de54      	RCALL __ftoe_G101
                 _0x2020065:
0003b2 01fe      	MOVW R30,R28
0003b3 9676      	ADIW R30,22
0003b4 940e 06ee 	CALL SUBOPT_0x1B
0003b6 c01e      	RJMP _0x2020066
                 _0x202005A:
0003b7 37e3      	CPI  R30,LOW(0x73)
0003b8 f439      	BRNE _0x2020068
0003b9 940e 06e7 	CALL SUBOPT_0x19
0003bb 940e 06f6 	CALL SUBOPT_0x1C
0003bd 940e 06ee 	CALL SUBOPT_0x1B
0003bf c00e      	RJMP _0x2020069
                 _0x2020068:
0003c0 37e0      	CPI  R30,LOW(0x70)
0003c1 f4c1      	BRNE _0x202006B
0003c2 940e 06e7 	CALL SUBOPT_0x19
0003c4 940e 06f6 	CALL SUBOPT_0x1C
0003c6 87ee      	STD  Y+14,R30
0003c7 87ff      	STD  Y+14+1,R31
0003c8 85ae      	LDD  R26,Y+14
0003c9 85bf      	LDD  R27,Y+14+1
0003ca 940e 053f 	CALL _strlenf
0003cc 2f1e      	MOV  R17,R30
0003cd 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0003ce 770f      	ANDI R16,LOW(127)
0003cf 3040      	CPI  R20,0
0003d0 f011      	BREQ _0x202006D
0003d1 1741      	CP   R20,R17
0003d2 f008      	BRLO _0x202006E
                 _0x202006D:
0003d3 c001      	RJMP _0x202006C
                 _0x202006E:
0003d4 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0003d5 e040      	LDI  R20,LOW(0)
0003d6 e0e0      	LDI  R30,LOW(0)
0003d7 8bec      	STD  Y+20,R30
0003d8 e030      	LDI  R19,LOW(0)
0003d9 c06d      	RJMP _0x202006F
                 _0x202006B:
0003da 36e4      	CPI  R30,LOW(0x64)
0003db f011      	BREQ _0x2020072
0003dc 36e9      	CPI  R30,LOW(0x69)
0003dd f411      	BRNE _0x2020073
                 _0x2020072:
0003de 6004      	ORI  R16,LOW(4)
0003df c002      	RJMP _0x2020074
                 _0x2020073:
0003e0 37e5      	CPI  R30,LOW(0x75)
0003e1 f4a1      	BRNE _0x2020075
                 _0x2020074:
0003e2 e0ea      	LDI  R30,LOW(10)
0003e3 8bec      	STD  Y+20,R30
0003e4 ff01      	SBRS R16,1
0003e5 c008      	RJMP _0x2020076
                +
0003e6 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003e7 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003e8 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003e9 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003ea 940e 06fb 	CALL SUBOPT_0x1D
0003ec e01a      	LDI  R17,LOW(10)
0003ed c022      	RJMP _0x2020077
                 _0x2020076:
                +
0003ee e1e0     +LDI R30 , LOW ( 0x2710 )
0003ef e2f7     +LDI R31 , HIGH ( 0x2710 )
0003f0 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003f1 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003f2 940e 06fb 	CALL SUBOPT_0x1D
0003f4 e015      	LDI  R17,LOW(5)
0003f5 c01a      	RJMP _0x2020077
                 _0x2020075:
0003f6 35e8      	CPI  R30,LOW(0x58)
0003f7 f411      	BRNE _0x2020079
0003f8 6008      	ORI  R16,LOW(8)
0003f9 c003      	RJMP _0x202007A
                 _0x2020079:
0003fa 37e8      	CPI  R30,LOW(0x78)
0003fb f009      	BREQ PC+2
0003fc c0ea      	RJMP _0x20200B8
                 _0x202007A:
0003fd e1e0      	LDI  R30,LOW(16)
0003fe 8bec      	STD  Y+20,R30
0003ff ff01      	SBRS R16,1
000400 c008      	RJMP _0x202007C
                +
000401 e0e0     +LDI R30 , LOW ( 0x10000000 )
000402 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000403 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000404 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000405 940e 06fb 	CALL SUBOPT_0x1D
000407 e018      	LDI  R17,LOW(8)
000408 c007      	RJMP _0x2020077
                 _0x202007C:
                +
000409 e0e0     +LDI R30 , LOW ( 0x1000 )
00040a e1f0     +LDI R31 , HIGH ( 0x1000 )
00040b e060     +LDI R22 , BYTE3 ( 0x1000 )
00040c e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00040d 940e 06fb 	CALL SUBOPT_0x1D
00040f e014      	LDI  R17,LOW(4)
                 _0x2020077:
000410 3040      	CPI  R20,0
000411 f011      	BREQ _0x202007D
000412 770f      	ANDI R16,LOW(127)
000413 c001      	RJMP _0x202007E
                 _0x202007D:
000414 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000415 ff01      	SBRS R16,1
000416 c008      	RJMP _0x202007F
000417 940e 06e7 	CALL SUBOPT_0x19
000419 940e 06db 	CALL SUBOPT_0x17
00041b 9614      	ADIW R26,4
00041c 940e 096d 	CALL __GETD1P
00041e c00f      	RJMP _0x2020115
                 _0x202007F:
00041f ff02      	SBRS R16,2
000420 c007      	RJMP _0x2020081
000421 940e 06e7 	CALL SUBOPT_0x19
000423 940e 06f6 	CALL SUBOPT_0x1C
000425 940e 0910 	CALL __CWD1
000427 c006      	RJMP _0x2020115
                 _0x2020081:
000428 940e 06e7 	CALL SUBOPT_0x19
00042a 940e 06f6 	CALL SUBOPT_0x1C
00042c 2766      	CLR  R22
00042d 2777      	CLR  R23
                 _0x2020115:
                +
00042e 87ea     +STD Y + 10 , R30
00042f 87fb     +STD Y + 10 + 1 , R31
000430 876c     +STD Y + 10 + 2 , R22
000431 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000432 ff02      	SBRS R16,2
000433 c012      	RJMP _0x2020083
000434 85ad      	LDD  R26,Y+13
000435 23aa      	TST  R26
000436 f442      	BRPL _0x2020084
000437 940e 06e9 	CALL SUBOPT_0x1A
000439 940e 0902 	CALL __ANEGD1
00043b 940e 06e2 	CALL SUBOPT_0x18
00043d e2ed      	LDI  R30,LOW(45)
00043e 8bed      	STD  Y+21,R30
                 _0x2020084:
00043f 89ed      	LDD  R30,Y+21
000440 30e0      	CPI  R30,0
000441 f019      	BREQ _0x2020085
000442 5f1f      	SUBI R17,-LOW(1)
000443 5f4f      	SUBI R20,-LOW(1)
000444 c001      	RJMP _0x2020086
                 _0x2020085:
000445 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000446 2f34      	MOV  R19,R20
                 _0x202006F:
000447 fd00      	SBRC R16,0
000448 c014      	RJMP _0x2020087
                 _0x2020088:
000449 1715      	CP   R17,R21
00044a f410      	BRSH _0x202008B
00044b 1735      	CP   R19,R21
00044c f008      	BRLO _0x202008C
                 _0x202008B:
00044d c00f      	RJMP _0x202008A
                 _0x202008C:
00044e ff07      	SBRS R16,7
00044f c008      	RJMP _0x202008D
000450 ff02      	SBRS R16,2
000451 c004      	RJMP _0x202008E
000452 7f0b      	ANDI R16,LOW(251)
000453 892d      	LDD  R18,Y+21
000454 5011      	SUBI R17,LOW(1)
000455 c001      	RJMP _0x202008F
                 _0x202008E:
000456 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000457 c001      	RJMP _0x2020090
                 _0x202008D:
000458 e220      	LDI  R18,LOW(32)
                 _0x2020090:
000459 940e 06c0 	CALL SUBOPT_0x13
00045b 5051      	SUBI R21,LOW(1)
00045c cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
00045d 1714      	CP   R17,R20
00045e f490      	BRSH _0x2020093
00045f 6100      	ORI  R16,LOW(16)
000460 ff02      	SBRS R16,2
000461 c006      	RJMP _0x2020094
000462 940e 0700 	CALL SUBOPT_0x1E
000464 f009      	BREQ _0x2020095
000465 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000466 5011      	SUBI R17,LOW(1)
000467 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000468 e3e0      	LDI  R30,LOW(48)
000469 93ea      	ST   -Y,R30
00046a 940e 06d5 	CALL SUBOPT_0x16
00046c 3050      	CPI  R21,0
00046d f009      	BREQ _0x2020096
00046e 5051      	SUBI R21,LOW(1)
                 _0x2020096:
00046f 5041      	SUBI R20,LOW(1)
000470 cfec      	RJMP _0x2020091
                 _0x2020093:
000471 2f31      	MOV  R19,R17
000472 89ec      	LDD  R30,Y+20
000473 30e0      	CPI  R30,0
000474 f4b9      	BRNE _0x2020097
                 _0x2020098:
000475 3030      	CPI  R19,0
000476 f0a1      	BREQ _0x202009A
000477 ff03      	SBRS R16,3
000478 c006      	RJMP _0x202009B
000479 85ee      	LDD  R30,Y+14
00047a 85ff      	LDD  R31,Y+14+1
00047b 9125      	LPM  R18,Z+
00047c 87ee      	STD  Y+14,R30
00047d 87ff      	STD  Y+14+1,R31
00047e c005      	RJMP _0x202009C
                 _0x202009B:
00047f 85ae      	LDD  R26,Y+14
000480 85bf      	LDD  R27,Y+14+1
000481 912d      	LD   R18,X+
000482 87ae      	STD  Y+14,R26
000483 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000484 940e 06c0 	CALL SUBOPT_0x13
000486 3050      	CPI  R21,0
000487 f009      	BREQ _0x202009D
000488 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000489 5031      	SUBI R19,LOW(1)
00048a cfea      	RJMP _0x2020098
                 _0x202009A:
00048b c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
00048c 940e 0712 	CALL SUBOPT_0x1F
00048e 940e 0928 	CALL __DIVD21U
000490 2f2e      	MOV  R18,R30
000491 302a      	CPI  R18,10
000492 f030      	BRLO _0x20200A2
000493 ff03      	SBRS R16,3
000494 c002      	RJMP _0x20200A3
000495 5c29      	SUBI R18,-LOW(55)
000496 c001      	RJMP _0x20200A4
                 _0x20200A3:
000497 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000498 c001      	RJMP _0x20200A5
                 _0x20200A2:
000499 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
00049a fd04      	SBRC R16,4
00049b c021      	RJMP _0x20200A7
00049c 3321      	CPI  R18,49
00049d f460      	BRSH _0x20200A9
                +
00049e 89a8     +LDD R26 , Y + 16
00049f 89b9     +LDD R27 , Y + 16 + 1
0004a0 898a     +LDD R24 , Y + 16 + 2
0004a1 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0004a2 30a1     +CPI R26 , LOW ( 0x1 )
0004a3 e0e0     +LDI R30 , HIGH ( 0x1 )
0004a4 07be     +CPC R27 , R30
0004a5 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0004a6 078e     +CPC R24 , R30
0004a7 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0004a8 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0004a9 f409      	BRNE _0x20200A8
                 _0x20200A9:
0004aa c00b      	RJMP _0x20200AB
                 _0x20200A8:
0004ab 1743      	CP   R20,R19
0004ac f440      	BRSH _0x2020116
0004ad 1753      	CP   R21,R19
0004ae f010      	BRLO _0x20200AE
0004af ff00      	SBRS R16,0
0004b0 c001      	RJMP _0x20200AF
                 _0x20200AE:
0004b1 c010      	RJMP _0x20200AD
                 _0x20200AF:
0004b2 e220      	LDI  R18,LOW(32)
0004b3 ff07      	SBRS R16,7
0004b4 c008      	RJMP _0x20200B0
                 _0x2020116:
0004b5 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0004b6 6100      	ORI  R16,LOW(16)
0004b7 ff02      	SBRS R16,2
0004b8 c004      	RJMP _0x20200B1
0004b9 940e 0700 	CALL SUBOPT_0x1E
0004bb f009      	BREQ _0x20200B2
0004bc 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0004bd 940e 06c0 	CALL SUBOPT_0x13
0004bf 3050      	CPI  R21,0
0004c0 f009      	BREQ _0x20200B3
0004c1 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0004c2 5031      	SUBI R19,LOW(1)
0004c3 940e 0712 	CALL SUBOPT_0x1F
0004c5 940e 0959 	CALL __MODD21U
0004c7 940e 06e2 	CALL SUBOPT_0x18
0004c9 89ec      	LDD  R30,Y+20
                +
0004ca 89a8     +LDD R26 , Y + 16
0004cb 89b9     +LDD R27 , Y + 16 + 1
0004cc 898a     +LDD R24 , Y + 16 + 2
0004cd 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0004ce 27ff      	CLR  R31
0004cf 2766      	CLR  R22
0004d0 2777      	CLR  R23
0004d1 940e 0928 	CALL __DIVD21U
0004d3 940e 06fb 	CALL SUBOPT_0x1D
                +
0004d5 89e8     +LDD R30 , Y + 16
0004d6 89f9     +LDD R31 , Y + 16 + 1
0004d7 896a     +LDD R22 , Y + 16 + 2
0004d8 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004d9 940e 099e 	CALL __CPD10
0004db f009      	BREQ _0x20200A1
0004dc cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0004dd ff00      	SBRS R16,0
0004de c008      	RJMP _0x20200B4
                 _0x20200B5:
0004df 3050      	CPI  R21,0
0004e0 f031      	BREQ _0x20200B7
0004e1 5051      	SUBI R21,LOW(1)
0004e2 e2e0      	LDI  R30,LOW(32)
0004e3 93ea      	ST   -Y,R30
0004e4 940e 06d5 	CALL SUBOPT_0x16
0004e6 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0004e7 e010      	LDI  R17,LOW(0)
                 _0x2020035:
0004e8 ce0c      	RJMP _0x2020030
                 _0x2020032:
0004e9 81ae      	LDD  R26,Y+6
0004ea 81bf      	LDD  R27,Y+6+1
0004eb 940e 0969 	CALL __GETW1P
0004ed 940e 09a9 	CALL __LOADLOCR6
0004ef 96ef      	ADIW R28,63
0004f0 966f      	ADIW R28,31
0004f1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004f2 92ff      	PUSH R15
0004f3 2ef8      	MOV  R15,R24
0004f4 9726      	SBIW R28,6
0004f5 940e 09a4 	CALL __SAVELOCR4
0004f7 940e 071b 	CALL SUBOPT_0x20
0004f9 9730      	SBIW R30,0
0004fa f419      	BRNE _0x20200B9
0004fb efef      	LDI  R30,LOW(65535)
0004fc efff      	LDI  R31,HIGH(65535)
0004fd c023      	RJMP _0x20C0004
                 _0x20200B9:
0004fe 01de      	MOVW R26,R28
0004ff 9616      	ADIW R26,6
000500 940e 08fe 	CALL __ADDW2R15
000502 018d      	MOVW R16,R26
000503 940e 071b 	CALL SUBOPT_0x20
000505 83ee      	STD  Y+6,R30
000506 83ff      	STD  Y+6+1,R31
000507 e0e0      	LDI  R30,LOW(0)
000508 87e8      	STD  Y+8,R30
000509 87e9      	STD  Y+8+1,R30
00050a 01de      	MOVW R26,R28
00050b 961a      	ADIW R26,10
00050c 940e 08fe 	CALL __ADDW2R15
00050e 940e 0969 	CALL __GETW1P
000510 93fa      	ST   -Y,R31
000511 93ea      	ST   -Y,R30
000512 931a      	ST   -Y,R17
000513 930a      	ST   -Y,R16
000514 ecec      	LDI  R30,LOW(_put_buff_G101)
000515 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000516 93fa      	ST   -Y,R31
000517 93ea      	ST   -Y,R30
000518 01de      	MOVW R26,R28
000519 961a      	ADIW R26,10
00051a ddbd      	RCALL __print_G101
00051b 019f      	MOVW R18,R30
00051c 81ae      	LDD  R26,Y+6
00051d 81bf      	LDD  R27,Y+6+1
00051e e0e0      	LDI  R30,LOW(0)
00051f 93ec      	ST   X,R30
000520 01f9      	MOVW R30,R18
                 _0x20C0004:
000521 940e 09ab 	CALL __LOADLOCR4
000523 962a      	ADIW R28,10
000524 90ff      	POP  R15
000525 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000526 93ba      	ST   -Y,R27
000527 93aa      	ST   -Y,R26
000528 91e9          ld   r30,y+
000529 91f9          ld   r31,y+
00052a 91a9          ld   r26,y+
00052b 91b9          ld   r27,y+
00052c 01cd          movw r24,r26
                 strcpyf0:
00052d 9005      	lpm  r0,z+
00052e 920d          st   x+,r0
00052f 2000          tst  r0
000530 f7e1          brne strcpyf0
000531 01fc          movw r30,r24
000532 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000533 93ba      	ST   -Y,R27
000534 93aa      	ST   -Y,R26
000535 91a9          ld   r26,y+
000536 91b9          ld   r27,y+
000537 27ee          clr  r30
000538 27ff          clr  r31
                 strlen0:
000539 916d          ld   r22,x+
00053a 2366          tst  r22
00053b f011          breq strlen1
00053c 9631          adiw r30,1
00053d cffb          rjmp strlen0
                 strlen1:
00053e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00053f 93ba      	ST   -Y,R27
000540 93aa      	ST   -Y,R26
000541 27aa          clr  r26
000542 27bb          clr  r27
000543 91e9          ld   r30,y+
000544 91f9          ld   r31,y+
                 strlenf0:
000545 9005      	lpm  r0,z+
000546 2000          tst  r0
000547 f011          breq strlenf1
000548 9611          adiw r26,1
000549 cffb          rjmp strlenf0
                 strlenf1:
00054a 01fd          movw r30,r26
00054b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00054c 940e 098c 	CALL __PUTPARD2
00054e 817b         ldd  r23,y+3
00054f 816a         ldd  r22,y+2
000550 81f9         ldd  r31,y+1
000551 81e8         ld   r30,y
000552 fb77         bst  r23,7
000553 0f77         lsl  r23
000554 fd67         sbrc r22,7
000555 6071         sbr  r23,1
000556 2f97         mov  r25,r23
000557 579e         subi r25,0x7e
000558 f081         breq __ftrunc0
000559 f078         brcs __ftrunc0
00055a 3198         cpi  r25,24
00055b f490         brsh __ftrunc1
00055c 27aa         clr  r26
00055d 27bb         clr  r27
00055e 2788         clr  r24
                 __ftrunc2:
00055f 9408         sec
000560 9587         ror  r24
000561 95b7         ror  r27
000562 95a7         ror  r26
000563 959a         dec  r25
000564 f7d1         brne __ftrunc2
000565 23ea         and  r30,r26
000566 23fb         and  r31,r27
000567 2368         and  r22,r24
000568 c005         rjmp __ftrunc1
                 __ftrunc0:
000569 94e8         clt
00056a 2777         clr  r23
00056b 27ee         clr  r30
00056c 27ff         clr  r31
00056d 2766         clr  r22
                 __ftrunc1:
00056e 776f         cbr  r22,0x80
00056f 9576         lsr  r23
000570 f408         brcc __ftrunc3
000571 6860         sbr  r22,0x80
                 __ftrunc3:
000572 f977         bld  r23,7
000573 91a9         ld   r26,y+
000574 91b9         ld   r27,y+
000575 9189         ld   r24,y+
000576 9199         ld   r25,y+
000577 17ea         cp   r30,r26
000578 07fb         cpc  r31,r27
000579 0768         cpc  r22,r24
00057a 0779         cpc  r23,r25
00057b fb97         bst  r25,7
00057c 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00057d 940e 098c 	CALL __PUTPARD2
00057f 940e 097d 	CALL __GETD2S0
000581 940e 054c 	CALL _ftrunc
000583 940e 0982 	CALL __PUTD1S0
000585 f419          brne __floor1
                 __floor0:
000586 940e 0978 	CALL __GETD1S0
000588 c009      	RJMP _0x20C0003
                 __floor1:
000589 f7e6          brtc __floor0
00058a 940e 0978 	CALL __GETD1S0
                +
00058c e0a0     +LDI R26 , LOW ( 0x3F800000 )
00058d e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00058e e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00058f e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000590 940e 07f4 	CALL __SUBF12
                 _0x20C0003:
000592 9624      	ADIW R28,4
000593 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000594 d0c8      	RCALL SUBOPT_0x6
000595 e0e0      	LDI  R30,LOW(0)
000596 83ea      	STD  Y+2,R30
000597 e3ef      	LDI  R30,LOW(63)
000598 83eb      	STD  Y+3,R30
000599 931a      	ST   -Y,R17
00059a 930a      	ST   -Y,R16
00059b 85eb      	LDD  R30,Y+11
00059c 85fc      	LDD  R31,Y+11+1
00059d 3fef      	CPI  R30,LOW(0xFFFF)
00059e efaf      	LDI  R26,HIGH(0xFFFF)
00059f 07fa      	CPC  R31,R26
0005a0 f431      	BRNE _0x20A000D
0005a1 d180      	RCALL SUBOPT_0x21
                +
0005a2 e8a2     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005a3 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005a4 940e 0526 	CALL _strcpyf
0005a6 c08a      	RJMP _0x20C0002
                 _0x20A000D:
0005a7 3fef      	CPI  R30,LOW(0x7FFF)
0005a8 e7af      	LDI  R26,HIGH(0x7FFF)
0005a9 07fa      	CPC  R31,R26
0005aa f431      	BRNE _0x20A000C
0005ab d176      	RCALL SUBOPT_0x21
                +
0005ac e8a3     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0005ad e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0005ae 940e 0526 	CALL _strcpyf
0005b0 c080      	RJMP _0x20C0002
                 _0x20A000C:
0005b1 85ac      	LDD  R26,Y+12
0005b2 23aa      	TST  R26
0005b3 f452      	BRPL _0x20A000F
                +
0005b4 85e9     +LDD R30 , Y + 9
0005b5 85fa     +LDD R31 , Y + 9 + 1
0005b6 856b     +LDD R22 , Y + 9 + 2
0005b7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005b8 940e 0755 	CALL __ANEGF1
0005ba d16c      	RCALL SUBOPT_0x22
0005bb d170      	RCALL SUBOPT_0x23
0005bc e2ed      	LDI  R30,LOW(45)
0005bd 93ec      	ST   X,R30
                 _0x20A000F:
0005be 85a8      	LDD  R26,Y+8
0005bf 30a7      	CPI  R26,LOW(0x7)
0005c0 f010      	BRLO _0x20A0010
0005c1 e0e6      	LDI  R30,LOW(6)
0005c2 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005c3 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005c4 2fe1      	MOV  R30,R17
0005c5 5011      	SUBI R17,1
0005c6 30e0      	CPI  R30,0
0005c7 f021      	BREQ _0x20A0013
0005c8 d16a      	RCALL SUBOPT_0x24
0005c9 d0d8      	RCALL SUBOPT_0xE
0005ca d16d      	RCALL SUBOPT_0x25
0005cb cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005cc d170      	RCALL SUBOPT_0x26
0005cd 940e 07fb 	CALL __ADDF12
0005cf d157      	RCALL SUBOPT_0x22
0005d0 e010      	LDI  R17,LOW(0)
                +
0005d1 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0005d2 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0005d3 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0005d4 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0005d5 d162      	RCALL SUBOPT_0x25
                 _0x20A0014:
0005d6 d166      	RCALL SUBOPT_0x26
0005d7 940e 08de 	CALL __CMPF12
0005d9 f068      	BRLO _0x20A0016
0005da d158      	RCALL SUBOPT_0x24
0005db d0b3      	RCALL SUBOPT_0xB
0005dc d15b      	RCALL SUBOPT_0x25
0005dd 5f1f      	SUBI R17,-LOW(1)
0005de 3217      	CPI  R17,39
0005df f030      	BRLO _0x20A0017
0005e0 d141      	RCALL SUBOPT_0x21
                +
0005e1 e8a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005e2 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005e3 940e 0526 	CALL _strcpyf
0005e5 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005e6 cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005e7 3010      	CPI  R17,0
0005e8 f421      	BRNE _0x20A0018
0005e9 d142      	RCALL SUBOPT_0x23
0005ea e3e0      	LDI  R30,LOW(48)
0005eb 93ec      	ST   X,R30
0005ec c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005ed 2fe1      	MOV  R30,R17
0005ee 5011      	SUBI R17,1
0005ef 30e0      	CPI  R30,0
0005f0 f0e1      	BREQ _0x20A001C
0005f1 d141      	RCALL SUBOPT_0x24
0005f2 d0af      	RCALL SUBOPT_0xE
0005f3 d0a7      	RCALL SUBOPT_0xD
0005f4 01df      	MOVW R26,R30
0005f5 01cb      	MOVW R24,R22
0005f6 940e 057d 	CALL _floor
0005f8 d13f      	RCALL SUBOPT_0x25
0005f9 d143      	RCALL SUBOPT_0x26
0005fa 940e 0899 	CALL __DIVF21
0005fc 940e 0788 	CALL __CFD1U
0005fe 2f0e      	MOV  R16,R30
0005ff d12c      	RCALL SUBOPT_0x23
000600 d0af      	RCALL SUBOPT_0x10
000601 e0f0      	LDI  R31,0
000602 d130      	RCALL SUBOPT_0x24
000603 940e 0910 	CALL __CWD1
000605 940e 07c1 	CALL __CDF1
000607 940e 084b 	CALL __MULF12
000609 d13c      	RCALL SUBOPT_0x27
00060a d0aa      	RCALL SUBOPT_0x11
00060b d11b      	RCALL SUBOPT_0x22
00060c cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00060d 85e8      	LDD  R30,Y+8
00060e 30e0      	CPI  R30,0
00060f f0e9      	BREQ _0x20C0001
000610 d11b      	RCALL SUBOPT_0x23
000611 e2ee      	LDI  R30,LOW(46)
000612 93ec      	ST   X,R30
                 _0x20A001E:
000613 85e8      	LDD  R30,Y+8
000614 50e1      	SUBI R30,LOW(1)
000615 87e8      	STD  Y+8,R30
000616 5fef      	SUBI R30,-LOW(1)
000617 f0a9      	BREQ _0x20A0020
000618 d12d      	RCALL SUBOPT_0x27
000619 d075      	RCALL SUBOPT_0xB
00061a d10c      	RCALL SUBOPT_0x22
                +
00061b 85e9     +LDD R30 , Y + 9
00061c 85fa     +LDD R31 , Y + 9 + 1
00061d 856b     +LDD R22 , Y + 9 + 2
00061e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00061f 940e 0788 	CALL __CFD1U
000621 2f0e      	MOV  R16,R30
000622 d109      	RCALL SUBOPT_0x23
000623 d08c      	RCALL SUBOPT_0x10
000624 e0f0      	LDI  R31,0
000625 d120      	RCALL SUBOPT_0x27
000626 940e 0910 	CALL __CWD1
000628 940e 07c1 	CALL __CDF1
00062a d08a      	RCALL SUBOPT_0x11
00062b d0fb      	RCALL SUBOPT_0x22
00062c cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
00062d 81ae      	LDD  R26,Y+6
00062e 81bf      	LDD  R27,Y+6+1
00062f e0e0      	LDI  R30,LOW(0)
000630 93ec      	ST   X,R30
                 _0x20C0002:
000631 8119      	LDD  R17,Y+1
000632 8108      	LDD  R16,Y+0
000633 962d      	ADIW R28,13
000634 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _t1:
000260           	.BYTE 0x4
                 _t2:
000264           	.BYTE 0x4
                 _t3:
000268           	.BYTE 0x4
                 _t4:
00026c           	.BYTE 0x4
                 _st1:
000270           	.BYTE 0x14
                 _st2:
000284           	.BYTE 0x14
                 __base_y_G100:
000298           	.BYTE 0x4
                 __seed_G105:
00029c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000635 2766      	CLR  R22
000636 2777      	CLR  R23
000637 940e 07c1 	CALL __CDF1
000639 940e 0973 	CALL __PUTDP1
00063b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
                +
00063c eaea     +LDI R30 , LOW ( 0x4002F1AA )
00063d eff1     +LDI R31 , HIGH ( 0x4002F1AA )
00063e e062     +LDI R22 , BYTE3 ( 0x4002F1AA )
00063f e470     +LDI R23 , BYTE4 ( 0x4002F1AA )
                 	__GETD1N 0x4002F1AA
000640 940e 0899 	CALL __DIVF21
000642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000643 940e 0987 	CALL __PUTPARD1
000645 e088      	LDI  R24,8
000646 940e 04f2 	CALL _sprintf
000648 962c      	ADIW R28,12
000649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00064a 940e 0154 	CALL __lcd_write_data
00064c e0a3      	LDI  R26,LOW(3)
00064d e0b0      	LDI  R27,0
00064e 940c 074b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000650 e3a0      	LDI  R26,LOW(48)
000651 940e 0140 	CALL __lcd_write_nibble_G100
                +
000653 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000654 958a     +DEC R24
000655 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000656 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000657 91ed      	LD   R30,X+
000658 91fd      	LD   R31,X+
000659 9631      	ADIW R30,1
00065a 93fe      	ST   -X,R31
00065b 93ee      	ST   -X,R30
00065c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00065d 93ba      	ST   -Y,R27
00065e 93aa      	ST   -Y,R26
00065f 9724      	SBIW R28,4
000660 e0e0      	LDI  R30,LOW(0)
000661 83e8      	ST   Y,R30
000662 83e9      	STD  Y+1,R30
000663 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7:
                +
000664 81ac     +LDD R26 , Y + 4
000665 81bd     +LDD R27 , Y + 4 + 1
000666 818e     +LDD R24 , Y + 4 + 2
000667 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000668 e0e0     +LDI R30 , LOW ( 0x41200000 )
000669 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00066a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00066b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00066c 940e 084b 	CALL __MULF12
                +
00066e 83ec     +STD Y + 4 , R30
00066f 83fd     +STD Y + 4 + 1 , R31
000670 836e     +STD Y + 4 + 2 , R22
000671 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8:
                +
000673 81ec     +LDD R30 , Y + 4
000674 81fd     +LDD R31 , Y + 4 + 1
000675 816e     +LDD R22 , Y + 4 + 2
000676 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000677 85ac     +LDD R26 , Y + 12
000678 85bd     +LDD R27 , Y + 12 + 1
000679 858e     +LDD R24 , Y + 12 + 2
00067a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00067b 940e 08de 	CALL __CMPF12
00067d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
00067e 85ac     +LDD R26 , Y + 12
00067f 85bd     +LDD R27 , Y + 12 + 1
000680 858e     +LDD R24 , Y + 12 + 2
000681 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000682 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
                +
000683 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000684 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000685 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000686 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000687 940e 084b 	CALL __MULF12
                +
000689 87ec     +STD Y + 12 , R30
00068a 87fd     +STD Y + 12 + 1 , R31
00068b 876e     +STD Y + 12 + 2 , R22
00068c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00068d 5f3f      	SUBI R19,-LOW(1)
00068e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
00068f e0e0     +LDI R30 , LOW ( 0x41200000 )
000690 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000691 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000692 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000693 940e 084b 	CALL __MULF12
000695 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
000696 87ec     +STD Y + 12 , R30
000697 87fd     +STD Y + 12 + 1 , R31
000698 876e     +STD Y + 12 + 2 , R22
000699 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
00069b e0a0     +LDI R26 , LOW ( 0x3F000000 )
00069c e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00069d e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00069e e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00069f 940e 07fb 	CALL __ADDF12
0006a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
0006a2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006a3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006a4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006a5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006a6 940e 084b 	CALL __MULF12
0006a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006a9 85a8      	LDD  R26,Y+8
0006aa 85b9      	LDD  R27,Y+8+1
0006ab 9611      	ADIW R26,1
0006ac 87a8      	STD  Y+8,R26
0006ad 87b9      	STD  Y+8+1,R27
0006ae 9711      	SBIW R26,1
0006af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0006b0 2fe0      	MOV  R30,R16
0006b1 5de0      	SUBI R30,-LOW(48)
0006b2 93ec      	ST   X,R30
0006b3 2fe0      	MOV  R30,R16
0006b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0006b5 940e 0991 	CALL __SWAPD12
0006b7 940e 07f4 	CALL __SUBF12
0006b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
0006ba 85e8      	LDD  R30,Y+8
0006bb 85f9      	LDD  R31,Y+8+1
0006bc 9631      	ADIW R30,1
0006bd 87e8      	STD  Y+8,R30
0006be 87f9      	STD  Y+8+1,R31
0006bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13:
0006c0 932a      	ST   -Y,R18
0006c1 81af      	LDD  R26,Y+7
0006c2 85b8      	LDD  R27,Y+7+1
0006c3 85e9      	LDD  R30,Y+9
0006c4 85fa      	LDD  R31,Y+9+1
0006c5 9509      	ICALL
0006c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x14:
                +
0006c7 01fe     +MOVW R30 , R28
0006c8 5ae6     +SUBI R30 , LOW ( - 90 )
0006c9 4fff     +SBCI R31 , HIGH ( - 90 )
0006ca 9001     +LD R0 , Z +
0006cb 81f0     +LD R31 , Z
0006cc 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x15:
0006ce 9734      	SBIW R30,4
                +
0006cf 01de     +MOVW R26 , R28
0006d0 5aa6     +SUBI R26 , LOW ( - 90 )
0006d1 4fbf     +SBCI R27 , HIGH ( - 90 )
0006d2 93ed     +ST X + , R30
0006d3 93fc     +ST X , R31
                 	__PUTW1SX 90
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
0006d5 81af      	LDD  R26,Y+7
0006d6 85b8      	LDD  R27,Y+7+1
0006d7 85e9      	LDD  R30,Y+9
0006d8 85fa      	LDD  R31,Y+9+1
0006d9 9509      	ICALL
0006da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17:
                +
0006db 01de     +MOVW R26 , R28
0006dc 5aa6     +SUBI R26 , LOW ( - 90 )
0006dd 4fbf     +SBCI R27 , HIGH ( - 90 )
0006de 900d     +LD R0 , X +
0006df 91bc     +LD R27 , X
0006e0 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
0006e2 87ea     +STD Y + 10 , R30
0006e3 87fb     +STD Y + 10 + 1 , R31
0006e4 876c     +STD Y + 10 + 2 , R22
0006e5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
0006e7 dfdf      	RCALL SUBOPT_0x14
0006e8 cfe5      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
0006e9 85ea     +LDD R30 , Y + 10
0006ea 85fb     +LDD R31 , Y + 10 + 1
0006eb 856c     +LDD R22 , Y + 10 + 2
0006ec 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
0006ee 87ee      	STD  Y+14,R30
0006ef 87ff      	STD  Y+14+1,R31
0006f0 85ae      	LDD  R26,Y+14
0006f1 85bf      	LDD  R27,Y+14+1
0006f2 940e 0533 	CALL _strlen
0006f4 2f1e      	MOV  R17,R30
0006f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
0006f6 dfe4      	RCALL SUBOPT_0x17
0006f7 9614      	ADIW R26,4
0006f8 940e 0969 	CALL __GETW1P
0006fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
0006fb 8be8     +STD Y + 16 , R30
0006fc 8bf9     +STD Y + 16 + 1 , R31
0006fd 8b6a     +STD Y + 16 + 2 , R22
0006fe 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0006ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
000700 7f0b      	ANDI R16,LOW(251)
000701 89ed      	LDD  R30,Y+21
000702 93ea      	ST   -Y,R30
                +
000703 01de     +MOVW R26 , R28
000704 5aa9     +SUBI R26 , LOW ( - 87 )
000705 4fbf     +SBCI R27 , HIGH ( - 87 )
000706 900d     +LD R0 , X +
000707 91bc     +LD R27 , X
000708 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000709 01fe     +MOVW R30 , R28
00070a 5ae7     +SUBI R30 , LOW ( - 89 )
00070b 4fff     +SBCI R31 , HIGH ( - 89 )
00070c 9001     +LD R0 , Z +
00070d 81f0     +LD R31 , Z
00070e 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00070f 9509      	ICALL
000710 3050      	CPI  R21,0
000711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
000712 89e8     +LDD R30 , Y + 16
000713 89f9     +LDD R31 , Y + 16 + 1
000714 896a     +LDD R22 , Y + 16 + 2
000715 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000716 85aa     +LDD R26 , Y + 10
000717 85bb     +LDD R27 , Y + 10 + 1
000718 858c     +LDD R24 , Y + 10 + 2
000719 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00071a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
00071b 01de      	MOVW R26,R28
00071c 961c      	ADIW R26,12
00071d 940e 08fe 	CALL __ADDW2R15
00071f 940e 0969 	CALL __GETW1P
000721 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000722 81ee      	LDD  R30,Y+6
000723 81ff      	LDD  R31,Y+6+1
000724 93fa      	ST   -Y,R31
000725 93ea      	ST   -Y,R30
000726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000727 87e9     +STD Y + 9 , R30
000728 87fa     +STD Y + 9 + 1 , R31
000729 876b     +STD Y + 9 + 2 , R22
00072a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00072b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
00072c 81ae      	LDD  R26,Y+6
00072d 81bf      	LDD  R27,Y+6+1
00072e 9611      	ADIW R26,1
00072f 83ae      	STD  Y+6,R26
000730 83bf      	STD  Y+6+1,R27
000731 9711      	SBIW R26,1
000732 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000733 81aa     +LDD R26 , Y + 2
000734 81bb     +LDD R27 , Y + 2 + 1
000735 818c     +LDD R24 , Y + 2 + 2
000736 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000737 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
000738 83ea     +STD Y + 2 , R30
000739 83fb     +STD Y + 2 + 1 , R31
00073a 836c     +STD Y + 2 + 2 , R22
00073b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00073c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26:
                +
00073d 81ea     +LDD R30 , Y + 2
00073e 81fb     +LDD R31 , Y + 2 + 1
00073f 816c     +LDD R22 , Y + 2 + 2
000740 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000741 85a9     +LDD R26 , Y + 9
000742 85ba     +LDD R27 , Y + 9 + 1
000743 858b     +LDD R24 , Y + 9 + 2
000744 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000745 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000746 85a9     +LDD R26 , Y + 9
000747 85ba     +LDD R27 , Y + 9 + 1
000748 858b     +LDD R24 , Y + 9 + 2
000749 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00074a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00074b 9610      	adiw r26,0
00074c f039      	breq __delay_ms1
                 __delay_ms0:
00074d 95a8      	wdr
                +
00074e ef8a     +LDI R24 , LOW ( 0xFA )
00074f e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000750 9701     +SBIW R24 , 1
000751 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000752 9711      	sbiw r26,1
000753 f7c9      	brne __delay_ms0
                 __delay_ms1:
000754 9508      	ret
                 
                 __ANEGF1:
000755 9730      	SBIW R30,0
000756 4060      	SBCI R22,0
000757 4070      	SBCI R23,0
000758 f009      	BREQ __ANEGF10
000759 5870      	SUBI R23,0x80
                 __ANEGF10:
00075a 9508      	RET
                 
                 __ROUND_REPACK:
00075b 2355      	TST  R21
00075c f442      	BRPL __REPACK
00075d 3850      	CPI  R21,0x80
00075e f411      	BRNE __ROUND_REPACK0
00075f ffe0      	SBRS R30,0
000760 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000761 9631      	ADIW R30,1
000762 1f69      	ADC  R22,R25
000763 1f79      	ADC  R23,R25
000764 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000765 e850      	LDI  R21,0x80
000766 2757      	EOR  R21,R23
000767 f411      	BRNE __REPACK0
000768 935f      	PUSH R21
000769 c0cf      	RJMP __ZERORES
                 __REPACK0:
00076a 3f5f      	CPI  R21,0xFF
00076b f031      	BREQ __REPACK1
00076c 0f66      	LSL  R22
00076d 0c00      	LSL  R0
00076e 9557      	ROR  R21
00076f 9567      	ROR  R22
000770 2f75      	MOV  R23,R21
000771 9508      	RET
                 __REPACK1:
000772 935f      	PUSH R21
000773 2000      	TST  R0
000774 f00a      	BRMI __REPACK2
000775 c0cf      	RJMP __MAXRES
                 __REPACK2:
000776 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000777 e850      	LDI  R21,0x80
000778 2e19      	MOV  R1,R25
000779 2215      	AND  R1,R21
00077a 0f88      	LSL  R24
00077b 1f99      	ROL  R25
00077c 2795      	EOR  R25,R21
00077d 0f55      	LSL  R21
00077e 9587      	ROR  R24
                 
                 __UNPACK1:
00077f e850      	LDI  R21,0x80
000780 2e07      	MOV  R0,R23
000781 2205      	AND  R0,R21
000782 0f66      	LSL  R22
000783 1f77      	ROL  R23
000784 2775      	EOR  R23,R21
000785 0f55      	LSL  R21
000786 9567      	ROR  R22
000787 9508      	RET
                 
                 __CFD1U:
000788 9468      	SET
000789 c001      	RJMP __CFD1U0
                 __CFD1:
00078a 94e8      	CLT
                 __CFD1U0:
00078b 935f      	PUSH R21
00078c dff2      	RCALL __UNPACK1
00078d 3870      	CPI  R23,0x80
00078e f018      	BRLO __CFD10
00078f 3f7f      	CPI  R23,0xFF
000790 f408      	BRCC __CFD10
000791 c0a7      	RJMP __ZERORES
                 __CFD10:
000792 e156      	LDI  R21,22
000793 1b57      	SUB  R21,R23
000794 f4aa      	BRPL __CFD11
000795 9551      	NEG  R21
000796 3058      	CPI  R21,8
000797 f40e      	BRTC __CFD19
000798 3059      	CPI  R21,9
                 __CFD19:
000799 f030      	BRLO __CFD17
00079a efef      	SER  R30
00079b efff      	SER  R31
00079c ef6f      	SER  R22
00079d e77f      	LDI  R23,0x7F
00079e f977      	BLD  R23,7
00079f c01a      	RJMP __CFD15
                 __CFD17:
0007a0 2777      	CLR  R23
0007a1 2355      	TST  R21
0007a2 f0b9      	BREQ __CFD15
                 __CFD18:
0007a3 0fee      	LSL  R30
0007a4 1fff      	ROL  R31
0007a5 1f66      	ROL  R22
0007a6 1f77      	ROL  R23
0007a7 955a      	DEC  R21
0007a8 f7d1      	BRNE __CFD18
0007a9 c010      	RJMP __CFD15
                 __CFD11:
0007aa 2777      	CLR  R23
                 __CFD12:
0007ab 3058      	CPI  R21,8
0007ac f028      	BRLO __CFD13
0007ad 2fef      	MOV  R30,R31
0007ae 2ff6      	MOV  R31,R22
0007af 2f67      	MOV  R22,R23
0007b0 5058      	SUBI R21,8
0007b1 cff9      	RJMP __CFD12
                 __CFD13:
0007b2 2355      	TST  R21
0007b3 f031      	BREQ __CFD15
                 __CFD14:
0007b4 9576      	LSR  R23
0007b5 9567      	ROR  R22
0007b6 95f7      	ROR  R31
0007b7 95e7      	ROR  R30
0007b8 955a      	DEC  R21
0007b9 f7d1      	BRNE __CFD14
                 __CFD15:
0007ba 2000      	TST  R0
0007bb f40a      	BRPL __CFD16
0007bc d145      	RCALL __ANEGD1
                 __CFD16:
0007bd 915f      	POP  R21
0007be 9508      	RET
                 
                 __CDF1U:
0007bf 9468      	SET
0007c0 c001      	RJMP __CDF1U0
                 __CDF1:
0007c1 94e8      	CLT
                 __CDF1U0:
0007c2 9730      	SBIW R30,0
0007c3 4060      	SBCI R22,0
0007c4 4070      	SBCI R23,0
0007c5 f0b1      	BREQ __CDF10
0007c6 2400      	CLR  R0
0007c7 f026      	BRTS __CDF11
0007c8 2377      	TST  R23
0007c9 f412      	BRPL __CDF11
0007ca 9400      	COM  R0
0007cb d136      	RCALL __ANEGD1
                 __CDF11:
0007cc 2e17      	MOV  R1,R23
0007cd e17e      	LDI  R23,30
0007ce 2011      	TST  R1
                 __CDF12:
0007cf f032      	BRMI __CDF13
0007d0 957a      	DEC  R23
0007d1 0fee      	LSL  R30
0007d2 1fff      	ROL  R31
0007d3 1f66      	ROL  R22
0007d4 1c11      	ROL  R1
0007d5 cff9      	RJMP __CDF12
                 __CDF13:
0007d6 2fef      	MOV  R30,R31
0007d7 2ff6      	MOV  R31,R22
0007d8 2d61      	MOV  R22,R1
0007d9 935f      	PUSH R21
0007da df8a      	RCALL __REPACK
0007db 915f      	POP  R21
                 __CDF10:
0007dc 9508      	RET
                 
                 __SWAPACC:
0007dd 934f      	PUSH R20
0007de 01af      	MOVW R20,R30
0007df 01fd      	MOVW R30,R26
0007e0 01da      	MOVW R26,R20
0007e1 01ab      	MOVW R20,R22
0007e2 01bc      	MOVW R22,R24
0007e3 01ca      	MOVW R24,R20
0007e4 2d40      	MOV  R20,R0
0007e5 2c01      	MOV  R0,R1
0007e6 2e14      	MOV  R1,R20
0007e7 914f      	POP  R20
0007e8 9508      	RET
                 
                 __UADD12:
0007e9 0fea      	ADD  R30,R26
0007ea 1ffb      	ADC  R31,R27
0007eb 1f68      	ADC  R22,R24
0007ec 9508      	RET
                 
                 __NEGMAN1:
0007ed 95e0      	COM  R30
0007ee 95f0      	COM  R31
0007ef 9560      	COM  R22
0007f0 5fef      	SUBI R30,-1
0007f1 4fff      	SBCI R31,-1
0007f2 4f6f      	SBCI R22,-1
0007f3 9508      	RET
                 
                 __SUBF12:
0007f4 935f      	PUSH R21
0007f5 df81      	RCALL __UNPACK
0007f6 3890      	CPI  R25,0x80
0007f7 f171      	BREQ __ADDF129
0007f8 e850      	LDI  R21,0x80
0007f9 2615      	EOR  R1,R21
                 
0007fa c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007fb 935f      	PUSH R21
0007fc df7a      	RCALL __UNPACK
0007fd 3890      	CPI  R25,0x80
0007fe f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007ff 3870      	CPI  R23,0x80
000800 f121      	BREQ __ADDF128
                 __ADDF121:
000801 2f57      	MOV  R21,R23
000802 1b59      	SUB  R21,R25
000803 f12b      	BRVS __ADDF1211
000804 f412      	BRPL __ADDF122
000805 dfd7      	RCALL __SWAPACC
000806 cffa      	RJMP __ADDF121
                 __ADDF122:
000807 3158      	CPI  R21,24
000808 f018      	BRLO __ADDF123
000809 27aa      	CLR  R26
00080a 27bb      	CLR  R27
00080b 2788      	CLR  R24
                 __ADDF123:
00080c 3058      	CPI  R21,8
00080d f028      	BRLO __ADDF124
00080e 2fab      	MOV  R26,R27
00080f 2fb8      	MOV  R27,R24
000810 2788      	CLR  R24
000811 5058      	SUBI R21,8
000812 cff9      	RJMP __ADDF123
                 __ADDF124:
000813 2355      	TST  R21
000814 f029      	BREQ __ADDF126
                 __ADDF125:
000815 9586      	LSR  R24
000816 95b7      	ROR  R27
000817 95a7      	ROR  R26
000818 955a      	DEC  R21
000819 f7d9      	BRNE __ADDF125
                 __ADDF126:
00081a 2d50      	MOV  R21,R0
00081b 2551      	EOR  R21,R1
00081c f072      	BRMI __ADDF127
00081d dfcb      	RCALL __UADD12
00081e f438      	BRCC __ADDF129
00081f 9567      	ROR  R22
000820 95f7      	ROR  R31
000821 95e7      	ROR  R30
000822 9573      	INC  R23
000823 f413      	BRVC __ADDF129
000824 c020      	RJMP __MAXRES
                 __ADDF128:
000825 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000826 df3e      	RCALL __REPACK
000827 915f      	POP  R21
000828 9508      	RET
                 __ADDF1211:
000829 f7d8      	BRCC __ADDF128
00082a cffb      	RJMP __ADDF129
                 __ADDF127:
00082b 1bea      	SUB  R30,R26
00082c 0bfb      	SBC  R31,R27
00082d 0b68      	SBC  R22,R24
00082e f051      	BREQ __ZERORES
00082f f410      	BRCC __ADDF1210
000830 9400      	COM  R0
000831 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000832 2366      	TST  R22
000833 f392      	BRMI __ADDF129
000834 0fee      	LSL  R30
000835 1fff      	ROL  R31
000836 1f66      	ROL  R22
000837 957a      	DEC  R23
000838 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000839 27ee      	CLR  R30
00083a 27ff      	CLR  R31
00083b 2766      	CLR  R22
00083c 2777      	CLR  R23
00083d 915f      	POP  R21
00083e 9508      	RET
                 
                 __MINRES:
00083f efef      	SER  R30
000840 efff      	SER  R31
000841 e76f      	LDI  R22,0x7F
000842 ef7f      	SER  R23
000843 915f      	POP  R21
000844 9508      	RET
                 
                 __MAXRES:
000845 efef      	SER  R30
000846 efff      	SER  R31
000847 e76f      	LDI  R22,0x7F
000848 e77f      	LDI  R23,0x7F
000849 915f      	POP  R21
00084a 9508      	RET
                 
                 __MULF12:
00084b 935f      	PUSH R21
00084c df2a      	RCALL __UNPACK
00084d 3870      	CPI  R23,0x80
00084e f351      	BREQ __ZERORES
00084f 3890      	CPI  R25,0x80
000850 f341      	BREQ __ZERORES
000851 2401      	EOR  R0,R1
000852 9408      	SEC
000853 1f79      	ADC  R23,R25
000854 f423      	BRVC __MULF124
000855 f31c      	BRLT __ZERORES
                 __MULF125:
000856 2000      	TST  R0
000857 f33a      	BRMI __MINRES
000858 cfec      	RJMP __MAXRES
                 __MULF124:
000859 920f      	PUSH R0
00085a 931f      	PUSH R17
00085b 932f      	PUSH R18
00085c 933f      	PUSH R19
00085d 934f      	PUSH R20
00085e 2711      	CLR  R17
00085f 2722      	CLR  R18
000860 2799      	CLR  R25
000861 9f68      	MUL  R22,R24
000862 01a0      	MOVW R20,R0
000863 9f8f      	MUL  R24,R31
000864 2d30      	MOV  R19,R0
000865 0d41      	ADD  R20,R1
000866 1f59      	ADC  R21,R25
000867 9f6b      	MUL  R22,R27
000868 0d30      	ADD  R19,R0
000869 1d41      	ADC  R20,R1
00086a 1f59      	ADC  R21,R25
00086b 9f8e      	MUL  R24,R30
00086c d027      	RCALL __MULF126
00086d 9fbf      	MUL  R27,R31
00086e d025      	RCALL __MULF126
00086f 9f6a      	MUL  R22,R26
000870 d023      	RCALL __MULF126
000871 9fbe      	MUL  R27,R30
000872 d01d      	RCALL __MULF127
000873 9faf      	MUL  R26,R31
000874 d01b      	RCALL __MULF127
000875 9fae      	MUL  R26,R30
000876 0d11      	ADD  R17,R1
000877 1f29      	ADC  R18,R25
000878 1f39      	ADC  R19,R25
000879 1f49      	ADC  R20,R25
00087a 1f59      	ADC  R21,R25
00087b 2fe3      	MOV  R30,R19
00087c 2ff4      	MOV  R31,R20
00087d 2f65      	MOV  R22,R21
00087e 2f52      	MOV  R21,R18
00087f 914f      	POP  R20
000880 913f      	POP  R19
000881 912f      	POP  R18
000882 911f      	POP  R17
000883 900f      	POP  R0
000884 2366      	TST  R22
000885 f02a      	BRMI __MULF122
000886 0f55      	LSL  R21
000887 1fee      	ROL  R30
000888 1fff      	ROL  R31
000889 1f66      	ROL  R22
00088a c002      	RJMP __MULF123
                 __MULF122:
00088b 9573      	INC  R23
00088c f24b      	BRVS __MULF125
                 __MULF123:
00088d decd      	RCALL __ROUND_REPACK
00088e 915f      	POP  R21
00088f 9508      	RET
                 
                 __MULF127:
000890 0d10      	ADD  R17,R0
000891 1d21      	ADC  R18,R1
000892 1f39      	ADC  R19,R25
000893 c002      	RJMP __MULF128
                 __MULF126:
000894 0d20      	ADD  R18,R0
000895 1d31      	ADC  R19,R1
                 __MULF128:
000896 1f49      	ADC  R20,R25
000897 1f59      	ADC  R21,R25
000898 9508      	RET
                 
                 __DIVF21:
000899 935f      	PUSH R21
00089a dedc      	RCALL __UNPACK
00089b 3870      	CPI  R23,0x80
00089c f421      	BRNE __DIVF210
00089d 2011      	TST  R1
                 __DIVF211:
00089e f40a      	BRPL __DIVF219
00089f cf9f      	RJMP __MINRES
                 __DIVF219:
0008a0 cfa4      	RJMP __MAXRES
                 __DIVF210:
0008a1 3890      	CPI  R25,0x80
0008a2 f409      	BRNE __DIVF218
                 __DIVF217:
0008a3 cf95      	RJMP __ZERORES
                 __DIVF218:
0008a4 2401      	EOR  R0,R1
0008a5 9408      	SEC
0008a6 0b97      	SBC  R25,R23
0008a7 f41b      	BRVC __DIVF216
0008a8 f3d4      	BRLT __DIVF217
0008a9 2000      	TST  R0
0008aa cff3      	RJMP __DIVF211
                 __DIVF216:
0008ab 2f79      	MOV  R23,R25
0008ac 931f      	PUSH R17
0008ad 932f      	PUSH R18
0008ae 933f      	PUSH R19
0008af 934f      	PUSH R20
0008b0 2411      	CLR  R1
0008b1 2711      	CLR  R17
0008b2 2722      	CLR  R18
0008b3 2733      	CLR  R19
0008b4 2744      	CLR  R20
0008b5 2755      	CLR  R21
0008b6 e290      	LDI  R25,32
                 __DIVF212:
0008b7 17ae      	CP   R26,R30
0008b8 07bf      	CPC  R27,R31
0008b9 0786      	CPC  R24,R22
0008ba 0741      	CPC  R20,R17
0008bb f030      	BRLO __DIVF213
0008bc 1bae      	SUB  R26,R30
0008bd 0bbf      	SBC  R27,R31
0008be 0b86      	SBC  R24,R22
0008bf 0b41      	SBC  R20,R17
0008c0 9408      	SEC
0008c1 c001      	RJMP __DIVF214
                 __DIVF213:
0008c2 9488      	CLC
                 __DIVF214:
0008c3 1f55      	ROL  R21
0008c4 1f22      	ROL  R18
0008c5 1f33      	ROL  R19
0008c6 1c11      	ROL  R1
0008c7 1faa      	ROL  R26
0008c8 1fbb      	ROL  R27
0008c9 1f88      	ROL  R24
0008ca 1f44      	ROL  R20
0008cb 959a      	DEC  R25
0008cc f751      	BRNE __DIVF212
0008cd 01f9      	MOVW R30,R18
0008ce 2d61      	MOV  R22,R1
0008cf 914f      	POP  R20
0008d0 913f      	POP  R19
0008d1 912f      	POP  R18
0008d2 911f      	POP  R17
0008d3 2366      	TST  R22
0008d4 f032      	BRMI __DIVF215
0008d5 0f55      	LSL  R21
0008d6 1fee      	ROL  R30
0008d7 1fff      	ROL  R31
0008d8 1f66      	ROL  R22
0008d9 957a      	DEC  R23
0008da f243      	BRVS __DIVF217
                 __DIVF215:
0008db de7f      	RCALL __ROUND_REPACK
0008dc 915f      	POP  R21
0008dd 9508      	RET
                 
                 __CMPF12:
0008de 2399      	TST  R25
0008df f09a      	BRMI __CMPF120
0008e0 2377      	TST  R23
0008e1 f042      	BRMI __CMPF121
0008e2 1797      	CP   R25,R23
0008e3 f048      	BRLO __CMPF122
0008e4 f429      	BRNE __CMPF121
0008e5 17ae      	CP   R26,R30
0008e6 07bf      	CPC  R27,R31
0008e7 0786      	CPC  R24,R22
0008e8 f020      	BRLO __CMPF122
0008e9 f031      	BREQ __CMPF123
                 __CMPF121:
0008ea 9498      	CLZ
0008eb 9488      	CLC
0008ec 9508      	RET
                 __CMPF122:
0008ed 9498      	CLZ
0008ee 9408      	SEC
0008ef 9508      	RET
                 __CMPF123:
0008f0 9418      	SEZ
0008f1 9488      	CLC
0008f2 9508      	RET
                 __CMPF120:
0008f3 2377      	TST  R23
0008f4 f7c2      	BRPL __CMPF122
0008f5 1797      	CP   R25,R23
0008f6 f398      	BRLO __CMPF121
0008f7 f7a9      	BRNE __CMPF122
0008f8 17ea      	CP   R30,R26
0008f9 07fb      	CPC  R31,R27
0008fa 0768      	CPC  R22,R24
0008fb f388      	BRLO __CMPF122
0008fc f399      	BREQ __CMPF123
0008fd cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008fe 2400      	CLR  R0
0008ff 0daf      	ADD  R26,R15
000900 1db0      	ADC  R27,R0
000901 9508      	RET
                 
                 __ANEGD1:
000902 95f0      	COM  R31
000903 9560      	COM  R22
000904 9570      	COM  R23
000905 95e1      	NEG  R30
000906 4fff      	SBCI R31,-1
000907 4f6f      	SBCI R22,-1
000908 4f7f      	SBCI R23,-1
000909 9508      	RET
                 
                 __CBD1:
00090a 2ffe      	MOV  R31,R30
00090b 0fff      	ADD  R31,R31
00090c 0bff      	SBC  R31,R31
00090d 2f6f      	MOV  R22,R31
00090e 2f7f      	MOV  R23,R31
00090f 9508      	RET
                 
                 __CWD1:
000910 2f6f      	MOV  R22,R31
000911 0f66      	ADD  R22,R22
000912 0b66      	SBC  R22,R22
000913 2f76      	MOV  R23,R22
000914 9508      	RET
                 
                 __DIVB21U:
000915 2400      	CLR  R0
000916 e098      	LDI  R25,8
                 __DIVB21U1:
000917 0faa      	LSL  R26
000918 1c00      	ROL  R0
000919 1a0e      	SUB  R0,R30
00091a f410      	BRCC __DIVB21U2
00091b 0e0e      	ADD  R0,R30
00091c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00091d 60a1      	SBR  R26,1
                 __DIVB21U3:
00091e 959a      	DEC  R25
00091f f7b9      	BRNE __DIVB21U1
000920 2fea      	MOV  R30,R26
000921 2da0      	MOV  R26,R0
000922 9508      	RET
                 
                 __DIVB21:
000923 d039      	RCALL __CHKSIGNB
000924 dff0      	RCALL __DIVB21U
000925 f40e      	BRTC __DIVB211
000926 95e1      	NEG  R30
                 __DIVB211:
000927 9508      	RET
                 
                 __DIVD21U:
000928 933f      	PUSH R19
000929 934f      	PUSH R20
00092a 935f      	PUSH R21
00092b 2400      	CLR  R0
00092c 2411      	CLR  R1
00092d 2744      	CLR  R20
00092e 2755      	CLR  R21
00092f e230      	LDI  R19,32
                 __DIVD21U1:
000930 0faa      	LSL  R26
000931 1fbb      	ROL  R27
000932 1f88      	ROL  R24
000933 1f99      	ROL  R25
000934 1c00      	ROL  R0
000935 1c11      	ROL  R1
000936 1f44      	ROL  R20
000937 1f55      	ROL  R21
000938 1a0e      	SUB  R0,R30
000939 0a1f      	SBC  R1,R31
00093a 0b46      	SBC  R20,R22
00093b 0b57      	SBC  R21,R23
00093c f428      	BRCC __DIVD21U2
00093d 0e0e      	ADD  R0,R30
00093e 1e1f      	ADC  R1,R31
00093f 1f46      	ADC  R20,R22
000940 1f57      	ADC  R21,R23
000941 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000942 60a1      	SBR  R26,1
                 __DIVD21U3:
000943 953a      	DEC  R19
000944 f759      	BRNE __DIVD21U1
000945 01fd      	MOVW R30,R26
000946 01bc      	MOVW R22,R24
000947 01d0      	MOVW R26,R0
000948 01ca      	MOVW R24,R20
000949 915f      	POP  R21
00094a 914f      	POP  R20
00094b 913f      	POP  R19
00094c 9508      	RET
                 
                 __MODB21:
00094d 94e8      	CLT
00094e ffa7      	SBRS R26,7
00094f c002      	RJMP __MODB211
000950 95a1      	NEG  R26
000951 9468      	SET
                 __MODB211:
000952 fde7      	SBRC R30,7
000953 95e1      	NEG  R30
000954 dfc0      	RCALL __DIVB21U
000955 2fea      	MOV  R30,R26
000956 f40e      	BRTC __MODB212
000957 95e1      	NEG  R30
                 __MODB212:
000958 9508      	RET
                 
                 __MODD21U:
000959 dfce      	RCALL __DIVD21U
00095a 01fd      	MOVW R30,R26
00095b 01bc      	MOVW R22,R24
00095c 9508      	RET
                 
                 __CHKSIGNB:
00095d 94e8      	CLT
00095e ffe7      	SBRS R30,7
00095f c002      	RJMP __CHKSB1
000960 95e1      	NEG  R30
000961 9468      	SET
                 __CHKSB1:
000962 ffa7      	SBRS R26,7
000963 c004      	RJMP __CHKSB2
000964 95a1      	NEG  R26
000965 f800      	BLD  R0,0
000966 9403      	INC  R0
000967 fa00      	BST  R0,0
                 __CHKSB2:
000968 9508      	RET
                 
                 __GETW1P:
000969 91ed      	LD   R30,X+
00096a 91fc      	LD   R31,X
00096b 9711      	SBIW R26,1
00096c 9508      	RET
                 
                 __GETD1P:
00096d 91ed      	LD   R30,X+
00096e 91fd      	LD   R31,X+
00096f 916d      	LD   R22,X+
000970 917c      	LD   R23,X
000971 9713      	SBIW R26,3
000972 9508      	RET
                 
                 __PUTDP1:
000973 93ed      	ST   X+,R30
000974 93fd      	ST   X+,R31
000975 936d      	ST   X+,R22
000976 937c      	ST   X,R23
000977 9508      	RET
                 
                 __GETD1S0:
000978 81e8      	LD   R30,Y
000979 81f9      	LDD  R31,Y+1
00097a 816a      	LDD  R22,Y+2
00097b 817b      	LDD  R23,Y+3
00097c 9508      	RET
                 
                 __GETD2S0:
00097d 81a8      	LD   R26,Y
00097e 81b9      	LDD  R27,Y+1
00097f 818a      	LDD  R24,Y+2
000980 819b      	LDD  R25,Y+3
000981 9508      	RET
                 
                 __PUTD1S0:
000982 83e8      	ST   Y,R30
000983 83f9      	STD  Y+1,R31
000984 836a      	STD  Y+2,R22
000985 837b      	STD  Y+3,R23
000986 9508      	RET
                 
                 __PUTPARD1:
000987 937a      	ST   -Y,R23
000988 936a      	ST   -Y,R22
000989 93fa      	ST   -Y,R31
00098a 93ea      	ST   -Y,R30
00098b 9508      	RET
                 
                 __PUTPARD2:
00098c 939a      	ST   -Y,R25
00098d 938a      	ST   -Y,R24
00098e 93ba      	ST   -Y,R27
00098f 93aa      	ST   -Y,R26
000990 9508      	RET
                 
                 __SWAPD12:
000991 2e18      	MOV  R1,R24
000992 2f86      	MOV  R24,R22
000993 2d61      	MOV  R22,R1
000994 2e19      	MOV  R1,R25
000995 2f97      	MOV  R25,R23
000996 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000997 2e1b      	MOV  R1,R27
000998 2fbf      	MOV  R27,R31
000999 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00099a 2e1a      	MOV  R1,R26
00099b 2fae      	MOV  R26,R30
00099c 2de1      	MOV  R30,R1
00099d 9508      	RET
                 
                 __CPD10:
00099e 9730      	SBIW R30,0
00099f 4060      	SBCI R22,0
0009a0 4070      	SBCI R23,0
0009a1 9508      	RET
                 
                 __SAVELOCR6:
0009a2 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009a3 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009a4 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009a5 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009a6 931a      	ST   -Y,R17
0009a7 930a      	ST   -Y,R16
0009a8 9508      	RET
                 
                 __LOADLOCR6:
0009a9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009aa 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009ab 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009ac 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009ad 8119      	LDD  R17,Y+1
0009ae 8108      	LD   R16,Y
0009af 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 118 r23: 104 
r24:  78 r25:  63 r26: 219 r27: 101 r28:  30 r29:   1 r30: 388 r31: 155 
x  :  44 y  : 373 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 175 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  23 ld    :  51 ldd   : 191 ldi   : 218 
lds   :  32 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  48 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  20 pop   :  22 push  :  22 rcall :  87 ret   :  93 
reti  :   0 rjmp  : 136 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 102 std   :  86 sts   :  18 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001360   4890     70   4960   32768  15.1%
[.dseg] 0x000060 0x0002a0      0     64     64    2048   3.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
