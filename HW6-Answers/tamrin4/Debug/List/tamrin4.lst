
AVRASM ver. 2.1.30  C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm Fri Dec 22 12:50:35 2023

C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0058 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 6554
00002b 706d
00002c 203d
00002d 3025      	.DB  0x54,0x65,0x6D,0x70,0x3D,0x20,0x25,0x30
00002e 322e
00002f 0066
000030 6556
000031 7972      	.DB  0x2E,0x32,0x66,0x0,0x56,0x65,0x72,0x79
000032 4820
000033 746f
000034 4d00
000035 646f      	.DB  0x20,0x48,0x6F,0x74,0x0,0x4D,0x6F,0x64
000036 7265
000037 7461
000038 0065
000039 6556      	.DB  0x65,0x72,0x61,0x74,0x65,0x0,0x56,0x65
00003a 7972
00003b 6320
00003c 6c6f
00003d 0064      	.DB  0x72,0x79,0x20,0x63,0x6F,0x6C,0x64,0x0
                 _0x2000000:
00003e 4e2d
00003f 4e41
C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1128): warning: .cseg .db misalignment - padding zero byte
000040 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000041 c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1132): warning: .cseg .db misalignment - padding zero byte
000042 0001      	.DB  0x1
                 _0x20A0000:
000043 4e2d
000044 4e41
000045 4900
000046 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\nima8\Desktop\tamrin4\Debug\List\tamrin4.asm(1135): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000048 0009      	.DW  0x09
000049 0260      	.DW  _0xA
00004a 0060      	.DW  _0x0*2+12
                 
00004b 0009      	.DW  0x09
00004c 0269      	.DW  _0xA+9
00004d 0069      	.DW  _0x0*2+21
                 
00004e 000a      	.DW  0x0A
00004f 0272      	.DW  _0xA+18
000050 0072      	.DW  _0x0*2+30
                 
000051 0002      	.DW  0x02
000052 028b      	.DW  __base_y_G101
000053 0082      	.DW  _0x2020003*2
                 
000054 0001      	.DW  0x01
000055 028f      	.DW  __seed_G105
000056 0084      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000057 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000058 94f8      	CLI
000059 27ee      	CLR  R30
00005a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005b e0f1      	LDI  R31,1
00005c bffb      	OUT  GICR,R31
00005d bfeb      	OUT  GICR,R30
00005e bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005f e08d      	LDI  R24,(14-2)+1
000060 e0a2      	LDI  R26,2
000061 27bb      	CLR  R27
                 __CLEAR_REG:
000062 93ed      	ST   X+,R30
000063 958a      	DEC  R24
000064 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000065 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000066 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000067 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000068 93ed      	ST   X+,R30
000069 9701      	SBIW R24,1
00006a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006b e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006d 9185      	LPM  R24,Z+
00006e 9195      	LPM  R25,Z+
00006f 9700      	SBIW R24,0
000070 f061      	BREQ __GLOBAL_INI_END
000071 91a5      	LPM  R26,Z+
000072 91b5      	LPM  R27,Z+
000073 9005      	LPM  R0,Z+
000074 9015      	LPM  R1,Z+
000075 01bf      	MOVW R22,R30
000076 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000077 9005      	LPM  R0,Z+
000078 920d      	ST   X+,R0
000079 9701      	SBIW R24,1
00007a f7e1      	BRNE __GLOBAL_INI_LOOP
00007b 01fb      	MOVW R30,R22
00007c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007e bfed      	OUT  SPL,R30
00007f e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000080 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000081 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000082 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000083 940c 0093 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;float temp;
                 ;char st[11];
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000B {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000C ADMUX=adc_input | ADC_VREF_TYPE;
000085 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000086 81e8      	LD   R30,Y
000087 b9e7      	OUT  0x7,R30
                 ; 0000 000D // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 000E delay_us(10);
                +
000088 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000089 958a     +DEC R24
00008a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 000F // Start the AD conversion
                 ; 0000 0010 ADCSRA|=(1<<ADSC);
00008b 9a36      	SBI  0x6,6
                 ; 0000 0011 // Wait for the AD conversion to complete
                 ; 0000 0012 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00008c 9b34      	SBIS 0x6,4
00008d cffe      	RJMP _0x3
                 ; 0000 0013 ADCSRA|=(1<<ADIF);
00008e 9a34      	SBI  0x6,4
                 ; 0000 0014 return ADCW;
00008f b1e4      	IN   R30,0x4
000090 b1f5      	IN   R31,0x4+1
000091 940c 04e8 	JMP  _0x20C0004
                 ; 0000 0015 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0018 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0019 // Declare your local variables here
                 ; 0000 001A 
                 ; 0000 001B // Input/Output Ports initialization
                 ; 0000 001C // Port A initialization
                 ; 0000 001D // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 001E DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000093 efef      	LDI  R30,LOW(255)
000094 bbea      	OUT  0x1A,R30
                 ; 0000 001F // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0020 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000095 e0e0      	LDI  R30,LOW(0)
000096 bbeb      	OUT  0x1B,R30
                 ; 0000 0021 
                 ; 0000 0022 // Port B initialization
                 ; 0000 0023 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0024 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000097 bbe7      	OUT  0x17,R30
                 ; 0000 0025 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0026 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000098 bbe8      	OUT  0x18,R30
                 ; 0000 0027 
                 ; 0000 0028 // Port C initialization
                 ; 0000 0029 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002A DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000099 bbe4      	OUT  0x14,R30
                 ; 0000 002B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00009a bbe5      	OUT  0x15,R30
                 ; 0000 002D 
                 ; 0000 002E // Port D initialization
                 ; 0000 002F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0030 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00009b bbe1      	OUT  0x11,R30
                 ; 0000 0031 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0032 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00009c bbe2      	OUT  0x12,R30
                 ; 0000 0033 
                 ; 0000 0034 // ADC initialization
                 ; 0000 0035 // ADC Clock frequency: 62.500 kHz
                 ; 0000 0036 // ADC Voltage Reference: AREF pin
                 ; 0000 0037 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0038 ADMUX=ADC_VREF_TYPE;
00009d b9e7      	OUT  0x7,R30
                 ; 0000 0039 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00009e e8e4      	LDI  R30,LOW(132)
00009f b9e6      	OUT  0x6,R30
                 ; 0000 003A SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000a0 e0e0      	LDI  R30,LOW(0)
0000a1 bfe0      	OUT  0x30,R30
                 ; 0000 003B 
                 ; 0000 003C // Alphanumeric LCD initialization
                 ; 0000 003D // Connections are specified in the
                 ; 0000 003E // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 003F // RS - PORTA Bit 0
                 ; 0000 0040 // RD - PORTA Bit 1
                 ; 0000 0041 // EN - PORTA Bit 2
                 ; 0000 0042 // D4 - PORTA Bit 4
                 ; 0000 0043 // D5 - PORTA Bit 5
                 ; 0000 0044 // D6 - PORTA Bit 6
                 ; 0000 0045 // D7 - PORTA Bit 7
                 ; 0000 0046 // Characters/line: 16
                 ; 0000 0047 lcd_init(16);
0000a2 e1a0      	LDI  R26,LOW(16)
0000a3 940e 04bd 	CALL _lcd_init
                 ; 0000 0048 
                 ; 0000 0049 while (1)
                 _0x6:
                 ; 0000 004A       {
                 ; 0000 004B       temp=read_adc(3);
0000a5 e0a3      	LDI  R26,LOW(3)
0000a6 dfde      	RCALL _read_adc
0000a7 e7ac      	LDI  R26,LOW(_temp)
0000a8 e0b2      	LDI  R27,HIGH(_temp)
0000a9 2766      	CLR  R22
0000aa 2777      	CLR  R23
0000ab 940e 078e 	CALL __CDF1
0000ad 940e 0940 	CALL __PUTDP1
                 ; 0000 004C       temp=temp/2.046;
0000af 940e 05f9 	CALL SUBOPT_0x0
                +
0000b1 eaea     +LDI R30 , LOW ( 0x4002F1AA )
0000b2 eff1     +LDI R31 , HIGH ( 0x4002F1AA )
0000b3 e062     +LDI R22 , BYTE3 ( 0x4002F1AA )
0000b4 e470     +LDI R23 , BYTE4 ( 0x4002F1AA )
                 	__GETD1N 0x4002F1AA
0000b5 940e 0866 	CALL __DIVF21
0000b7 93e0 027c 	STS  _temp,R30
0000b9 93f0 027d 	STS  _temp+1,R31
0000bb 9360 027e 	STS  _temp+2,R22
0000bd 9370 027f 	STS  _temp+3,R23
                 ; 0000 004D       sprintf(st,"Temp= %0.2f",temp);
0000bf e8e0      	LDI  R30,LOW(_st)
0000c0 e0f2      	LDI  R31,HIGH(_st)
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
                +
0000c3 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c5 93fa      	ST   -Y,R31
0000c6 93ea      	ST   -Y,R30
0000c7 91e0 027c 	LDS  R30,_temp
0000c9 91f0 027d 	LDS  R31,_temp+1
0000cb 9160 027e 	LDS  R22,_temp+2
0000cd 9170 027f 	LDS  R23,_temp+3
0000cf 940e 0954 	CALL __PUTPARD1
0000d1 e084      	LDI  R24,4
0000d2 940e 042a 	CALL _sprintf
0000d4 9628      	ADIW R28,8
                 ; 0000 004E       lcd_clear();
0000d5 940e 048b 	CALL _lcd_clear
                 ; 0000 004F       lcd_puts(st);
0000d7 e8a0      	LDI  R26,LOW(_st)
0000d8 e0b2      	LDI  R27,HIGH(_st)
0000d9 940e 04ac 	CALL _lcd_puts
                 ; 0000 0050       if(temp>40){
0000db 940e 0602 	CALL SUBOPT_0x1
0000dd f009      	BREQ PC+2
0000de f408      	BRCC PC+2
0000df c006      	RJMP _0x9
                 ; 0000 0051       lcd_gotoxy(0,1);
0000e0 940e 060a 	CALL SUBOPT_0x2
                 ; 0000 0052       lcd_puts("Very Hot");}
                +
0000e2 e6a0     +LDI R26 , LOW ( _0xA + ( 0 ) )
0000e3 e0b2     +LDI R27 , HIGH ( _0xA + ( 0 ) )
                 	__POINTW2MN _0xA,0
0000e4 940e 04ac 	CALL _lcd_puts
                 ; 0000 0053       if( temp>5 && temp<40){
                 _0x9:
0000e6 940e 060f 	CALL SUBOPT_0x3
0000e8 f009      	BREQ PC+2
0000e9 f408      	BRCC PC+2
0000ea c003      	RJMP _0xC
0000eb 940e 0602 	CALL SUBOPT_0x1
0000ed f008      	BRLO _0xD
                 _0xC:
0000ee c006      	RJMP _0xB
                 _0xD:
                 ; 0000 0054       lcd_gotoxy(0,1);
0000ef 940e 060a 	CALL SUBOPT_0x2
                 ; 0000 0055       lcd_puts("Moderate");}
                +
0000f1 e6a9     +LDI R26 , LOW ( _0xA + ( 9 ) )
0000f2 e0b2     +LDI R27 , HIGH ( _0xA + ( 9 ) )
                 	__POINTW2MN _0xA,9
0000f3 940e 04ac 	CALL _lcd_puts
                 ; 0000 0056       if(temp<5){
                 _0xB:
0000f5 940e 060f 	CALL SUBOPT_0x3
0000f7 f430      	BRSH _0xE
                 ; 0000 0057       lcd_gotoxy(0,1);
0000f8 940e 060a 	CALL SUBOPT_0x2
                 ; 0000 0058       lcd_puts("Very cold");}
                +
0000fa e7a2     +LDI R26 , LOW ( _0xA + ( 18 ) )
0000fb e0b2     +LDI R27 , HIGH ( _0xA + ( 18 ) )
                 	__POINTW2MN _0xA,18
0000fc 940e 04ac 	CALL _lcd_puts
                 ; 0000 0059       delay_ms(200);
                 _0xE:
0000fe eca8      	LDI  R26,LOW(200)
0000ff e0b0      	LDI  R27,0
000100 940e 0718 	CALL _delay_ms
                 ; 0000 005A       }
000102 cfa2      	RJMP _0x6
                 ; 0000 005B }
                 _0xF:
000103 cfff      	RJMP _0xF
                 ; .FEND
                 
                 	.DSEG
                 _0xA:
000260           	.BYTE 0x1C
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000104 93ba      	ST   -Y,R27
000105 93aa      	ST   -Y,R26
000106 931a      	ST   -Y,R17
000107 930a      	ST   -Y,R16
000108 81aa      	LDD  R26,Y+2
000109 81bb      	LDD  R27,Y+2+1
00010a 9612      	ADIW R26,2
00010b 940e 0936 	CALL __GETW1P
00010d 9730      	SBIW R30,0
00010e f129      	BREQ _0x2000010
00010f 81aa      	LDD  R26,Y+2
000110 81bb      	LDD  R27,Y+2+1
000111 9614      	ADIW R26,4
000112 940e 0936 	CALL __GETW1P
000114 018f      	MOVW R16,R30
000115 9730      	SBIW R30,0
000116 f061      	BREQ _0x2000012
                +
000117 3002     +CPI R16 , LOW ( 2 )
000118 e0e0     +LDI R30 , HIGH ( 2 )
000119 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00011a f080      	BRLO _0x2000013
00011b 01f8      	MOVW R30,R16
00011c 9731      	SBIW R30,1
00011d 018f      	MOVW R16,R30
                +
00011e 81aa     +LDD R26 , Y + 2
00011f 81bb     +LDD R27 , Y + 2 + 1
000120 9614     +ADIW R26 , 4
000121 93ed     +ST X + , R30
000122 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000123 81aa      	LDD  R26,Y+2
000124 81bb      	LDD  R27,Y+2+1
000125 9612      	ADIW R26,2
000126 940e 0617 	CALL SUBOPT_0x4
000128 9731      	SBIW R30,1
000129 81ac      	LDD  R26,Y+4
00012a 83a0      	STD  Z+0,R26
                 _0x2000013:
00012b 81aa      	LDD  R26,Y+2
00012c 81bb      	LDD  R27,Y+2+1
00012d 940e 0936 	CALL __GETW1P
00012f 23ff      	TST  R31
000130 f012      	BRMI _0x2000014
000131 940e 0617 	CALL SUBOPT_0x4
                 _0x2000014:
000133 c006      	RJMP _0x2000015
                 _0x2000010:
000134 81aa      	LDD  R26,Y+2
000135 81bb      	LDD  R27,Y+2+1
000136 efef      	LDI  R30,LOW(65535)
000137 efff      	LDI  R31,HIGH(65535)
000138 93ed      	ST   X+,R30
000139 93fc      	ST   X,R31
                 _0x2000015:
00013a 8119      	LDD  R17,Y+1
00013b 8108      	LDD  R16,Y+0
00013c 9625      	ADIW R28,5
00013d 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
00013e 940e 061d 	CALL SUBOPT_0x5
000140 e8e0      	LDI  R30,LOW(128)
000141 83ea      	STD  Y+2,R30
000142 e3ef      	LDI  R30,LOW(63)
000143 83eb      	STD  Y+3,R30
000144 940e 0971 	CALL __SAVELOCR4
000146 85ee      	LDD  R30,Y+14
000147 85ff      	LDD  R31,Y+14+1
000148 3fef      	CPI  R30,LOW(0xFFFF)
000149 efaf      	LDI  R26,HIGH(0xFFFF)
00014a 07fa      	CPC  R31,R26
00014b f449      	BRNE _0x2000019
00014c 85e8      	LDD  R30,Y+8
00014d 85f9      	LDD  R31,Y+8+1
00014e 93fa      	ST   -Y,R31
00014f 93ea      	ST   -Y,R30
                +
000150 e7ac     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000151 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000152 940e 04ea 	CALL _strcpyf
000154 c0b7      	RJMP _0x20C0006
                 _0x2000019:
000155 3fef      	CPI  R30,LOW(0x7FFF)
000156 e7af      	LDI  R26,HIGH(0x7FFF)
000157 07fa      	CPC  R31,R26
000158 f449      	BRNE _0x2000018
000159 85e8      	LDD  R30,Y+8
00015a 85f9      	LDD  R31,Y+8+1
00015b 93fa      	ST   -Y,R31
00015c 93ea      	ST   -Y,R30
                +
00015d e7ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00015e e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00015f 940e 04ea 	CALL _strcpyf
000161 c0aa      	RJMP _0x20C0006
                 _0x2000018:
000162 85ab      	LDD  R26,Y+11
000163 30a7      	CPI  R26,LOW(0x7)
000164 f010      	BRLO _0x200001B
000165 e0e6      	LDI  R30,LOW(6)
000166 87eb      	STD  Y+11,R30
                 _0x200001B:
000167 851b      	LDD  R17,Y+11
                 _0x200001C:
000168 2fe1      	MOV  R30,R17
000169 5011      	SUBI R17,1
00016a 30e0      	CPI  R30,0
00016b f019      	BREQ _0x200001E
00016c 940e 0624 	CALL SUBOPT_0x6
00016e cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00016f 85ec     +LDD R30 , Y + 12
000170 85fd     +LDD R31 , Y + 12 + 1
000171 856e     +LDD R22 , Y + 12 + 2
000172 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000173 940e 096b 	CALL __CPD10
000175 f421      	BRNE _0x200001F
000176 e030      	LDI  R19,LOW(0)
000177 940e 0624 	CALL SUBOPT_0x6
000179 c02d      	RJMP _0x2000020
                 _0x200001F:
00017a 853b      	LDD  R19,Y+11
00017b 940e 0633 	CALL SUBOPT_0x7
00017d f009      	BREQ PC+2
00017e f408      	BRCC PC+2
00017f c00b      	RJMP _0x2000021
000180 940e 0624 	CALL SUBOPT_0x6
                 _0x2000022:
000182 940e 0633 	CALL SUBOPT_0x7
000184 f028      	BRLO _0x2000024
000185 940e 063e 	CALL SUBOPT_0x8
000187 940e 0643 	CALL SUBOPT_0x9
000189 cff8      	RJMP _0x2000022
                 _0x2000024:
00018a c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00018b 940e 0633 	CALL SUBOPT_0x7
00018d f440      	BRSH _0x2000028
00018e 940e 063e 	CALL SUBOPT_0x8
000190 940e 064f 	CALL SUBOPT_0xA
000192 940e 0656 	CALL SUBOPT_0xB
000194 5031      	SUBI R19,LOW(1)
000195 cff5      	RJMP _0x2000026
                 _0x2000028:
000196 940e 0624 	CALL SUBOPT_0x6
                 _0x2000025:
                +
000198 85ec     +LDD R30 , Y + 12
000199 85fd     +LDD R31 , Y + 12 + 1
00019a 856e     +LDD R22 , Y + 12 + 2
00019b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00019c 940e 065b 	CALL SUBOPT_0xC
00019e 940e 0656 	CALL SUBOPT_0xB
0001a0 940e 0633 	CALL SUBOPT_0x7
0001a2 f020      	BRLO _0x2000029
0001a3 940e 063e 	CALL SUBOPT_0x8
0001a5 940e 0643 	CALL SUBOPT_0x9
                 _0x2000029:
                 _0x2000020:
0001a7 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0001a8 85eb      	LDD  R30,Y+11
0001a9 17e1      	CP   R30,R17
0001aa f1a8      	BRLO _0x200002C
                +
0001ab 81ac     +LDD R26 , Y + 4
0001ac 81bd     +LDD R27 , Y + 4 + 1
0001ad 818e     +LDD R24 , Y + 4 + 2
0001ae 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001af 940e 0662 	CALL SUBOPT_0xD
0001b1 940e 065b 	CALL SUBOPT_0xC
0001b3 01df      	MOVW R26,R30
0001b4 01cb      	MOVW R24,R22
0001b5 940e 0541 	CALL _floor
                +
0001b7 83ec     +STD Y + 4 , R30
0001b8 83fd     +STD Y + 4 + 1 , R31
0001b9 836e     +STD Y + 4 + 2 , R22
0001ba 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0001bb 940e 063e 	CALL SUBOPT_0x8
0001bd 940e 0866 	CALL __DIVF21
0001bf 940e 0755 	CALL __CFD1U
0001c1 2f0e      	MOV  R16,R30
0001c2 940e 0669 	CALL SUBOPT_0xE
0001c4 940e 0670 	CALL SUBOPT_0xF
0001c6 27ff      	CLR  R31
0001c7 2766      	CLR  R22
0001c8 2777      	CLR  R23
0001c9 940e 078e 	CALL __CDF1
                +
0001cb 81ac     +LDD R26 , Y + 4
0001cc 81bd     +LDD R27 , Y + 4 + 1
0001cd 818e     +LDD R24 , Y + 4 + 2
0001ce 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001cf 940e 0818 	CALL __MULF12
0001d1 940e 063e 	CALL SUBOPT_0x8
0001d3 940e 0675 	CALL SUBOPT_0x10
0001d5 940e 0656 	CALL SUBOPT_0xB
0001d7 2fe1      	MOV  R30,R17
0001d8 5f1f      	SUBI R17,-1
0001d9 30e0      	CPI  R30,0
0001da f669      	BRNE _0x200002A
0001db 940e 0669 	CALL SUBOPT_0xE
0001dd e2ee      	LDI  R30,LOW(46)
0001de 93ec      	ST   X,R30
0001df cfc8      	RJMP _0x200002A
                 _0x200002C:
0001e0 940e 067a 	CALL SUBOPT_0x11
0001e2 9731      	SBIW R30,1
0001e3 85aa      	LDD  R26,Y+10
0001e4 83a0      	STD  Z+0,R26
0001e5 3030      	CPI  R19,0
0001e6 f42c      	BRGE _0x200002E
0001e7 9531      	NEG  R19
0001e8 85a8      	LDD  R26,Y+8
0001e9 85b9      	LDD  R27,Y+8+1
0001ea e2ed      	LDI  R30,LOW(45)
0001eb c003      	RJMP _0x2000113
                 _0x200002E:
0001ec 85a8      	LDD  R26,Y+8
0001ed 85b9      	LDD  R27,Y+8+1
0001ee e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
0001ef 93ec      	ST   X,R30
0001f0 940e 067a 	CALL SUBOPT_0x11
0001f2 940e 067a 	CALL SUBOPT_0x11
0001f4 9731      	SBIW R30,1
0001f5 01bf      	MOVW R22,R30
0001f6 2fa3      	MOV  R26,R19
0001f7 e0ea      	LDI  R30,LOW(10)
0001f8 940e 08f0 	CALL __DIVB21
0001fa 5de0      	SUBI R30,-LOW(48)
0001fb 01db      	MOVW R26,R22
0001fc 93ec      	ST   X,R30
0001fd 940e 067a 	CALL SUBOPT_0x11
0001ff 9731      	SBIW R30,1
000200 01bf      	MOVW R22,R30
000201 2fa3      	MOV  R26,R19
000202 e0ea      	LDI  R30,LOW(10)
000203 940e 091a 	CALL __MODB21
000205 5de0      	SUBI R30,-LOW(48)
000206 01db      	MOVW R26,R22
000207 93ec      	ST   X,R30
000208 85a8      	LDD  R26,Y+8
000209 85b9      	LDD  R27,Y+8+1
00020a e0e0      	LDI  R30,LOW(0)
00020b 93ec      	ST   X,R30
                 _0x20C0006:
00020c 940e 0978 	CALL __LOADLOCR4
00020e 9660      	ADIW R28,16
00020f 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000210 93ba      	ST   -Y,R27
000211 93aa      	ST   -Y,R26
000212 97ef      	SBIW R28,63
000213 9761      	SBIW R28,17
000214 940e 096f 	CALL __SAVELOCR6
000216 e010      	LDI  R17,0
                +
000217 01fe     +MOVW R30 , R28
000218 5ae8     +SUBI R30 , LOW ( - 88 )
000219 4fff     +SBCI R31 , HIGH ( - 88 )
00021a 9001     +LD R0 , Z +
00021b 81f0     +LD R31 , Z
00021c 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00021d 87e8      	STD  Y+8,R30
00021e 87f9      	STD  Y+8+1,R31
                +
00021f 01fe     +MOVW R30 , R28
000220 5aea     +SUBI R30 , LOW ( - 86 )
000221 4fff     +SBCI R31 , HIGH ( - 86 )
000222 9001     +LD R0 , Z +
000223 81f0     +LD R31 , Z
000224 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000225 83ee      	STD  Y+6,R30
000226 83ff      	STD  Y+6+1,R31
000227 81ae      	LDD  R26,Y+6
000228 81bf      	LDD  R27,Y+6+1
000229 e0e0      	LDI  R30,LOW(0)
00022a e0f0      	LDI  R31,HIGH(0)
00022b 93ed      	ST   X+,R30
00022c 93fc      	ST   X,R31
                 _0x2000030:
00022d 01de      	MOVW R26,R28
00022e 5aa4      	SUBI R26,LOW(-(92))
00022f 4fbf      	SBCI R27,HIGH(-(92))
000230 940e 0617 	CALL SUBOPT_0x4
000232 9731      	SBIW R30,1
000233 91e4      	LPM  R30,Z
000234 2f2e      	MOV  R18,R30
000235 30e0      	CPI  R30,0
000236 f409      	BRNE PC+2
000237 c1e9      	RJMP _0x2000032
000238 2fe1      	MOV  R30,R17
000239 30e0      	CPI  R30,0
00023a f439      	BRNE _0x2000036
00023b 3225      	CPI  R18,37
00023c f411      	BRNE _0x2000037
00023d e011      	LDI  R17,LOW(1)
00023e c002      	RJMP _0x2000038
                 _0x2000037:
00023f 940e 0680 	CALL SUBOPT_0x12
                 _0x2000038:
000241 c1de      	RJMP _0x2000035
                 _0x2000036:
000242 30e1      	CPI  R30,LOW(0x1)
000243 f4c1      	BRNE _0x2000039
000244 3225      	CPI  R18,37
000245 f419      	BRNE _0x200003A
000246 940e 0680 	CALL SUBOPT_0x12
000248 c1d6      	RJMP _0x2000114
                 _0x200003A:
000249 e012      	LDI  R17,LOW(2)
00024a e0e0      	LDI  R30,LOW(0)
00024b 8bed      	STD  Y+21,R30
00024c e000      	LDI  R16,LOW(0)
00024d 322d      	CPI  R18,45
00024e f411      	BRNE _0x200003B
00024f e001      	LDI  R16,LOW(1)
000250 c1cf      	RJMP _0x2000035
                 _0x200003B:
000251 322b      	CPI  R18,43
000252 f419      	BRNE _0x200003C
000253 e2eb      	LDI  R30,LOW(43)
000254 8bed      	STD  Y+21,R30
000255 c1ca      	RJMP _0x2000035
                 _0x200003C:
000256 3220      	CPI  R18,32
000257 f419      	BRNE _0x200003D
000258 e2e0      	LDI  R30,LOW(32)
000259 8bed      	STD  Y+21,R30
00025a c1c5      	RJMP _0x2000035
                 _0x200003D:
00025b c002      	RJMP _0x200003E
                 _0x2000039:
00025c 30e2      	CPI  R30,LOW(0x2)
00025d f439      	BRNE _0x200003F
                 _0x200003E:
00025e e050      	LDI  R21,LOW(0)
00025f e013      	LDI  R17,LOW(3)
000260 3320      	CPI  R18,48
000261 f411      	BRNE _0x2000040
000262 6800      	ORI  R16,LOW(128)
000263 c1bc      	RJMP _0x2000035
                 _0x2000040:
000264 c002      	RJMP _0x2000041
                 _0x200003F:
000265 30e3      	CPI  R30,LOW(0x3)
000266 f491      	BRNE _0x2000042
                 _0x2000041:
000267 3320      	CPI  R18,48
000268 f010      	BRLO _0x2000044
000269 332a      	CPI  R18,58
00026a f008      	BRLO _0x2000045
                 _0x2000044:
00026b c007      	RJMP _0x2000043
                 _0x2000045:
00026c e0aa      	LDI  R26,LOW(10)
00026d 9f5a      	MUL  R21,R26
00026e 2d50      	MOV  R21,R0
00026f 2fe2      	MOV  R30,R18
000270 53e0      	SUBI R30,LOW(48)
000271 0f5e      	ADD  R21,R30
000272 c1ad      	RJMP _0x2000035
                 _0x2000043:
000273 e040      	LDI  R20,LOW(0)
000274 322e      	CPI  R18,46
000275 f411      	BRNE _0x2000046
000276 e014      	LDI  R17,LOW(4)
000277 c1a8      	RJMP _0x2000035
                 _0x2000046:
000278 c00f      	RJMP _0x2000047
                 _0x2000042:
000279 30e4      	CPI  R30,LOW(0x4)
00027a f499      	BRNE _0x2000049
00027b 3320      	CPI  R18,48
00027c f010      	BRLO _0x200004B
00027d 332a      	CPI  R18,58
00027e f008      	BRLO _0x200004C
                 _0x200004B:
00027f c008      	RJMP _0x200004A
                 _0x200004C:
000280 6200      	ORI  R16,LOW(32)
000281 e0aa      	LDI  R26,LOW(10)
000282 9f4a      	MUL  R20,R26
000283 2d40      	MOV  R20,R0
000284 2fe2      	MOV  R30,R18
000285 53e0      	SUBI R30,LOW(48)
000286 0f4e      	ADD  R20,R30
000287 c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000288 362c      	CPI  R18,108
000289 f419      	BRNE _0x200004D
00028a 6002      	ORI  R16,LOW(2)
00028b e015      	LDI  R17,LOW(5)
00028c c193      	RJMP _0x2000035
                 _0x200004D:
00028d c003      	RJMP _0x200004E
                 _0x2000049:
00028e 30e5      	CPI  R30,LOW(0x5)
00028f f009      	BREQ PC+2
000290 c18f      	RJMP _0x2000035
                 _0x200004E:
000291 2fe2      	MOV  R30,R18
000292 36e3      	CPI  R30,LOW(0x63)
000293 f459      	BRNE _0x2000053
000294 940e 0687 	CALL SUBOPT_0x13
000296 940e 068e 	CALL SUBOPT_0x14
000298 940e 0687 	CALL SUBOPT_0x13
00029a 81a4      	LDD  R26,Z+4
00029b 93aa      	ST   -Y,R26
00029c 940e 0695 	CALL SUBOPT_0x15
00029e c180      	RJMP _0x2000054
                 _0x2000053:
00029f 34e5      	CPI  R30,LOW(0x45)
0002a0 f011      	BREQ _0x2000057
0002a1 36e5      	CPI  R30,LOW(0x65)
0002a2 f409      	BRNE _0x2000058
                 _0x2000057:
0002a3 c003      	RJMP _0x2000059
                 _0x2000058:
0002a4 36e6      	CPI  R30,LOW(0x66)
0002a5 f009      	BREQ PC+2
0002a6 c048      	RJMP _0x200005A
                 _0x2000059:
0002a7 01fe      	MOVW R30,R28
0002a8 9676      	ADIW R30,22
0002a9 87ee      	STD  Y+14,R30
0002aa 87ff      	STD  Y+14+1,R31
0002ab 940e 069b 	CALL SUBOPT_0x16
0002ad 940e 093a 	CALL __GETD1P
0002af 940e 06a2 	CALL SUBOPT_0x17
0002b1 940e 06a7 	CALL SUBOPT_0x18
0002b3 85ad      	LDD  R26,Y+13
0002b4 23aa      	TST  R26
0002b5 f032      	BRMI _0x200005B
0002b6 89ad      	LDD  R26,Y+21
0002b7 32ab      	CPI  R26,LOW(0x2B)
0002b8 f059      	BREQ _0x200005D
0002b9 32a0      	CPI  R26,LOW(0x20)
0002ba f081      	BREQ _0x200005F
0002bb c017      	RJMP _0x2000060
                 _0x200005B:
0002bc 940e 06a9 	CALL SUBOPT_0x19
0002be 940e 0722 	CALL __ANEGF1
0002c0 940e 06a2 	CALL SUBOPT_0x17
0002c2 e2ed      	LDI  R30,LOW(45)
0002c3 8bed      	STD  Y+21,R30
                 _0x200005D:
0002c4 ff07      	SBRS R16,7
0002c5 c005      	RJMP _0x2000061
0002c6 89ed      	LDD  R30,Y+21
0002c7 93ea      	ST   -Y,R30
0002c8 940e 0695 	CALL SUBOPT_0x15
0002ca c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
0002cb 85ee      	LDD  R30,Y+14
0002cc 85ff      	LDD  R31,Y+14+1
0002cd 9631      	ADIW R30,1
0002ce 87ee      	STD  Y+14,R30
0002cf 87ff      	STD  Y+14+1,R31
0002d0 9731      	SBIW R30,1
0002d1 89ad      	LDD  R26,Y+21
0002d2 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
0002d3 ff05      	SBRS R16,5
0002d4 e046      	LDI  R20,LOW(6)
0002d5 3626      	CPI  R18,102
0002d6 f451      	BRNE _0x2000064
0002d7 940e 06a9 	CALL SUBOPT_0x19
0002d9 940e 0954 	CALL __PUTPARD1
0002db 934a      	ST   -Y,R20
0002dc 89ab      	LDD  R26,Y+19
0002dd 89bc      	LDD  R27,Y+19+1
0002de 940e 0558 	CALL _ftoa
0002e0 c009      	RJMP _0x2000065
                 _0x2000064:
0002e1 940e 06a9 	CALL SUBOPT_0x19
0002e3 940e 0954 	CALL __PUTPARD1
0002e5 934a      	ST   -Y,R20
0002e6 932a      	ST   -Y,R18
0002e7 89ac      	LDD  R26,Y+20
0002e8 89bd      	LDD  R27,Y+20+1
0002e9 de54      	RCALL __ftoe_G100
                 _0x2000065:
0002ea 01fe      	MOVW R30,R28
0002eb 9676      	ADIW R30,22
0002ec 940e 06ae 	CALL SUBOPT_0x1A
0002ee c01e      	RJMP _0x2000066
                 _0x200005A:
0002ef 37e3      	CPI  R30,LOW(0x73)
0002f0 f439      	BRNE _0x2000068
0002f1 940e 06a7 	CALL SUBOPT_0x18
0002f3 940e 06b6 	CALL SUBOPT_0x1B
0002f5 940e 06ae 	CALL SUBOPT_0x1A
0002f7 c00e      	RJMP _0x2000069
                 _0x2000068:
0002f8 37e0      	CPI  R30,LOW(0x70)
0002f9 f4c1      	BRNE _0x200006B
0002fa 940e 06a7 	CALL SUBOPT_0x18
0002fc 940e 06b6 	CALL SUBOPT_0x1B
0002fe 87ee      	STD  Y+14,R30
0002ff 87ff      	STD  Y+14+1,R31
000300 85ae      	LDD  R26,Y+14
000301 85bf      	LDD  R27,Y+14+1
000302 940e 0503 	CALL _strlenf
000304 2f1e      	MOV  R17,R30
000305 6008      	ORI  R16,LOW(8)
                 _0x2000069:
000306 770f      	ANDI R16,LOW(127)
000307 3040      	CPI  R20,0
000308 f011      	BREQ _0x200006D
000309 1741      	CP   R20,R17
00030a f008      	BRLO _0x200006E
                 _0x200006D:
00030b c001      	RJMP _0x200006C
                 _0x200006E:
00030c 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
00030d e040      	LDI  R20,LOW(0)
00030e e0e0      	LDI  R30,LOW(0)
00030f 8bec      	STD  Y+20,R30
000310 e030      	LDI  R19,LOW(0)
000311 c06d      	RJMP _0x200006F
                 _0x200006B:
000312 36e4      	CPI  R30,LOW(0x64)
000313 f011      	BREQ _0x2000072
000314 36e9      	CPI  R30,LOW(0x69)
000315 f411      	BRNE _0x2000073
                 _0x2000072:
000316 6004      	ORI  R16,LOW(4)
000317 c002      	RJMP _0x2000074
                 _0x2000073:
000318 37e5      	CPI  R30,LOW(0x75)
000319 f4a1      	BRNE _0x2000075
                 _0x2000074:
00031a e0ea      	LDI  R30,LOW(10)
00031b 8bec      	STD  Y+20,R30
00031c ff01      	SBRS R16,1
00031d c008      	RJMP _0x2000076
                +
00031e e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00031f ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000320 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000321 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000322 940e 06bb 	CALL SUBOPT_0x1C
000324 e01a      	LDI  R17,LOW(10)
000325 c022      	RJMP _0x2000077
                 _0x2000076:
                +
000326 e1e0     +LDI R30 , LOW ( 0x2710 )
000327 e2f7     +LDI R31 , HIGH ( 0x2710 )
000328 e060     +LDI R22 , BYTE3 ( 0x2710 )
000329 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00032a 940e 06bb 	CALL SUBOPT_0x1C
00032c e015      	LDI  R17,LOW(5)
00032d c01a      	RJMP _0x2000077
                 _0x2000075:
00032e 35e8      	CPI  R30,LOW(0x58)
00032f f411      	BRNE _0x2000079
000330 6008      	ORI  R16,LOW(8)
000331 c003      	RJMP _0x200007A
                 _0x2000079:
000332 37e8      	CPI  R30,LOW(0x78)
000333 f009      	BREQ PC+2
000334 c0ea      	RJMP _0x20000B8
                 _0x200007A:
000335 e1e0      	LDI  R30,LOW(16)
000336 8bec      	STD  Y+20,R30
000337 ff01      	SBRS R16,1
000338 c008      	RJMP _0x200007C
                +
000339 e0e0     +LDI R30 , LOW ( 0x10000000 )
00033a e0f0     +LDI R31 , HIGH ( 0x10000000 )
00033b e060     +LDI R22 , BYTE3 ( 0x10000000 )
00033c e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00033d 940e 06bb 	CALL SUBOPT_0x1C
00033f e018      	LDI  R17,LOW(8)
000340 c007      	RJMP _0x2000077
                 _0x200007C:
                +
000341 e0e0     +LDI R30 , LOW ( 0x1000 )
000342 e1f0     +LDI R31 , HIGH ( 0x1000 )
000343 e060     +LDI R22 , BYTE3 ( 0x1000 )
000344 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000345 940e 06bb 	CALL SUBOPT_0x1C
000347 e014      	LDI  R17,LOW(4)
                 _0x2000077:
000348 3040      	CPI  R20,0
000349 f011      	BREQ _0x200007D
00034a 770f      	ANDI R16,LOW(127)
00034b c001      	RJMP _0x200007E
                 _0x200007D:
00034c e041      	LDI  R20,LOW(1)
                 _0x200007E:
00034d ff01      	SBRS R16,1
00034e c008      	RJMP _0x200007F
00034f 940e 06a7 	CALL SUBOPT_0x18
000351 940e 069b 	CALL SUBOPT_0x16
000353 9614      	ADIW R26,4
000354 940e 093a 	CALL __GETD1P
000356 c00f      	RJMP _0x2000115
                 _0x200007F:
000357 ff02      	SBRS R16,2
000358 c007      	RJMP _0x2000081
000359 940e 06a7 	CALL SUBOPT_0x18
00035b 940e 06b6 	CALL SUBOPT_0x1B
00035d 940e 08dd 	CALL __CWD1
00035f c006      	RJMP _0x2000115
                 _0x2000081:
000360 940e 06a7 	CALL SUBOPT_0x18
000362 940e 06b6 	CALL SUBOPT_0x1B
000364 2766      	CLR  R22
000365 2777      	CLR  R23
                 _0x2000115:
                +
000366 87ea     +STD Y + 10 , R30
000367 87fb     +STD Y + 10 + 1 , R31
000368 876c     +STD Y + 10 + 2 , R22
000369 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00036a ff02      	SBRS R16,2
00036b c012      	RJMP _0x2000083
00036c 85ad      	LDD  R26,Y+13
00036d 23aa      	TST  R26
00036e f442      	BRPL _0x2000084
00036f 940e 06a9 	CALL SUBOPT_0x19
000371 940e 08cf 	CALL __ANEGD1
000373 940e 06a2 	CALL SUBOPT_0x17
000375 e2ed      	LDI  R30,LOW(45)
000376 8bed      	STD  Y+21,R30
                 _0x2000084:
000377 89ed      	LDD  R30,Y+21
000378 30e0      	CPI  R30,0
000379 f019      	BREQ _0x2000085
00037a 5f1f      	SUBI R17,-LOW(1)
00037b 5f4f      	SUBI R20,-LOW(1)
00037c c001      	RJMP _0x2000086
                 _0x2000085:
00037d 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
00037e 2f34      	MOV  R19,R20
                 _0x200006F:
00037f fd00      	SBRC R16,0
000380 c014      	RJMP _0x2000087
                 _0x2000088:
000381 1715      	CP   R17,R21
000382 f410      	BRSH _0x200008B
000383 1735      	CP   R19,R21
000384 f008      	BRLO _0x200008C
                 _0x200008B:
000385 c00f      	RJMP _0x200008A
                 _0x200008C:
000386 ff07      	SBRS R16,7
000387 c008      	RJMP _0x200008D
000388 ff02      	SBRS R16,2
000389 c004      	RJMP _0x200008E
00038a 7f0b      	ANDI R16,LOW(251)
00038b 892d      	LDD  R18,Y+21
00038c 5011      	SUBI R17,LOW(1)
00038d c001      	RJMP _0x200008F
                 _0x200008E:
00038e e320      	LDI  R18,LOW(48)
                 _0x200008F:
00038f c001      	RJMP _0x2000090
                 _0x200008D:
000390 e220      	LDI  R18,LOW(32)
                 _0x2000090:
000391 940e 0680 	CALL SUBOPT_0x12
000393 5051      	SUBI R21,LOW(1)
000394 cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
000395 1714      	CP   R17,R20
000396 f490      	BRSH _0x2000093
000397 6100      	ORI  R16,LOW(16)
000398 ff02      	SBRS R16,2
000399 c006      	RJMP _0x2000094
00039a 940e 06c0 	CALL SUBOPT_0x1D
00039c f009      	BREQ _0x2000095
00039d 5051      	SUBI R21,LOW(1)
                 _0x2000095:
00039e 5011      	SUBI R17,LOW(1)
00039f 5041      	SUBI R20,LOW(1)
                 _0x2000094:
0003a0 e3e0      	LDI  R30,LOW(48)
0003a1 93ea      	ST   -Y,R30
0003a2 940e 0695 	CALL SUBOPT_0x15
0003a4 3050      	CPI  R21,0
0003a5 f009      	BREQ _0x2000096
0003a6 5051      	SUBI R21,LOW(1)
                 _0x2000096:
0003a7 5041      	SUBI R20,LOW(1)
0003a8 cfec      	RJMP _0x2000091
                 _0x2000093:
0003a9 2f31      	MOV  R19,R17
0003aa 89ec      	LDD  R30,Y+20
0003ab 30e0      	CPI  R30,0
0003ac f4b9      	BRNE _0x2000097
                 _0x2000098:
0003ad 3030      	CPI  R19,0
0003ae f0a1      	BREQ _0x200009A
0003af ff03      	SBRS R16,3
0003b0 c006      	RJMP _0x200009B
0003b1 85ee      	LDD  R30,Y+14
0003b2 85ff      	LDD  R31,Y+14+1
0003b3 9125      	LPM  R18,Z+
0003b4 87ee      	STD  Y+14,R30
0003b5 87ff      	STD  Y+14+1,R31
0003b6 c005      	RJMP _0x200009C
                 _0x200009B:
0003b7 85ae      	LDD  R26,Y+14
0003b8 85bf      	LDD  R27,Y+14+1
0003b9 912d      	LD   R18,X+
0003ba 87ae      	STD  Y+14,R26
0003bb 87bf      	STD  Y+14+1,R27
                 _0x200009C:
0003bc 940e 0680 	CALL SUBOPT_0x12
0003be 3050      	CPI  R21,0
0003bf f009      	BREQ _0x200009D
0003c0 5051      	SUBI R21,LOW(1)
                 _0x200009D:
0003c1 5031      	SUBI R19,LOW(1)
0003c2 cfea      	RJMP _0x2000098
                 _0x200009A:
0003c3 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
0003c4 940e 06d2 	CALL SUBOPT_0x1E
0003c6 940e 08f5 	CALL __DIVD21U
0003c8 2f2e      	MOV  R18,R30
0003c9 302a      	CPI  R18,10
0003ca f030      	BRLO _0x20000A2
0003cb ff03      	SBRS R16,3
0003cc c002      	RJMP _0x20000A3
0003cd 5c29      	SUBI R18,-LOW(55)
0003ce c001      	RJMP _0x20000A4
                 _0x20000A3:
0003cf 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
0003d0 c001      	RJMP _0x20000A5
                 _0x20000A2:
0003d1 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
0003d2 fd04      	SBRC R16,4
0003d3 c021      	RJMP _0x20000A7
0003d4 3321      	CPI  R18,49
0003d5 f460      	BRSH _0x20000A9
                +
0003d6 89a8     +LDD R26 , Y + 16
0003d7 89b9     +LDD R27 , Y + 16 + 1
0003d8 898a     +LDD R24 , Y + 16 + 2
0003d9 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0003da 30a1     +CPI R26 , LOW ( 0x1 )
0003db e0e0     +LDI R30 , HIGH ( 0x1 )
0003dc 07be     +CPC R27 , R30
0003dd e0e0     +LDI R30 , BYTE3 ( 0x1 )
0003de 078e     +CPC R24 , R30
0003df e0e0     +LDI R30 , BYTE4 ( 0x1 )
0003e0 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0003e1 f409      	BRNE _0x20000A8
                 _0x20000A9:
0003e2 c00b      	RJMP _0x20000AB
                 _0x20000A8:
0003e3 1743      	CP   R20,R19
0003e4 f440      	BRSH _0x2000116
0003e5 1753      	CP   R21,R19
0003e6 f010      	BRLO _0x20000AE
0003e7 ff00      	SBRS R16,0
0003e8 c001      	RJMP _0x20000AF
                 _0x20000AE:
0003e9 c010      	RJMP _0x20000AD
                 _0x20000AF:
0003ea e220      	LDI  R18,LOW(32)
0003eb ff07      	SBRS R16,7
0003ec c008      	RJMP _0x20000B0
                 _0x2000116:
0003ed e320      	LDI  R18,LOW(48)
                 _0x20000AB:
0003ee 6100      	ORI  R16,LOW(16)
0003ef ff02      	SBRS R16,2
0003f0 c004      	RJMP _0x20000B1
0003f1 940e 06c0 	CALL SUBOPT_0x1D
0003f3 f009      	BREQ _0x20000B2
0003f4 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
0003f5 940e 0680 	CALL SUBOPT_0x12
0003f7 3050      	CPI  R21,0
0003f8 f009      	BREQ _0x20000B3
0003f9 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
0003fa 5031      	SUBI R19,LOW(1)
0003fb 940e 06d2 	CALL SUBOPT_0x1E
0003fd 940e 0926 	CALL __MODD21U
0003ff 940e 06a2 	CALL SUBOPT_0x17
000401 89ec      	LDD  R30,Y+20
                +
000402 89a8     +LDD R26 , Y + 16
000403 89b9     +LDD R27 , Y + 16 + 1
000404 898a     +LDD R24 , Y + 16 + 2
000405 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000406 27ff      	CLR  R31
000407 2766      	CLR  R22
000408 2777      	CLR  R23
000409 940e 08f5 	CALL __DIVD21U
00040b 940e 06bb 	CALL SUBOPT_0x1C
                +
00040d 89e8     +LDD R30 , Y + 16
00040e 89f9     +LDD R31 , Y + 16 + 1
00040f 896a     +LDD R22 , Y + 16 + 2
000410 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000411 940e 096b 	CALL __CPD10
000413 f009      	BREQ _0x20000A1
000414 cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
000415 ff00      	SBRS R16,0
000416 c008      	RJMP _0x20000B4
                 _0x20000B5:
000417 3050      	CPI  R21,0
000418 f031      	BREQ _0x20000B7
000419 5051      	SUBI R21,LOW(1)
00041a e2e0      	LDI  R30,LOW(32)
00041b 93ea      	ST   -Y,R30
00041c 940e 0695 	CALL SUBOPT_0x15
00041e cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
00041f e010      	LDI  R17,LOW(0)
                 _0x2000035:
000420 ce0c      	RJMP _0x2000030
                 _0x2000032:
000421 81ae      	LDD  R26,Y+6
000422 81bf      	LDD  R27,Y+6+1
000423 940e 0936 	CALL __GETW1P
000425 940e 0976 	CALL __LOADLOCR6
000427 96ef      	ADIW R28,63
000428 966f      	ADIW R28,31
000429 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00042a 92ff      	PUSH R15
00042b 2ef8      	MOV  R15,R24
00042c 9726      	SBIW R28,6
00042d 940e 0971 	CALL __SAVELOCR4
00042f 940e 06db 	CALL SUBOPT_0x1F
000431 9730      	SBIW R30,0
000432 f419      	BRNE _0x20000B9
000433 efef      	LDI  R30,LOW(65535)
000434 efff      	LDI  R31,HIGH(65535)
000435 c023      	RJMP _0x20C0005
                 _0x20000B9:
000436 01de      	MOVW R26,R28
000437 9616      	ADIW R26,6
000438 940e 08cb 	CALL __ADDW2R15
00043a 018d      	MOVW R16,R26
00043b 940e 06db 	CALL SUBOPT_0x1F
00043d 83ee      	STD  Y+6,R30
00043e 83ff      	STD  Y+6+1,R31
00043f e0e0      	LDI  R30,LOW(0)
000440 87e8      	STD  Y+8,R30
000441 87e9      	STD  Y+8+1,R30
000442 01de      	MOVW R26,R28
000443 961a      	ADIW R26,10
000444 940e 08cb 	CALL __ADDW2R15
000446 940e 0936 	CALL __GETW1P
000448 93fa      	ST   -Y,R31
000449 93ea      	ST   -Y,R30
00044a 931a      	ST   -Y,R17
00044b 930a      	ST   -Y,R16
00044c e0e4      	LDI  R30,LOW(_put_buff_G100)
00044d e0f1      	LDI  R31,HIGH(_put_buff_G100)
00044e 93fa      	ST   -Y,R31
00044f 93ea      	ST   -Y,R30
000450 01de      	MOVW R26,R28
000451 961a      	ADIW R26,10
000452 ddbd      	RCALL __print_G100
000453 019f      	MOVW R18,R30
000454 81ae      	LDD  R26,Y+6
000455 81bf      	LDD  R27,Y+6+1
000456 e0e0      	LDI  R30,LOW(0)
000457 93ec      	ST   X,R30
000458 01f9      	MOVW R30,R18
                 _0x20C0005:
000459 940e 0978 	CALL __LOADLOCR4
00045b 962a      	ADIW R28,10
00045c 90ff      	POP  R15
00045d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00045e 93aa      	ST   -Y,R26
00045f b3eb      	IN   R30,0x1B
000460 70ef      	ANDI R30,LOW(0xF)
000461 2fae      	MOV  R26,R30
000462 81e8      	LD   R30,Y
000463 7fe0      	ANDI R30,LOW(0xF0)
000464 2bea      	OR   R30,R26
000465 bbeb      	OUT  0x1B,R30
                +
000466 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000467 958a     +DEC R24
000468 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000469 9ada      	SBI  0x1B,2
                +
00046a e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00046b 958a     +DEC R24
00046c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00046d 98da      	CBI  0x1B,2
                +
00046e e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00046f 958a     +DEC R24
000470 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000471 c076      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000472 93aa      	ST   -Y,R26
000473 81a8      	LD   R26,Y
000474 dfe9      	RCALL __lcd_write_nibble_G101
000475 81e8          ld    r30,y
000476 95e2          swap  r30
000477 83e8          st    y,r30
000478 81a8      	LD   R26,Y
000479 dfe4      	RCALL __lcd_write_nibble_G101
                +
00047a e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00047b 958a     +DEC R24
00047c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00047d c06a      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00047e 93aa      	ST   -Y,R26
00047f 81e8      	LD   R30,Y
000480 e0f0      	LDI  R31,0
000481 57e5      	SUBI R30,LOW(-__base_y_G101)
000482 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000483 81e0      	LD   R30,Z
000484 81a9      	LDD  R26,Y+1
000485 0fae      	ADD  R26,R30
000486 dfeb      	RCALL __lcd_write_data
000487 8059      	LDD  R5,Y+1
000488 8048      	LDD  R4,Y+0
000489 9622      	ADIW R28,2
00048a 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00048b e0a2      	LDI  R26,LOW(2)
00048c 940e 06e2 	CALL SUBOPT_0x20
00048e e0ac      	LDI  R26,LOW(12)
00048f dfe2      	RCALL __lcd_write_data
000490 e0a1      	LDI  R26,LOW(1)
000491 940e 06e2 	CALL SUBOPT_0x20
000493 e0e0      	LDI  R30,LOW(0)
000494 2e4e      	MOV  R4,R30
000495 2e5e      	MOV  R5,R30
000496 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000497 93aa      	ST   -Y,R26
000498 81a8      	LD   R26,Y
000499 30aa      	CPI  R26,LOW(0xA)
00049a f011      	BREQ _0x2020005
00049b 1457      	CP   R5,R7
00049c f048      	BRLO _0x2020004
                 _0x2020005:
00049d e0e0      	LDI  R30,LOW(0)
00049e 93ea      	ST   -Y,R30
00049f 9443      	INC  R4
0004a0 2da4      	MOV  R26,R4
0004a1 dfdc      	RCALL _lcd_gotoxy
0004a2 81a8      	LD   R26,Y
0004a3 30aa      	CPI  R26,LOW(0xA)
0004a4 f409      	BRNE _0x2020007
0004a5 c042      	RJMP _0x20C0004
                 _0x2020007:
                 _0x2020004:
0004a6 9453      	INC  R5
0004a7 9ad8      	SBI  0x1B,0
0004a8 81a8      	LD   R26,Y
0004a9 dfc8      	RCALL __lcd_write_data
0004aa 98d8      	CBI  0x1B,0
0004ab c03c      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0004ac 93ba      	ST   -Y,R27
0004ad 93aa      	ST   -Y,R26
0004ae 931a      	ST   -Y,R17
                 _0x2020008:
0004af 81a9      	LDD  R26,Y+1
0004b0 81ba      	LDD  R27,Y+1+1
0004b1 91ed      	LD   R30,X+
0004b2 83a9      	STD  Y+1,R26
0004b3 83ba      	STD  Y+1+1,R27
0004b4 2f1e      	MOV  R17,R30
0004b5 30e0      	CPI  R30,0
0004b6 f019      	BREQ _0x202000A
0004b7 2fa1      	MOV  R26,R17
0004b8 dfde      	RCALL _lcd_putchar
0004b9 cff5      	RJMP _0x2020008
                 _0x202000A:
0004ba 8118      	LDD  R17,Y+0
0004bb 9623      	ADIW R28,3
0004bc 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0004bd 93aa      	ST   -Y,R26
0004be b3ea      	IN   R30,0x1A
0004bf 6fe0      	ORI  R30,LOW(0xF0)
0004c0 bbea      	OUT  0x1A,R30
0004c1 9ad2      	SBI  0x1A,2
0004c2 9ad0      	SBI  0x1A,0
0004c3 9ad1      	SBI  0x1A,1
0004c4 98da      	CBI  0x1B,2
0004c5 98d8      	CBI  0x1B,0
0004c6 98d9      	CBI  0x1B,1
0004c7 8078      	LDD  R7,Y+0
0004c8 81e8      	LD   R30,Y
0004c9 58e0      	SUBI R30,-LOW(128)
                +
0004ca 93e0 028d+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0004cc 81e8      	LD   R30,Y
0004cd 54e0      	SUBI R30,-LOW(192)
                +
0004ce 93e0 028e+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0004d0 e1a4      	LDI  R26,LOW(20)
0004d1 e0b0      	LDI  R27,0
0004d2 940e 0718 	CALL _delay_ms
0004d4 940e 06e8 	CALL SUBOPT_0x21
0004d6 940e 06e8 	CALL SUBOPT_0x21
0004d8 940e 06e8 	CALL SUBOPT_0x21
0004da e2a0      	LDI  R26,LOW(32)
0004db df82      	RCALL __lcd_write_nibble_G101
                +
0004dc e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0004dd 958a     +DEC R24
0004de f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0004df e2a8      	LDI  R26,LOW(40)
0004e0 df91      	RCALL __lcd_write_data
0004e1 e0a4      	LDI  R26,LOW(4)
0004e2 df8f      	RCALL __lcd_write_data
0004e3 e8a5      	LDI  R26,LOW(133)
0004e4 df8d      	RCALL __lcd_write_data
0004e5 e0a6      	LDI  R26,LOW(6)
0004e6 df8b      	RCALL __lcd_write_data
0004e7 dfa3      	RCALL _lcd_clear
                 _0x20C0004:
0004e8 9621      	ADIW R28,1
0004e9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004ea 93ba      	ST   -Y,R27
0004eb 93aa      	ST   -Y,R26
0004ec 91e9          ld   r30,y+
0004ed 91f9          ld   r31,y+
0004ee 91a9          ld   r26,y+
0004ef 91b9          ld   r27,y+
0004f0 01cd          movw r24,r26
                 strcpyf0:
0004f1 9005      	lpm  r0,z+
0004f2 920d          st   x+,r0
0004f3 2000          tst  r0
0004f4 f7e1          brne strcpyf0
0004f5 01fc          movw r30,r24
0004f6 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004f7 93ba      	ST   -Y,R27
0004f8 93aa      	ST   -Y,R26
0004f9 91a9          ld   r26,y+
0004fa 91b9          ld   r27,y+
0004fb 27ee          clr  r30
0004fc 27ff          clr  r31
                 strlen0:
0004fd 916d          ld   r22,x+
0004fe 2366          tst  r22
0004ff f011          breq strlen1
000500 9631          adiw r30,1
000501 cffb          rjmp strlen0
                 strlen1:
000502 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000503 93ba      	ST   -Y,R27
000504 93aa      	ST   -Y,R26
000505 27aa          clr  r26
000506 27bb          clr  r27
000507 91e9          ld   r30,y+
000508 91f9          ld   r31,y+
                 strlenf0:
000509 9005      	lpm  r0,z+
00050a 2000          tst  r0
00050b f011          breq strlenf1
00050c 9611          adiw r26,1
00050d cffb          rjmp strlenf0
                 strlenf1:
00050e 01fd          movw r30,r26
00050f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000510 940e 0959 	CALL __PUTPARD2
000512 817b         ldd  r23,y+3
000513 816a         ldd  r22,y+2
000514 81f9         ldd  r31,y+1
000515 81e8         ld   r30,y
000516 fb77         bst  r23,7
000517 0f77         lsl  r23
000518 fd67         sbrc r22,7
000519 6071         sbr  r23,1
00051a 2f97         mov  r25,r23
00051b 579e         subi r25,0x7e
00051c f081         breq __ftrunc0
00051d f078         brcs __ftrunc0
00051e 3198         cpi  r25,24
00051f f490         brsh __ftrunc1
000520 27aa         clr  r26
000521 27bb         clr  r27
000522 2788         clr  r24
                 __ftrunc2:
000523 9408         sec
000524 9587         ror  r24
000525 95b7         ror  r27
000526 95a7         ror  r26
000527 959a         dec  r25
000528 f7d1         brne __ftrunc2
000529 23ea         and  r30,r26
00052a 23fb         and  r31,r27
00052b 2368         and  r22,r24
00052c c005         rjmp __ftrunc1
                 __ftrunc0:
00052d 94e8         clt
00052e 2777         clr  r23
00052f 27ee         clr  r30
000530 27ff         clr  r31
000531 2766         clr  r22
                 __ftrunc1:
000532 776f         cbr  r22,0x80
000533 9576         lsr  r23
000534 f408         brcc __ftrunc3
000535 6860         sbr  r22,0x80
                 __ftrunc3:
000536 f977         bld  r23,7
000537 91a9         ld   r26,y+
000538 91b9         ld   r27,y+
000539 9189         ld   r24,y+
00053a 9199         ld   r25,y+
00053b 17ea         cp   r30,r26
00053c 07fb         cpc  r31,r27
00053d 0768         cpc  r22,r24
00053e 0779         cpc  r23,r25
00053f fb97         bst  r25,7
000540 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000541 940e 0959 	CALL __PUTPARD2
000543 940e 094a 	CALL __GETD2S0
000545 940e 0510 	CALL _ftrunc
000547 940e 094f 	CALL __PUTD1S0
000549 f419          brne __floor1
                 __floor0:
00054a 940e 0945 	CALL __GETD1S0
00054c c009      	RJMP _0x20C0003
                 __floor1:
00054d f7e6          brtc __floor0
00054e 940e 0945 	CALL __GETD1S0
                +
000550 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000551 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000552 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000553 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000554 940e 07c1 	CALL __SUBF12
                 _0x20C0003:
000556 9624      	ADIW R28,4
000557 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000558 d0c4      	RCALL SUBOPT_0x5
000559 e0e0      	LDI  R30,LOW(0)
00055a 83ea      	STD  Y+2,R30
00055b e3ef      	LDI  R30,LOW(63)
00055c 83eb      	STD  Y+3,R30
00055d 931a      	ST   -Y,R17
00055e 930a      	ST   -Y,R16
00055f 85eb      	LDD  R30,Y+11
000560 85fc      	LDD  R31,Y+11+1
000561 3fef      	CPI  R30,LOW(0xFFFF)
000562 efaf      	LDI  R26,HIGH(0xFFFF)
000563 07fa      	CPC  R31,R26
000564 f431      	BRNE _0x20A000D
000565 d189      	RCALL SUBOPT_0x22
                +
000566 e8a6     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000567 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000568 940e 04ea 	CALL _strcpyf
00056a c08a      	RJMP _0x20C0002
                 _0x20A000D:
00056b 3fef      	CPI  R30,LOW(0x7FFF)
00056c e7af      	LDI  R26,HIGH(0x7FFF)
00056d 07fa      	CPC  R31,R26
00056e f431      	BRNE _0x20A000C
00056f d17f      	RCALL SUBOPT_0x22
                +
000570 e8a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000571 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000572 940e 04ea 	CALL _strcpyf
000574 c080      	RJMP _0x20C0002
                 _0x20A000C:
000575 85ac      	LDD  R26,Y+12
000576 23aa      	TST  R26
000577 f452      	BRPL _0x20A000F
                +
000578 85e9     +LDD R30 , Y + 9
000579 85fa     +LDD R31 , Y + 9 + 1
00057a 856b     +LDD R22 , Y + 9 + 2
00057b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00057c 940e 0722 	CALL __ANEGF1
00057e d175      	RCALL SUBOPT_0x23
00057f d179      	RCALL SUBOPT_0x24
000580 e2ed      	LDI  R30,LOW(45)
000581 93ec      	ST   X,R30
                 _0x20A000F:
000582 85a8      	LDD  R26,Y+8
000583 30a7      	CPI  R26,LOW(0x7)
000584 f010      	BRLO _0x20A0010
000585 e0e6      	LDI  R30,LOW(6)
000586 87e8      	STD  Y+8,R30
                 _0x20A0010:
000587 8518      	LDD  R17,Y+8
                 _0x20A0011:
000588 2fe1      	MOV  R30,R17
000589 5011      	SUBI R17,1
00058a 30e0      	CPI  R30,0
00058b f021      	BREQ _0x20A0013
00058c d173      	RCALL SUBOPT_0x25
00058d d0d4      	RCALL SUBOPT_0xD
00058e d176      	RCALL SUBOPT_0x26
00058f cff8      	RJMP _0x20A0011
                 _0x20A0013:
000590 d179      	RCALL SUBOPT_0x27
000591 940e 07c8 	CALL __ADDF12
000593 d160      	RCALL SUBOPT_0x23
000594 e010      	LDI  R17,LOW(0)
                +
000595 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000596 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000597 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000598 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000599 d16b      	RCALL SUBOPT_0x26
                 _0x20A0014:
00059a d16f      	RCALL SUBOPT_0x27
00059b 940e 08ab 	CALL __CMPF12
00059d f068      	BRLO _0x20A0016
00059e d161      	RCALL SUBOPT_0x25
00059f d0af      	RCALL SUBOPT_0xA
0005a0 d164      	RCALL SUBOPT_0x26
0005a1 5f1f      	SUBI R17,-LOW(1)
0005a2 3217      	CPI  R17,39
0005a3 f030      	BRLO _0x20A0017
0005a4 d14a      	RCALL SUBOPT_0x22
                +
0005a5 e8ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005a6 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005a7 940e 04ea 	CALL _strcpyf
0005a9 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005aa cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005ab 3010      	CPI  R17,0
0005ac f421      	BRNE _0x20A0018
0005ad d14b      	RCALL SUBOPT_0x24
0005ae e3e0      	LDI  R30,LOW(48)
0005af 93ec      	ST   X,R30
0005b0 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005b1 2fe1      	MOV  R30,R17
0005b2 5011      	SUBI R17,1
0005b3 30e0      	CPI  R30,0
0005b4 f0e1      	BREQ _0x20A001C
0005b5 d14a      	RCALL SUBOPT_0x25
0005b6 d0ab      	RCALL SUBOPT_0xD
0005b7 d0a3      	RCALL SUBOPT_0xC
0005b8 01df      	MOVW R26,R30
0005b9 01cb      	MOVW R24,R22
0005ba 940e 0541 	CALL _floor
0005bc d148      	RCALL SUBOPT_0x26
0005bd d14c      	RCALL SUBOPT_0x27
0005be 940e 0866 	CALL __DIVF21
0005c0 940e 0755 	CALL __CFD1U
0005c2 2f0e      	MOV  R16,R30
0005c3 d135      	RCALL SUBOPT_0x24
0005c4 d0ab      	RCALL SUBOPT_0xF
0005c5 e0f0      	LDI  R31,0
0005c6 d139      	RCALL SUBOPT_0x25
0005c7 940e 08dd 	CALL __CWD1
0005c9 940e 078e 	CALL __CDF1
0005cb 940e 0818 	CALL __MULF12
0005cd d145      	RCALL SUBOPT_0x28
0005ce d0a6      	RCALL SUBOPT_0x10
0005cf d124      	RCALL SUBOPT_0x23
0005d0 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005d1 85e8      	LDD  R30,Y+8
0005d2 30e0      	CPI  R30,0
0005d3 f0e9      	BREQ _0x20C0001
0005d4 d124      	RCALL SUBOPT_0x24
0005d5 e2ee      	LDI  R30,LOW(46)
0005d6 93ec      	ST   X,R30
                 _0x20A001E:
0005d7 85e8      	LDD  R30,Y+8
0005d8 50e1      	SUBI R30,LOW(1)
0005d9 87e8      	STD  Y+8,R30
0005da 5fef      	SUBI R30,-LOW(1)
0005db f0a9      	BREQ _0x20A0020
0005dc d136      	RCALL SUBOPT_0x28
0005dd d071      	RCALL SUBOPT_0xA
0005de d115      	RCALL SUBOPT_0x23
                +
0005df 85e9     +LDD R30 , Y + 9
0005e0 85fa     +LDD R31 , Y + 9 + 1
0005e1 856b     +LDD R22 , Y + 9 + 2
0005e2 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005e3 940e 0755 	CALL __CFD1U
0005e5 2f0e      	MOV  R16,R30
0005e6 d112      	RCALL SUBOPT_0x24
0005e7 d088      	RCALL SUBOPT_0xF
0005e8 e0f0      	LDI  R31,0
0005e9 d129      	RCALL SUBOPT_0x28
0005ea 940e 08dd 	CALL __CWD1
0005ec 940e 078e 	CALL __CDF1
0005ee d086      	RCALL SUBOPT_0x10
0005ef d104      	RCALL SUBOPT_0x23
0005f0 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005f1 81ae      	LDD  R26,Y+6
0005f2 81bf      	LDD  R27,Y+6+1
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 93ec      	ST   X,R30
                 _0x20C0002:
0005f5 8119      	LDD  R17,Y+1
0005f6 8108      	LDD  R16,Y+0
0005f7 962d      	ADIW R28,13
0005f8 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _temp:
00027c           	.BYTE 0x4
                 _st:
000280           	.BYTE 0xB
                 __base_y_G101:
00028b           	.BYTE 0x4
                 __seed_G105:
00028f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
0005f9 91a0 027c 	LDS  R26,_temp
0005fb 91b0 027d 	LDS  R27,_temp+1
0005fd 9180 027e 	LDS  R24,_temp+2
0005ff 9190 027f 	LDS  R25,_temp+3
000601 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000602 dff6      	RCALL SUBOPT_0x0
                +
000603 e0e0     +LDI R30 , LOW ( 0x42200000 )
000604 e0f0     +LDI R31 , HIGH ( 0x42200000 )
000605 e260     +LDI R22 , BYTE3 ( 0x42200000 )
000606 e472     +LDI R23 , BYTE4 ( 0x42200000 )
                 	__GETD1N 0x42200000
000607 940e 08ab 	CALL __CMPF12
000609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00060a e0e0      	LDI  R30,LOW(0)
00060b 93ea      	ST   -Y,R30
00060c e0a1      	LDI  R26,LOW(1)
00060d 940c 047e 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00060f dfe9      	RCALL SUBOPT_0x0
                +
000610 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000611 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000612 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
000613 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
000614 940e 08ab 	CALL __CMPF12
000616 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000617 91ed      	LD   R30,X+
000618 91fd      	LD   R31,X+
000619 9631      	ADIW R30,1
00061a 93fe      	ST   -X,R31
00061b 93ee      	ST   -X,R30
00061c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
00061d 93ba      	ST   -Y,R27
00061e 93aa      	ST   -Y,R26
00061f 9724      	SBIW R28,4
000620 e0e0      	LDI  R30,LOW(0)
000621 83e8      	ST   Y,R30
000622 83e9      	STD  Y+1,R30
000623 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x6:
                +
000624 81ac     +LDD R26 , Y + 4
000625 81bd     +LDD R27 , Y + 4 + 1
000626 818e     +LDD R24 , Y + 4 + 2
000627 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000628 e0e0     +LDI R30 , LOW ( 0x41200000 )
000629 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00062a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00062b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00062c 940e 0818 	CALL __MULF12
                +
00062e 83ec     +STD Y + 4 , R30
00062f 83fd     +STD Y + 4 + 1 , R31
000630 836e     +STD Y + 4 + 2 , R22
000631 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000632 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
                +
000633 81ec     +LDD R30 , Y + 4
000634 81fd     +LDD R31 , Y + 4 + 1
000635 816e     +LDD R22 , Y + 4 + 2
000636 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000637 85ac     +LDD R26 , Y + 12
000638 85bd     +LDD R27 , Y + 12 + 1
000639 858e     +LDD R24 , Y + 12 + 2
00063a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00063b 940e 08ab 	CALL __CMPF12
00063d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
00063e 85ac     +LDD R26 , Y + 12
00063f 85bd     +LDD R27 , Y + 12 + 1
000640 858e     +LDD R24 , Y + 12 + 2
000641 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
                +
000643 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000644 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000645 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000646 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000647 940e 0818 	CALL __MULF12
                +
000649 87ec     +STD Y + 12 , R30
00064a 87fd     +STD Y + 12 + 1 , R31
00064b 876e     +STD Y + 12 + 2 , R22
00064c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00064d 5f3f      	SUBI R19,-LOW(1)
00064e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
00064f e0e0     +LDI R30 , LOW ( 0x41200000 )
000650 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000651 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000652 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000653 940e 0818 	CALL __MULF12
000655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000656 87ec     +STD Y + 12 , R30
000657 87fd     +STD Y + 12 + 1 , R31
000658 876e     +STD Y + 12 + 2 , R22
000659 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00065a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
00065b e0a0     +LDI R26 , LOW ( 0x3F000000 )
00065c e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00065d e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00065e e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00065f 940e 07c8 	CALL __ADDF12
000661 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
000662 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000663 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000664 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000665 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000666 940e 0818 	CALL __MULF12
000668 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000669 85a8      	LDD  R26,Y+8
00066a 85b9      	LDD  R27,Y+8+1
00066b 9611      	ADIW R26,1
00066c 87a8      	STD  Y+8,R26
00066d 87b9      	STD  Y+8+1,R27
00066e 9711      	SBIW R26,1
00066f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000670 2fe0      	MOV  R30,R16
000671 5de0      	SUBI R30,-LOW(48)
000672 93ec      	ST   X,R30
000673 2fe0      	MOV  R30,R16
000674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000675 940e 095e 	CALL __SWAPD12
000677 940e 07c1 	CALL __SUBF12
000679 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
00067a 85e8      	LDD  R30,Y+8
00067b 85f9      	LDD  R31,Y+8+1
00067c 9631      	ADIW R30,1
00067d 87e8      	STD  Y+8,R30
00067e 87f9      	STD  Y+8+1,R31
00067f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000680 932a      	ST   -Y,R18
000681 81af      	LDD  R26,Y+7
000682 85b8      	LDD  R27,Y+7+1
000683 85e9      	LDD  R30,Y+9
000684 85fa      	LDD  R31,Y+9+1
000685 9509      	ICALL
000686 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x13:
                +
000687 01fe     +MOVW R30 , R28
000688 5ae6     +SUBI R30 , LOW ( - 90 )
000689 4fff     +SBCI R31 , HIGH ( - 90 )
00068a 9001     +LD R0 , Z +
00068b 81f0     +LD R31 , Z
00068c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00068d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x14:
00068e 9734      	SBIW R30,4
                +
00068f 01de     +MOVW R26 , R28
000690 5aa6     +SUBI R26 , LOW ( - 90 )
000691 4fbf     +SBCI R27 , HIGH ( - 90 )
000692 93ed     +ST X + , R30
000693 93fc     +ST X , R31
                 	__PUTW1SX 90
000694 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000695 81af      	LDD  R26,Y+7
000696 85b8      	LDD  R27,Y+7+1
000697 85e9      	LDD  R30,Y+9
000698 85fa      	LDD  R31,Y+9+1
000699 9509      	ICALL
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x16:
                +
00069b 01de     +MOVW R26 , R28
00069c 5aa6     +SUBI R26 , LOW ( - 90 )
00069d 4fbf     +SBCI R27 , HIGH ( - 90 )
00069e 900d     +LD R0 , X +
00069f 91bc     +LD R27 , X
0006a0 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
0006a2 87ea     +STD Y + 10 , R30
0006a3 87fb     +STD Y + 10 + 1 , R31
0006a4 876c     +STD Y + 10 + 2 , R22
0006a5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
0006a7 dfdf      	RCALL SUBOPT_0x13
0006a8 cfe5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
0006a9 85ea     +LDD R30 , Y + 10
0006aa 85fb     +LDD R31 , Y + 10 + 1
0006ab 856c     +LDD R22 , Y + 10 + 2
0006ac 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
0006ae 87ee      	STD  Y+14,R30
0006af 87ff      	STD  Y+14+1,R31
0006b0 85ae      	LDD  R26,Y+14
0006b1 85bf      	LDD  R27,Y+14+1
0006b2 940e 04f7 	CALL _strlen
0006b4 2f1e      	MOV  R17,R30
0006b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
0006b6 dfe4      	RCALL SUBOPT_0x16
0006b7 9614      	ADIW R26,4
0006b8 940e 0936 	CALL __GETW1P
0006ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
                +
0006bb 8be8     +STD Y + 16 , R30
0006bc 8bf9     +STD Y + 16 + 1 , R31
0006bd 8b6a     +STD Y + 16 + 2 , R22
0006be 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0006bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1D:
0006c0 7f0b      	ANDI R16,LOW(251)
0006c1 89ed      	LDD  R30,Y+21
0006c2 93ea      	ST   -Y,R30
                +
0006c3 01de     +MOVW R26 , R28
0006c4 5aa9     +SUBI R26 , LOW ( - 87 )
0006c5 4fbf     +SBCI R27 , HIGH ( - 87 )
0006c6 900d     +LD R0 , X +
0006c7 91bc     +LD R27 , X
0006c8 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006c9 01fe     +MOVW R30 , R28
0006ca 5ae7     +SUBI R30 , LOW ( - 89 )
0006cb 4fff     +SBCI R31 , HIGH ( - 89 )
0006cc 9001     +LD R0 , Z +
0006cd 81f0     +LD R31 , Z
0006ce 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006cf 9509      	ICALL
0006d0 3050      	CPI  R21,0
0006d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
                +
0006d2 89e8     +LDD R30 , Y + 16
0006d3 89f9     +LDD R31 , Y + 16 + 1
0006d4 896a     +LDD R22 , Y + 16 + 2
0006d5 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0006d6 85aa     +LDD R26 , Y + 10
0006d7 85bb     +LDD R27 , Y + 10 + 1
0006d8 858c     +LDD R24 , Y + 10 + 2
0006d9 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0006da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
0006db 01de      	MOVW R26,R28
0006dc 961c      	ADIW R26,12
0006dd 940e 08cb 	CALL __ADDW2R15
0006df 940e 0936 	CALL __GETW1P
0006e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
0006e2 940e 0472 	CALL __lcd_write_data
0006e4 e0a3      	LDI  R26,LOW(3)
0006e5 e0b0      	LDI  R27,0
0006e6 940c 0718 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
0006e8 e3a0      	LDI  R26,LOW(48)
0006e9 940e 045e 	CALL __lcd_write_nibble_G101
                +
0006eb e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0006ec 958a     +DEC R24
0006ed f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0006ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
0006ef 81ee      	LDD  R30,Y+6
0006f0 81ff      	LDD  R31,Y+6+1
0006f1 93fa      	ST   -Y,R31
0006f2 93ea      	ST   -Y,R30
0006f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
0006f4 87e9     +STD Y + 9 , R30
0006f5 87fa     +STD Y + 9 + 1 , R31
0006f6 876b     +STD Y + 9 + 2 , R22
0006f7 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
0006f9 81ae      	LDD  R26,Y+6
0006fa 81bf      	LDD  R27,Y+6+1
0006fb 9611      	ADIW R26,1
0006fc 83ae      	STD  Y+6,R26
0006fd 83bf      	STD  Y+6+1,R27
0006fe 9711      	SBIW R26,1
0006ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
000700 81aa     +LDD R26 , Y + 2
000701 81bb     +LDD R27 , Y + 2 + 1
000702 818c     +LDD R24 , Y + 2 + 2
000703 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000704 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000705 83ea     +STD Y + 2 , R30
000706 83fb     +STD Y + 2 + 1 , R31
000707 836c     +STD Y + 2 + 2 , R22
000708 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000709 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
00070a 81ea     +LDD R30 , Y + 2
00070b 81fb     +LDD R31 , Y + 2 + 1
00070c 816c     +LDD R22 , Y + 2 + 2
00070d 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00070e 85a9     +LDD R26 , Y + 9
00070f 85ba     +LDD R27 , Y + 9 + 1
000710 858b     +LDD R24 , Y + 9 + 2
000711 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000712 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
000713 85a9     +LDD R26 , Y + 9
000714 85ba     +LDD R27 , Y + 9 + 1
000715 858b     +LDD R24 , Y + 9 + 2
000716 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000717 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000718 9610      	adiw r26,0
000719 f039      	breq __delay_ms1
                 __delay_ms0:
00071a 95a8      	wdr
                +
00071b ef8a     +LDI R24 , LOW ( 0xFA )
00071c e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00071d 9701     +SBIW R24 , 1
00071e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00071f 9711      	sbiw r26,1
000720 f7c9      	brne __delay_ms0
                 __delay_ms1:
000721 9508      	ret
                 
                 __ANEGF1:
000722 9730      	SBIW R30,0
000723 4060      	SBCI R22,0
000724 4070      	SBCI R23,0
000725 f009      	BREQ __ANEGF10
000726 5870      	SUBI R23,0x80
                 __ANEGF10:
000727 9508      	RET
                 
                 __ROUND_REPACK:
000728 2355      	TST  R21
000729 f442      	BRPL __REPACK
00072a 3850      	CPI  R21,0x80
00072b f411      	BRNE __ROUND_REPACK0
00072c ffe0      	SBRS R30,0
00072d c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00072e 9631      	ADIW R30,1
00072f 1f69      	ADC  R22,R25
000730 1f79      	ADC  R23,R25
000731 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000732 e850      	LDI  R21,0x80
000733 2757      	EOR  R21,R23
000734 f411      	BRNE __REPACK0
000735 935f      	PUSH R21
000736 c0cf      	RJMP __ZERORES
                 __REPACK0:
000737 3f5f      	CPI  R21,0xFF
000738 f031      	BREQ __REPACK1
000739 0f66      	LSL  R22
00073a 0c00      	LSL  R0
00073b 9557      	ROR  R21
00073c 9567      	ROR  R22
00073d 2f75      	MOV  R23,R21
00073e 9508      	RET
                 __REPACK1:
00073f 935f      	PUSH R21
000740 2000      	TST  R0
000741 f00a      	BRMI __REPACK2
000742 c0cf      	RJMP __MAXRES
                 __REPACK2:
000743 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000744 e850      	LDI  R21,0x80
000745 2e19      	MOV  R1,R25
000746 2215      	AND  R1,R21
000747 0f88      	LSL  R24
000748 1f99      	ROL  R25
000749 2795      	EOR  R25,R21
00074a 0f55      	LSL  R21
00074b 9587      	ROR  R24
                 
                 __UNPACK1:
00074c e850      	LDI  R21,0x80
00074d 2e07      	MOV  R0,R23
00074e 2205      	AND  R0,R21
00074f 0f66      	LSL  R22
000750 1f77      	ROL  R23
000751 2775      	EOR  R23,R21
000752 0f55      	LSL  R21
000753 9567      	ROR  R22
000754 9508      	RET
                 
                 __CFD1U:
000755 9468      	SET
000756 c001      	RJMP __CFD1U0
                 __CFD1:
000757 94e8      	CLT
                 __CFD1U0:
000758 935f      	PUSH R21
000759 dff2      	RCALL __UNPACK1
00075a 3870      	CPI  R23,0x80
00075b f018      	BRLO __CFD10
00075c 3f7f      	CPI  R23,0xFF
00075d f408      	BRCC __CFD10
00075e c0a7      	RJMP __ZERORES
                 __CFD10:
00075f e156      	LDI  R21,22
000760 1b57      	SUB  R21,R23
000761 f4aa      	BRPL __CFD11
000762 9551      	NEG  R21
000763 3058      	CPI  R21,8
000764 f40e      	BRTC __CFD19
000765 3059      	CPI  R21,9
                 __CFD19:
000766 f030      	BRLO __CFD17
000767 efef      	SER  R30
000768 efff      	SER  R31
000769 ef6f      	SER  R22
00076a e77f      	LDI  R23,0x7F
00076b f977      	BLD  R23,7
00076c c01a      	RJMP __CFD15
                 __CFD17:
00076d 2777      	CLR  R23
00076e 2355      	TST  R21
00076f f0b9      	BREQ __CFD15
                 __CFD18:
000770 0fee      	LSL  R30
000771 1fff      	ROL  R31
000772 1f66      	ROL  R22
000773 1f77      	ROL  R23
000774 955a      	DEC  R21
000775 f7d1      	BRNE __CFD18
000776 c010      	RJMP __CFD15
                 __CFD11:
000777 2777      	CLR  R23
                 __CFD12:
000778 3058      	CPI  R21,8
000779 f028      	BRLO __CFD13
00077a 2fef      	MOV  R30,R31
00077b 2ff6      	MOV  R31,R22
00077c 2f67      	MOV  R22,R23
00077d 5058      	SUBI R21,8
00077e cff9      	RJMP __CFD12
                 __CFD13:
00077f 2355      	TST  R21
000780 f031      	BREQ __CFD15
                 __CFD14:
000781 9576      	LSR  R23
000782 9567      	ROR  R22
000783 95f7      	ROR  R31
000784 95e7      	ROR  R30
000785 955a      	DEC  R21
000786 f7d1      	BRNE __CFD14
                 __CFD15:
000787 2000      	TST  R0
000788 f40a      	BRPL __CFD16
000789 d145      	RCALL __ANEGD1
                 __CFD16:
00078a 915f      	POP  R21
00078b 9508      	RET
                 
                 __CDF1U:
00078c 9468      	SET
00078d c001      	RJMP __CDF1U0
                 __CDF1:
00078e 94e8      	CLT
                 __CDF1U0:
00078f 9730      	SBIW R30,0
000790 4060      	SBCI R22,0
000791 4070      	SBCI R23,0
000792 f0b1      	BREQ __CDF10
000793 2400      	CLR  R0
000794 f026      	BRTS __CDF11
000795 2377      	TST  R23
000796 f412      	BRPL __CDF11
000797 9400      	COM  R0
000798 d136      	RCALL __ANEGD1
                 __CDF11:
000799 2e17      	MOV  R1,R23
00079a e17e      	LDI  R23,30
00079b 2011      	TST  R1
                 __CDF12:
00079c f032      	BRMI __CDF13
00079d 957a      	DEC  R23
00079e 0fee      	LSL  R30
00079f 1fff      	ROL  R31
0007a0 1f66      	ROL  R22
0007a1 1c11      	ROL  R1
0007a2 cff9      	RJMP __CDF12
                 __CDF13:
0007a3 2fef      	MOV  R30,R31
0007a4 2ff6      	MOV  R31,R22
0007a5 2d61      	MOV  R22,R1
0007a6 935f      	PUSH R21
0007a7 df8a      	RCALL __REPACK
0007a8 915f      	POP  R21
                 __CDF10:
0007a9 9508      	RET
                 
                 __SWAPACC:
0007aa 934f      	PUSH R20
0007ab 01af      	MOVW R20,R30
0007ac 01fd      	MOVW R30,R26
0007ad 01da      	MOVW R26,R20
0007ae 01ab      	MOVW R20,R22
0007af 01bc      	MOVW R22,R24
0007b0 01ca      	MOVW R24,R20
0007b1 2d40      	MOV  R20,R0
0007b2 2c01      	MOV  R0,R1
0007b3 2e14      	MOV  R1,R20
0007b4 914f      	POP  R20
0007b5 9508      	RET
                 
                 __UADD12:
0007b6 0fea      	ADD  R30,R26
0007b7 1ffb      	ADC  R31,R27
0007b8 1f68      	ADC  R22,R24
0007b9 9508      	RET
                 
                 __NEGMAN1:
0007ba 95e0      	COM  R30
0007bb 95f0      	COM  R31
0007bc 9560      	COM  R22
0007bd 5fef      	SUBI R30,-1
0007be 4fff      	SBCI R31,-1
0007bf 4f6f      	SBCI R22,-1
0007c0 9508      	RET
                 
                 __SUBF12:
0007c1 935f      	PUSH R21
0007c2 df81      	RCALL __UNPACK
0007c3 3890      	CPI  R25,0x80
0007c4 f171      	BREQ __ADDF129
0007c5 e850      	LDI  R21,0x80
0007c6 2615      	EOR  R1,R21
                 
0007c7 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007c8 935f      	PUSH R21
0007c9 df7a      	RCALL __UNPACK
0007ca 3890      	CPI  R25,0x80
0007cb f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007cc 3870      	CPI  R23,0x80
0007cd f121      	BREQ __ADDF128
                 __ADDF121:
0007ce 2f57      	MOV  R21,R23
0007cf 1b59      	SUB  R21,R25
0007d0 f12b      	BRVS __ADDF1211
0007d1 f412      	BRPL __ADDF122
0007d2 dfd7      	RCALL __SWAPACC
0007d3 cffa      	RJMP __ADDF121
                 __ADDF122:
0007d4 3158      	CPI  R21,24
0007d5 f018      	BRLO __ADDF123
0007d6 27aa      	CLR  R26
0007d7 27bb      	CLR  R27
0007d8 2788      	CLR  R24
                 __ADDF123:
0007d9 3058      	CPI  R21,8
0007da f028      	BRLO __ADDF124
0007db 2fab      	MOV  R26,R27
0007dc 2fb8      	MOV  R27,R24
0007dd 2788      	CLR  R24
0007de 5058      	SUBI R21,8
0007df cff9      	RJMP __ADDF123
                 __ADDF124:
0007e0 2355      	TST  R21
0007e1 f029      	BREQ __ADDF126
                 __ADDF125:
0007e2 9586      	LSR  R24
0007e3 95b7      	ROR  R27
0007e4 95a7      	ROR  R26
0007e5 955a      	DEC  R21
0007e6 f7d9      	BRNE __ADDF125
                 __ADDF126:
0007e7 2d50      	MOV  R21,R0
0007e8 2551      	EOR  R21,R1
0007e9 f072      	BRMI __ADDF127
0007ea dfcb      	RCALL __UADD12
0007eb f438      	BRCC __ADDF129
0007ec 9567      	ROR  R22
0007ed 95f7      	ROR  R31
0007ee 95e7      	ROR  R30
0007ef 9573      	INC  R23
0007f0 f413      	BRVC __ADDF129
0007f1 c020      	RJMP __MAXRES
                 __ADDF128:
0007f2 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007f3 df3e      	RCALL __REPACK
0007f4 915f      	POP  R21
0007f5 9508      	RET
                 __ADDF1211:
0007f6 f7d8      	BRCC __ADDF128
0007f7 cffb      	RJMP __ADDF129
                 __ADDF127:
0007f8 1bea      	SUB  R30,R26
0007f9 0bfb      	SBC  R31,R27
0007fa 0b68      	SBC  R22,R24
0007fb f051      	BREQ __ZERORES
0007fc f410      	BRCC __ADDF1210
0007fd 9400      	COM  R0
0007fe dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007ff 2366      	TST  R22
000800 f392      	BRMI __ADDF129
000801 0fee      	LSL  R30
000802 1fff      	ROL  R31
000803 1f66      	ROL  R22
000804 957a      	DEC  R23
000805 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000806 27ee      	CLR  R30
000807 27ff      	CLR  R31
000808 2766      	CLR  R22
000809 2777      	CLR  R23
00080a 915f      	POP  R21
00080b 9508      	RET
                 
                 __MINRES:
00080c efef      	SER  R30
00080d efff      	SER  R31
00080e e76f      	LDI  R22,0x7F
00080f ef7f      	SER  R23
000810 915f      	POP  R21
000811 9508      	RET
                 
                 __MAXRES:
000812 efef      	SER  R30
000813 efff      	SER  R31
000814 e76f      	LDI  R22,0x7F
000815 e77f      	LDI  R23,0x7F
000816 915f      	POP  R21
000817 9508      	RET
                 
                 __MULF12:
000818 935f      	PUSH R21
000819 df2a      	RCALL __UNPACK
00081a 3870      	CPI  R23,0x80
00081b f351      	BREQ __ZERORES
00081c 3890      	CPI  R25,0x80
00081d f341      	BREQ __ZERORES
00081e 2401      	EOR  R0,R1
00081f 9408      	SEC
000820 1f79      	ADC  R23,R25
000821 f423      	BRVC __MULF124
000822 f31c      	BRLT __ZERORES
                 __MULF125:
000823 2000      	TST  R0
000824 f33a      	BRMI __MINRES
000825 cfec      	RJMP __MAXRES
                 __MULF124:
000826 920f      	PUSH R0
000827 931f      	PUSH R17
000828 932f      	PUSH R18
000829 933f      	PUSH R19
00082a 934f      	PUSH R20
00082b 2711      	CLR  R17
00082c 2722      	CLR  R18
00082d 2799      	CLR  R25
00082e 9f68      	MUL  R22,R24
00082f 01a0      	MOVW R20,R0
000830 9f8f      	MUL  R24,R31
000831 2d30      	MOV  R19,R0
000832 0d41      	ADD  R20,R1
000833 1f59      	ADC  R21,R25
000834 9f6b      	MUL  R22,R27
000835 0d30      	ADD  R19,R0
000836 1d41      	ADC  R20,R1
000837 1f59      	ADC  R21,R25
000838 9f8e      	MUL  R24,R30
000839 d027      	RCALL __MULF126
00083a 9fbf      	MUL  R27,R31
00083b d025      	RCALL __MULF126
00083c 9f6a      	MUL  R22,R26
00083d d023      	RCALL __MULF126
00083e 9fbe      	MUL  R27,R30
00083f d01d      	RCALL __MULF127
000840 9faf      	MUL  R26,R31
000841 d01b      	RCALL __MULF127
000842 9fae      	MUL  R26,R30
000843 0d11      	ADD  R17,R1
000844 1f29      	ADC  R18,R25
000845 1f39      	ADC  R19,R25
000846 1f49      	ADC  R20,R25
000847 1f59      	ADC  R21,R25
000848 2fe3      	MOV  R30,R19
000849 2ff4      	MOV  R31,R20
00084a 2f65      	MOV  R22,R21
00084b 2f52      	MOV  R21,R18
00084c 914f      	POP  R20
00084d 913f      	POP  R19
00084e 912f      	POP  R18
00084f 911f      	POP  R17
000850 900f      	POP  R0
000851 2366      	TST  R22
000852 f02a      	BRMI __MULF122
000853 0f55      	LSL  R21
000854 1fee      	ROL  R30
000855 1fff      	ROL  R31
000856 1f66      	ROL  R22
000857 c002      	RJMP __MULF123
                 __MULF122:
000858 9573      	INC  R23
000859 f24b      	BRVS __MULF125
                 __MULF123:
00085a decd      	RCALL __ROUND_REPACK
00085b 915f      	POP  R21
00085c 9508      	RET
                 
                 __MULF127:
00085d 0d10      	ADD  R17,R0
00085e 1d21      	ADC  R18,R1
00085f 1f39      	ADC  R19,R25
000860 c002      	RJMP __MULF128
                 __MULF126:
000861 0d20      	ADD  R18,R0
000862 1d31      	ADC  R19,R1
                 __MULF128:
000863 1f49      	ADC  R20,R25
000864 1f59      	ADC  R21,R25
000865 9508      	RET
                 
                 __DIVF21:
000866 935f      	PUSH R21
000867 dedc      	RCALL __UNPACK
000868 3870      	CPI  R23,0x80
000869 f421      	BRNE __DIVF210
00086a 2011      	TST  R1
                 __DIVF211:
00086b f40a      	BRPL __DIVF219
00086c cf9f      	RJMP __MINRES
                 __DIVF219:
00086d cfa4      	RJMP __MAXRES
                 __DIVF210:
00086e 3890      	CPI  R25,0x80
00086f f409      	BRNE __DIVF218
                 __DIVF217:
000870 cf95      	RJMP __ZERORES
                 __DIVF218:
000871 2401      	EOR  R0,R1
000872 9408      	SEC
000873 0b97      	SBC  R25,R23
000874 f41b      	BRVC __DIVF216
000875 f3d4      	BRLT __DIVF217
000876 2000      	TST  R0
000877 cff3      	RJMP __DIVF211
                 __DIVF216:
000878 2f79      	MOV  R23,R25
000879 931f      	PUSH R17
00087a 932f      	PUSH R18
00087b 933f      	PUSH R19
00087c 934f      	PUSH R20
00087d 2411      	CLR  R1
00087e 2711      	CLR  R17
00087f 2722      	CLR  R18
000880 2733      	CLR  R19
000881 2744      	CLR  R20
000882 2755      	CLR  R21
000883 e290      	LDI  R25,32
                 __DIVF212:
000884 17ae      	CP   R26,R30
000885 07bf      	CPC  R27,R31
000886 0786      	CPC  R24,R22
000887 0741      	CPC  R20,R17
000888 f030      	BRLO __DIVF213
000889 1bae      	SUB  R26,R30
00088a 0bbf      	SBC  R27,R31
00088b 0b86      	SBC  R24,R22
00088c 0b41      	SBC  R20,R17
00088d 9408      	SEC
00088e c001      	RJMP __DIVF214
                 __DIVF213:
00088f 9488      	CLC
                 __DIVF214:
000890 1f55      	ROL  R21
000891 1f22      	ROL  R18
000892 1f33      	ROL  R19
000893 1c11      	ROL  R1
000894 1faa      	ROL  R26
000895 1fbb      	ROL  R27
000896 1f88      	ROL  R24
000897 1f44      	ROL  R20
000898 959a      	DEC  R25
000899 f751      	BRNE __DIVF212
00089a 01f9      	MOVW R30,R18
00089b 2d61      	MOV  R22,R1
00089c 914f      	POP  R20
00089d 913f      	POP  R19
00089e 912f      	POP  R18
00089f 911f      	POP  R17
0008a0 2366      	TST  R22
0008a1 f032      	BRMI __DIVF215
0008a2 0f55      	LSL  R21
0008a3 1fee      	ROL  R30
0008a4 1fff      	ROL  R31
0008a5 1f66      	ROL  R22
0008a6 957a      	DEC  R23
0008a7 f243      	BRVS __DIVF217
                 __DIVF215:
0008a8 de7f      	RCALL __ROUND_REPACK
0008a9 915f      	POP  R21
0008aa 9508      	RET
                 
                 __CMPF12:
0008ab 2399      	TST  R25
0008ac f09a      	BRMI __CMPF120
0008ad 2377      	TST  R23
0008ae f042      	BRMI __CMPF121
0008af 1797      	CP   R25,R23
0008b0 f048      	BRLO __CMPF122
0008b1 f429      	BRNE __CMPF121
0008b2 17ae      	CP   R26,R30
0008b3 07bf      	CPC  R27,R31
0008b4 0786      	CPC  R24,R22
0008b5 f020      	BRLO __CMPF122
0008b6 f031      	BREQ __CMPF123
                 __CMPF121:
0008b7 9498      	CLZ
0008b8 9488      	CLC
0008b9 9508      	RET
                 __CMPF122:
0008ba 9498      	CLZ
0008bb 9408      	SEC
0008bc 9508      	RET
                 __CMPF123:
0008bd 9418      	SEZ
0008be 9488      	CLC
0008bf 9508      	RET
                 __CMPF120:
0008c0 2377      	TST  R23
0008c1 f7c2      	BRPL __CMPF122
0008c2 1797      	CP   R25,R23
0008c3 f398      	BRLO __CMPF121
0008c4 f7a9      	BRNE __CMPF122
0008c5 17ea      	CP   R30,R26
0008c6 07fb      	CPC  R31,R27
0008c7 0768      	CPC  R22,R24
0008c8 f388      	BRLO __CMPF122
0008c9 f399      	BREQ __CMPF123
0008ca cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008cb 2400      	CLR  R0
0008cc 0daf      	ADD  R26,R15
0008cd 1db0      	ADC  R27,R0
0008ce 9508      	RET
                 
                 __ANEGD1:
0008cf 95f0      	COM  R31
0008d0 9560      	COM  R22
0008d1 9570      	COM  R23
0008d2 95e1      	NEG  R30
0008d3 4fff      	SBCI R31,-1
0008d4 4f6f      	SBCI R22,-1
0008d5 4f7f      	SBCI R23,-1
0008d6 9508      	RET
                 
                 __CBD1:
0008d7 2ffe      	MOV  R31,R30
0008d8 0fff      	ADD  R31,R31
0008d9 0bff      	SBC  R31,R31
0008da 2f6f      	MOV  R22,R31
0008db 2f7f      	MOV  R23,R31
0008dc 9508      	RET
                 
                 __CWD1:
0008dd 2f6f      	MOV  R22,R31
0008de 0f66      	ADD  R22,R22
0008df 0b66      	SBC  R22,R22
0008e0 2f76      	MOV  R23,R22
0008e1 9508      	RET
                 
                 __DIVB21U:
0008e2 2400      	CLR  R0
0008e3 e098      	LDI  R25,8
                 __DIVB21U1:
0008e4 0faa      	LSL  R26
0008e5 1c00      	ROL  R0
0008e6 1a0e      	SUB  R0,R30
0008e7 f410      	BRCC __DIVB21U2
0008e8 0e0e      	ADD  R0,R30
0008e9 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008ea 60a1      	SBR  R26,1
                 __DIVB21U3:
0008eb 959a      	DEC  R25
0008ec f7b9      	BRNE __DIVB21U1
0008ed 2fea      	MOV  R30,R26
0008ee 2da0      	MOV  R26,R0
0008ef 9508      	RET
                 
                 __DIVB21:
0008f0 d039      	RCALL __CHKSIGNB
0008f1 dff0      	RCALL __DIVB21U
0008f2 f40e      	BRTC __DIVB211
0008f3 95e1      	NEG  R30
                 __DIVB211:
0008f4 9508      	RET
                 
                 __DIVD21U:
0008f5 933f      	PUSH R19
0008f6 934f      	PUSH R20
0008f7 935f      	PUSH R21
0008f8 2400      	CLR  R0
0008f9 2411      	CLR  R1
0008fa 2744      	CLR  R20
0008fb 2755      	CLR  R21
0008fc e230      	LDI  R19,32
                 __DIVD21U1:
0008fd 0faa      	LSL  R26
0008fe 1fbb      	ROL  R27
0008ff 1f88      	ROL  R24
000900 1f99      	ROL  R25
000901 1c00      	ROL  R0
000902 1c11      	ROL  R1
000903 1f44      	ROL  R20
000904 1f55      	ROL  R21
000905 1a0e      	SUB  R0,R30
000906 0a1f      	SBC  R1,R31
000907 0b46      	SBC  R20,R22
000908 0b57      	SBC  R21,R23
000909 f428      	BRCC __DIVD21U2
00090a 0e0e      	ADD  R0,R30
00090b 1e1f      	ADC  R1,R31
00090c 1f46      	ADC  R20,R22
00090d 1f57      	ADC  R21,R23
00090e c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00090f 60a1      	SBR  R26,1
                 __DIVD21U3:
000910 953a      	DEC  R19
000911 f759      	BRNE __DIVD21U1
000912 01fd      	MOVW R30,R26
000913 01bc      	MOVW R22,R24
000914 01d0      	MOVW R26,R0
000915 01ca      	MOVW R24,R20
000916 915f      	POP  R21
000917 914f      	POP  R20
000918 913f      	POP  R19
000919 9508      	RET
                 
                 __MODB21:
00091a 94e8      	CLT
00091b ffa7      	SBRS R26,7
00091c c002      	RJMP __MODB211
00091d 95a1      	NEG  R26
00091e 9468      	SET
                 __MODB211:
00091f fde7      	SBRC R30,7
000920 95e1      	NEG  R30
000921 dfc0      	RCALL __DIVB21U
000922 2fea      	MOV  R30,R26
000923 f40e      	BRTC __MODB212
000924 95e1      	NEG  R30
                 __MODB212:
000925 9508      	RET
                 
                 __MODD21U:
000926 dfce      	RCALL __DIVD21U
000927 01fd      	MOVW R30,R26
000928 01bc      	MOVW R22,R24
000929 9508      	RET
                 
                 __CHKSIGNB:
00092a 94e8      	CLT
00092b ffe7      	SBRS R30,7
00092c c002      	RJMP __CHKSB1
00092d 95e1      	NEG  R30
00092e 9468      	SET
                 __CHKSB1:
00092f ffa7      	SBRS R26,7
000930 c004      	RJMP __CHKSB2
000931 95a1      	NEG  R26
000932 f800      	BLD  R0,0
000933 9403      	INC  R0
000934 fa00      	BST  R0,0
                 __CHKSB2:
000935 9508      	RET
                 
                 __GETW1P:
000936 91ed      	LD   R30,X+
000937 91fc      	LD   R31,X
000938 9711      	SBIW R26,1
000939 9508      	RET
                 
                 __GETD1P:
00093a 91ed      	LD   R30,X+
00093b 91fd      	LD   R31,X+
00093c 916d      	LD   R22,X+
00093d 917c      	LD   R23,X
00093e 9713      	SBIW R26,3
00093f 9508      	RET
                 
                 __PUTDP1:
000940 93ed      	ST   X+,R30
000941 93fd      	ST   X+,R31
000942 936d      	ST   X+,R22
000943 937c      	ST   X,R23
000944 9508      	RET
                 
                 __GETD1S0:
000945 81e8      	LD   R30,Y
000946 81f9      	LDD  R31,Y+1
000947 816a      	LDD  R22,Y+2
000948 817b      	LDD  R23,Y+3
000949 9508      	RET
                 
                 __GETD2S0:
00094a 81a8      	LD   R26,Y
00094b 81b9      	LDD  R27,Y+1
00094c 818a      	LDD  R24,Y+2
00094d 819b      	LDD  R25,Y+3
00094e 9508      	RET
                 
                 __PUTD1S0:
00094f 83e8      	ST   Y,R30
000950 83f9      	STD  Y+1,R31
000951 836a      	STD  Y+2,R22
000952 837b      	STD  Y+3,R23
000953 9508      	RET
                 
                 __PUTPARD1:
000954 937a      	ST   -Y,R23
000955 936a      	ST   -Y,R22
000956 93fa      	ST   -Y,R31
000957 93ea      	ST   -Y,R30
000958 9508      	RET
                 
                 __PUTPARD2:
000959 939a      	ST   -Y,R25
00095a 938a      	ST   -Y,R24
00095b 93ba      	ST   -Y,R27
00095c 93aa      	ST   -Y,R26
00095d 9508      	RET
                 
                 __SWAPD12:
00095e 2e18      	MOV  R1,R24
00095f 2f86      	MOV  R24,R22
000960 2d61      	MOV  R22,R1
000961 2e19      	MOV  R1,R25
000962 2f97      	MOV  R25,R23
000963 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000964 2e1b      	MOV  R1,R27
000965 2fbf      	MOV  R27,R31
000966 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000967 2e1a      	MOV  R1,R26
000968 2fae      	MOV  R26,R30
000969 2de1      	MOV  R30,R1
00096a 9508      	RET
                 
                 __CPD10:
00096b 9730      	SBIW R30,0
00096c 4060      	SBCI R22,0
00096d 4070      	SBCI R23,0
00096e 9508      	RET
                 
                 __SAVELOCR6:
00096f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000970 934a      	ST   -Y,R20
                 __SAVELOCR4:
000971 933a      	ST   -Y,R19
                 __SAVELOCR3:
000972 932a      	ST   -Y,R18
                 __SAVELOCR2:
000973 931a      	ST   -Y,R17
000974 930a      	ST   -Y,R16
000975 9508      	RET
                 
                 __LOADLOCR6:
000976 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000977 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000978 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000979 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00097a 8119      	LDD  R17,Y+1
00097b 8108      	LD   R16,Y
00097c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 114 r23: 100 
r24:  75 r25:  60 r26: 213 r27:  98 r28:  30 r29:   1 r30: 377 r31: 147 
x  :  44 y  : 369 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  49 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   7 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 180 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  25 ld    :  51 ldd   : 191 ldi   : 216 
lds   :   8 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  48 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  20 pop   :  22 push  :  22 rcall :  81 ret   :  93 
reti  :   0 rjmp  : 138 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  98 std   :  86 sts   :   6 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012fa   4766     92   4858   32768  14.8%
[.dseg] 0x000060 0x000293      0     51     51    2048   2.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
