;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;int tenth=0, second=0,m=0;
;char st[20];
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008 tenth++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0009     if (tenth==10)
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000A     {second++; tenth=0;m++;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000B     if(m<=10){
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 000C     lcd_clear();
;PCODE: $0000001F VOL: 0
; 0000 000D     lcd_puts("Motor is on");
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 000E     lcd_gotoxy(0,1);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 000F     sprintf(st,"second=%d",second);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0010     lcd_puts(st);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0011     PORTC=PORTC<<1;}
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0012     if(PORTC>0x08){
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0013     PORTC=0x01;}
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0014     if(m>10 & m<=20){
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0015     if(PORTC==0x04){
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0016     PORTC=0x04;}
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0017     if(PORTC==0x01){
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0018     PORTC=0x01;}
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0019     lcd_clear();
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 001A     lcd_puts("Motor is off");
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 001B     lcd_gotoxy(0,1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 001C     sprintf(st,"second=%d",second);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 001D     lcd_puts(st);}
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 001E     if(m>20 & m<=30){
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 001F     PORTC=PORTC<<1;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0020     lcd_clear();
;PCODE: $00000077 VOL: 0
; 0000 0021     lcd_puts("Motor is on");
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0022     lcd_gotoxy(0,1);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0023     sprintf(st,"second=%d",second);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0024     lcd_puts(st);}
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0025     if(PORTC>0x08){
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0026     PORTC=0x01;}
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0027     if(m>30 & m<=40){
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0028     if(PORTC==0x04){
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0029     PORTC=0x04;}
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 002A     if(PORTC==0x01){
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 002B     PORTC=0x01;}
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 002C     lcd_clear();
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 002D     lcd_puts("Motor is off");
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 002E     lcd_gotoxy(0,1);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 002F     sprintf(st,"second=%d",second);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0030     lcd_puts(st);}
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0031     if(m>40 & m<=50){
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0032     PORTC=PORTC<<1;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0033     lcd_clear();
;PCODE: $000000CC VOL: 0
; 0000 0034     lcd_puts("Motor is on");
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0035     lcd_gotoxy(0,1);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0036     sprintf(st,"second=%d",second);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0037     lcd_puts(st);}
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0038     if(PORTC>0x08){
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0039     PORTC=0x01;}
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 003A     if(m>50 & m<=60){
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 003B     if(PORTC==0x04){
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 003C     PORTC=0x04;}
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 003D     if(PORTC==0x01){
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 003E     PORTC=0x01;}
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 003F     lcd_clear();
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0040     lcd_puts("Motor is off");
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0041     lcd_gotoxy(0,1);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0042     sprintf(st,"second=%d",second);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0043     lcd_puts(st);}
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0044        if (second==60)
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0045         {second=0;m=0;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0046         }
; 0000 0047     }
;PCODE: $0000011A VOL: 0
; 0000 0048 
; 0000 0049 }
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0

	.DSEG
_0x5:
	.BYTE 0x4B
;
;void main(void)
; 0000 004C {

	.CSEG
;PCODE: $0000011F VOL: 0
; 0000 004D // Declare your local variables here
; 0000 004E 
; 0000 004F // Input/Output Ports initialization
; 0000 0050 // Port A initialization
; 0000 0051 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=Out
; 0000 0052 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0053 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=0
; 0000 0054 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0055 
; 0000 0056 // Port B initialization
; 0000 0057 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0058 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0059 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 005A PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 005B 
; 0000 005C // Port C initialization
; 0000 005D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 005E DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 005F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=1
; 0000 0060 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (1<<PORTC0);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0061 
; 0000 0062 // Port D initialization
; 0000 0063 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0064 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0065 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0066 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0067 
; 0000 0068 // Timer/Counter 0 initialization
; 0000 0069 // Clock source: System Clock
; 0000 006A // Clock value: 0.977 kHz
; 0000 006B // Mode: CTC top=OCR0
; 0000 006C // OC0 output: Disconnected
; 0000 006D // Timer Period: 99.328 ms
; 0000 006E TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 006F TCNT0=0x00;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 0070 OCR0=0x60;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0071 
; 0000 0072 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0073 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0074 
; 0000 0075 // Alphanumeric LCD initialization
; 0000 0076 // Connections are specified in the
; 0000 0077 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0078 // RS - PORTA Bit 0
; 0000 0079 // RD - PORTA Bit 1
; 0000 007A // EN - PORTA Bit 2
; 0000 007B // D4 - PORTA Bit 4
; 0000 007C // D5 - PORTA Bit 5
; 0000 007D // D6 - PORTA Bit 6
; 0000 007E // D7 - PORTA Bit 7
; 0000 007F // Characters/line: 16
; 0000 0080 lcd_init(16);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0081 
; 0000 0082 // Global enable interrupts
; 0000 0083 #asm("sei")
;PCODE: $0000013A VOL: 0
	sei
;PCODE: $0000013B VOL: 0
; 0000 0084 
; 0000 0085 while (1)
;PCODE: $0000013C VOL: 0
; 0000 0086       {
; 0000 0087 //      sprintf(st,"%d:%d:%d:%d",hour,minute,second,tenth);
; 0000 0088 //      lcd_gotoxy(0,1);
; 0000 0089 //      lcd_clear();
; 0000 008A //      lcd_puts(st);
; 0000 008B 
; 0000 008C       }
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 008D }
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
