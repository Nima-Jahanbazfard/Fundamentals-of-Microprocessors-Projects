;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;#include <delay.h>
;
;int tenth=0, second=0, minute=0, hour=0;
;char st[20];
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0009 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000A tenth++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000B     if (tenth==10)
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000C     {second++; tenth=0;PORTB=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000D      if(second%5==0){
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 000E       PORTB=0x01;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 000F        }
; 0000 0010 
; 0000 0011         if (second==60)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0012         {second=0;
;PCODE: $00000026 VOL: 0
; 0000 0013         minute++;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0014             if (minute==60)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0015             {minute=0;
;PCODE: $0000002D VOL: 0
; 0000 0016             hour++;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0017                 if (hour==24)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0018                 {hour=0;
;PCODE: $00000034 VOL: 0
; 0000 0019                 }
; 0000 001A             }
;PCODE: $00000035 VOL: 0
; 0000 001B         }
;PCODE: $00000036 VOL: 0
; 0000 001C     }
;PCODE: $00000037 VOL: 0
; 0000 001D }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;
;void main(void)
; 0000 0020 {
;PCODE: $0000003C VOL: 0
; 0000 0021 // Declare your local variables here
; 0000 0022 
; 0000 0023 // Input/Output Ports initialization
; 0000 0024 // Port A initialization
; 0000 0025 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=Out
; 0000 0026 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0027 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=0
; 0000 0028 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0029 
; 0000 002A // Port B initialization
; 0000 002B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002C DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002E PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002F 
; 0000 0030 // Port C initialization
; 0000 0031 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0032 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0033 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0034 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0035 
; 0000 0036 // Port D initialization
; 0000 0037 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0038 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0039 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003A PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003B 
; 0000 003C // Timer/Counter 0 initialization
; 0000 003D // Clock source: System Clock
; 0000 003E // Clock value: 0.977 kHz
; 0000 003F // Mode: CTC top=OCR0
; 0000 0040 // OC0 output: Disconnected
; 0000 0041 // Timer Period: 99.328 ms
; 0000 0042 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0043 TCNT0=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0044 OCR0=0x60;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0045 
; 0000 0046 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0047 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0048 
; 0000 0049 // Alphanumeric LCD initialization
; 0000 004A // Connections are specified in the
; 0000 004B // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 004C // RS - PORTA Bit 0
; 0000 004D // RD - PORTA Bit 1
; 0000 004E // EN - PORTA Bit 2
; 0000 004F // D4 - PORTA Bit 4
; 0000 0050 // D5 - PORTA Bit 5
; 0000 0051 // D6 - PORTA Bit 6
; 0000 0052 // D7 - PORTA Bit 7
; 0000 0053 // Characters/line: 8
; 0000 0054 lcd_init(16);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0055 
; 0000 0056 // Global enable interrupts
; 0000 0057 #asm("sei")
;PCODE: $00000057 VOL: 0
	sei
;PCODE: $00000058 VOL: 0
; 0000 0058 
; 0000 0059 while (1)
;PCODE: $00000059 VOL: 0
; 0000 005A       {
; 0000 005B       sprintf(st, "%d: %d: %d: %d", hour, minute, second, tenth);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 005C       lcd_clear();
;PCODE: $0000006F VOL: 0
; 0000 005D       lcd_puts(st);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 005E       }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 005F }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
