
AVRASM ver. 2.1.30  C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm Fri Dec 29 00:14:59 2023

C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _d=R4
                 	.DEF _d_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0054 	JMP  __RESET
000002 940c 0081 	JMP  _ext_int0_isr
000004 940c 00c5 	JMP  _ext_int1_isr
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 7574
00002b 6e72
00002c 6c20
00002d 6665      	.DB  0x74,0x75,0x72,0x6E,0x20,0x6C,0x65,0x66
00002e 0074
00002f 3d77
000030 3025
000031 312e      	.DB  0x74,0x0,0x77,0x3D,0x25,0x30,0x2E,0x31
000032 6e66
000033 6d2f
000034 6420
000035 253d      	.DB  0x66,0x6E,0x2F,0x6D,0x20,0x64,0x3D,0x25
000036 0069
000037 7574
000038 6e72
000039 7220      	.DB  0x69,0x0,0x74,0x75,0x72,0x6E,0x20,0x72
00003a 6769
00003b 7468
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1128): warning: .cseg .db misalignment - padding zero byte
00003c 0000      	.DB  0x69,0x67,0x68,0x74,0x0
                 _0x2000003:
00003d c080      	.DB  0x80,0xC0
                 _0x2020000:
00003e 4e2d
00003f 4e41
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1132): warning: .cseg .db misalignment - padding zero byte
000040 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1134): warning: .cseg .db misalignment - padding zero byte
000041 0001      	.DB  0x1
                 _0x20A0000:
000042 4e2d
000043 4e41
000044 4900
000045 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\nima8\Desktop\tamrin5\Debug\List\tamrin5.asm(1137): warning: .cseg .db misalignment - padding zero byte
000046 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000047 000a      	.DW  0x0A
000048 0260      	.DW  _0x14
000049 0054      	.DW  _0x0*2
                 
00004a 000b      	.DW  0x0B
00004b 026a      	.DW  _0x2A
00004c 006e      	.DW  _0x0*2+26
                 
00004d 0002      	.DW  0x02
00004e 02a1      	.DW  __base_y_G100
00004f 007a      	.DW  _0x2000003*2
                 
000050 0001      	.DW  0x01
000051 02a5      	.DW  __seed_G105
000052 0082      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000053 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000054 94f8      	CLI
000055 27ee      	CLR  R30
000056 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000057 e0f1      	LDI  R31,1
000058 bffb      	OUT  GICR,R31
000059 bfeb      	OUT  GICR,R30
00005a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005b e08d      	LDI  R24,(14-2)+1
00005c e0a2      	LDI  R26,2
00005d 27bb      	CLR  R27
                 __CLEAR_REG:
00005e 93ed      	ST   X+,R30
00005f 958a      	DEC  R24
000060 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000061 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000062 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000063 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000064 93ed      	ST   X+,R30
000065 9701      	SBIW R24,1
000066 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000067 e8ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000068 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000069 9185      	LPM  R24,Z+
00006a 9195      	LPM  R25,Z+
00006b 9700      	SBIW R24,0
00006c f061      	BREQ __GLOBAL_INI_END
00006d 91a5      	LPM  R26,Z+
00006e 91b5      	LPM  R27,Z+
00006f 9005      	LPM  R0,Z+
000070 9015      	LPM  R1,Z+
000071 01bf      	MOVW R22,R30
000072 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000073 9005      	LPM  R0,Z+
000074 920d      	ST   X+,R0
000075 9701      	SBIW R24,1
000076 f7e1      	BRNE __GLOBAL_INI_LOOP
000077 01fb      	MOVW R30,R22
000078 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000079 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007a bfed      	OUT  SPL,R30
00007b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007f 940c 0114 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;int d;
                 ;float w=0;
                 ;char st[40];
                 ;interrupt [EXT_INT0] void ext_int0_isr(void){
                 ; 0000 0008 interrupt [2] void ext_int0_isr(void){
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000081 940e 0628 	CALL SUBOPT_0x0
                 ; 0000 0009 
                 ; 0000 000A       if(PORTC==0x01){
000083 f411      	BRNE _0x3
                 ; 0000 000B       PORTC=0x01;}
000084 e0e1      	LDI  R30,LOW(1)
000085 bbe5      	OUT  0x15,R30
                 ; 0000 000C       if(PORTC==0x02){
                 _0x3:
000086 b3e5      	IN   R30,0x15
000087 30e2      	CPI  R30,LOW(0x2)
000088 f411      	BRNE _0x4
                 ; 0000 000D       PORTC=0x02;}
000089 e0e2      	LDI  R30,LOW(2)
00008a bbe5      	OUT  0x15,R30
                 ; 0000 000E       if(PORTC==0x04){
                 _0x4:
00008b b3e5      	IN   R30,0x15
00008c 30e4      	CPI  R30,LOW(0x4)
00008d f411      	BRNE _0x5
                 ; 0000 000F       PORTC=0x04;}
00008e e0e4      	LDI  R30,LOW(4)
00008f bbe5      	OUT  0x15,R30
                 ; 0000 0010       if(PORTC==0x08){
                 _0x5:
000090 b3e5      	IN   R30,0x15
000091 30e8      	CPI  R30,LOW(0x8)
000092 f411      	BRNE _0x6
                 ; 0000 0011       PORTC=0x08;}
000093 e0e8      	LDI  R30,LOW(8)
000094 bbe5      	OUT  0x15,R30
                 ; 0000 0012       if(PORTC==0x10){
                 _0x6:
000095 b3e5      	IN   R30,0x15
000096 31e0      	CPI  R30,LOW(0x10)
000097 f411      	BRNE _0x7
                 ; 0000 0013       PORTC=0x10;}
000098 e1e0      	LDI  R30,LOW(16)
000099 bbe5      	OUT  0x15,R30
                 ; 0000 0014       while(1){
                 _0x7:
                 _0x8:
                 ; 0000 0015       if(PIND.0==0){
00009a 9980      	SBIC 0x10,0
00009b c005      	RJMP _0xB
                 ; 0000 0016       while(PIND.0==0){;}
                 _0xC:
00009c 9b80      	SBIS 0x10,0
00009d cffe      	RJMP _0xC
                 ; 0000 0017       d+=20;}
00009e 01f2      	MOVW R30,R4
00009f 9674      	ADIW R30,20
0000a0 012f      	MOVW R4,R30
                 ; 0000 0018       if(PIND.1==0){
                 _0xB:
0000a1 9981      	SBIC 0x10,1
0000a2 c005      	RJMP _0xF
                 ; 0000 0019       while(PIND.1==0){;}
                 _0x10:
0000a3 9b81      	SBIS 0x10,1
0000a4 cffe      	RJMP _0x10
                 ; 0000 001A       d-=20;}
0000a5 01f2      	MOVW R30,R4
0000a6 9774      	SBIW R30,20
0000a7 012f      	MOVW R4,R30
                 ; 0000 001B       if(PORTC==0x01){
                 _0xF:
0000a8 b3e5      	IN   R30,0x15
0000a9 30e1      	CPI  R30,LOW(0x1)
0000aa f411      	BRNE _0x13
                 ; 0000 001C       PORTC=0x10;}
0000ab e1e0      	LDI  R30,LOW(16)
0000ac bbe5      	OUT  0x15,R30
                 ; 0000 001D       lcd_gotoxy(0,1);
                 _0x13:
0000ad e0e0      	LDI  R30,LOW(0)
0000ae 93ea      	ST   -Y,R30
0000af e0a1      	LDI  R26,LOW(1)
0000b0 d0a2      	RCALL _lcd_gotoxy
                 ; 0000 001E       lcd_puts("turn left");
                +
0000b1 e6a0     +LDI R26 , LOW ( _0x14 + ( 0 ) )
0000b2 e0b2     +LDI R27 , HIGH ( _0x14 + ( 0 ) )
                 	__POINTW2MN _0x14,0
0000b3 d0cd      	RCALL _lcd_puts
                 ; 0000 001F       PORTC=PORTC>>1;
0000b4 b3e5      	IN   R30,0x15
0000b5 e0f0      	LDI  R31,0
0000b6 95f5      	ASR  R31
0000b7 95e7      	ROR  R30
0000b8 bbe5      	OUT  0x15,R30
                 ; 0000 0020       delay_ms(d);
0000b9 01d2      	MOVW R26,R4
0000ba 940e 0767 	CALL _delay_ms
                 ; 0000 0021       w=(15000/d);
0000bc 940e 0638 	CALL SUBOPT_0x1
                 ; 0000 0022       sprintf(st, "w=%0.1fn/m d=%i", w , d);
                 ; 0000 0023       lcd_clear();
                 ; 0000 0024       lcd_puts(st);
                 ; 0000 0025       if(PIND.3==0){
0000be 9983      	SBIC 0x10,3
0000bf c003      	RJMP _0x15
                 ; 0000 0026       while(PIND.3==0){;}
                 _0x16:
0000c0 9b83      	SBIS 0x10,3
0000c1 cffe      	RJMP _0x16
                 ; 0000 0027       break;
0000c2 c001      	RJMP _0xA
                 ; 0000 0028       }
                 ; 0000 0029       }
                 _0x15:
0000c3 cfd6      	RJMP _0x8
                 _0xA:
                 ; 0000 002A       }
0000c4 c041      	RJMP _0x33
                 ; .FEND
                 
                 	.DSEG
                 _0x14:
000260           	.BYTE 0xA
                 ;
                 ;// External Interrupt 1 service routine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 002E {
                 
                 	.CSEG
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
0000c5 940e 0628 	CALL SUBOPT_0x0
                 ; 0000 002F       if(PORTC==0x01){
0000c7 f411      	BRNE _0x19
                 ; 0000 0030       PORTC=0x01;}
0000c8 e0e1      	LDI  R30,LOW(1)
0000c9 bbe5      	OUT  0x15,R30
                 ; 0000 0031       if(PORTC==0x02){
                 _0x19:
0000ca b3e5      	IN   R30,0x15
0000cb 30e2      	CPI  R30,LOW(0x2)
0000cc f411      	BRNE _0x1A
                 ; 0000 0032       PORTC=0x02;}
0000cd e0e2      	LDI  R30,LOW(2)
0000ce bbe5      	OUT  0x15,R30
                 ; 0000 0033       if(PORTC==0x04){
                 _0x1A:
0000cf b3e5      	IN   R30,0x15
0000d0 30e4      	CPI  R30,LOW(0x4)
0000d1 f411      	BRNE _0x1B
                 ; 0000 0034       PORTC=0x04;}
0000d2 e0e4      	LDI  R30,LOW(4)
0000d3 bbe5      	OUT  0x15,R30
                 ; 0000 0035       if(PORTC==0x08){
                 _0x1B:
0000d4 b3e5      	IN   R30,0x15
0000d5 30e8      	CPI  R30,LOW(0x8)
0000d6 f411      	BRNE _0x1C
                 ; 0000 0036       PORTC=0x08;}
0000d7 e0e8      	LDI  R30,LOW(8)
0000d8 bbe5      	OUT  0x15,R30
                 ; 0000 0037       if(PORTC==0x10){
                 _0x1C:
0000d9 b3e5      	IN   R30,0x15
0000da 31e0      	CPI  R30,LOW(0x10)
0000db f411      	BRNE _0x1D
                 ; 0000 0038       PORTC=0x10;}
0000dc e1e0      	LDI  R30,LOW(16)
0000dd bbe5      	OUT  0x15,R30
                 ; 0000 0039       while(1){
                 _0x1D:
                 _0x1E:
                 ; 0000 003A        if(PIND.0==0){
0000de 9980      	SBIC 0x10,0
0000df c005      	RJMP _0x21
                 ; 0000 003B       while(PIND.0==0){;}
                 _0x22:
0000e0 9b80      	SBIS 0x10,0
0000e1 cffe      	RJMP _0x22
                 ; 0000 003C       d+=20;}
0000e2 01f2      	MOVW R30,R4
0000e3 9674      	ADIW R30,20
0000e4 012f      	MOVW R4,R30
                 ; 0000 003D       if(PIND.1==0){
                 _0x21:
0000e5 9981      	SBIC 0x10,1
0000e6 c005      	RJMP _0x25
                 ; 0000 003E       while(PIND.1==0){;}
                 _0x26:
0000e7 9b81      	SBIS 0x10,1
0000e8 cffe      	RJMP _0x26
                 ; 0000 003F       d-=20;}
0000e9 01f2      	MOVW R30,R4
0000ea 9774      	SBIW R30,20
0000eb 012f      	MOVW R4,R30
                 ; 0000 0040       if(PORTC==0x10){
                 _0x25:
0000ec b3e5      	IN   R30,0x15
0000ed 31e0      	CPI  R30,LOW(0x10)
0000ee f411      	BRNE _0x29
                 ; 0000 0041       PORTC=0x01;}
0000ef e0e1      	LDI  R30,LOW(1)
0000f0 bbe5      	OUT  0x15,R30
                 ; 0000 0042       lcd_gotoxy(0,1);
                 _0x29:
0000f1 e0e0      	LDI  R30,LOW(0)
0000f2 93ea      	ST   -Y,R30
0000f3 e0a1      	LDI  R26,LOW(1)
0000f4 d05e      	RCALL _lcd_gotoxy
                 ; 0000 0043       lcd_puts("turn right");
                +
0000f5 e6aa     +LDI R26 , LOW ( _0x2A + ( 0 ) )
0000f6 e0b2     +LDI R27 , HIGH ( _0x2A + ( 0 ) )
                 	__POINTW2MN _0x2A,0
0000f7 d089      	RCALL _lcd_puts
                 ; 0000 0044       delay_ms(d);
0000f8 01d2      	MOVW R26,R4
0000f9 940e 0767 	CALL _delay_ms
                 ; 0000 0045       PORTC=PORTC<<1;
0000fb b3e5      	IN   R30,0x15
0000fc 0fee      	LSL  R30
0000fd bbe5      	OUT  0x15,R30
                 ; 0000 0046       w=(15000/d);
0000fe 940e 0638 	CALL SUBOPT_0x1
                 ; 0000 0047       sprintf(st, "w=%0.1fn/m d=%i",w ,d);
                 ; 0000 0048       lcd_clear();
                 ; 0000 0049       lcd_puts(st);
                 ; 0000 004A       if(PIND.2==0){
000100 9982      	SBIC 0x10,2
000101 c003      	RJMP _0x2B
                 ; 0000 004B       while(PIND.2==0){;}
                 _0x2C:
000102 9b82      	SBIS 0x10,2
000103 cffe      	RJMP _0x2C
                 ; 0000 004C       break;
000104 c001      	RJMP _0x20
                 ; 0000 004D       }
                 ; 0000 004E       }
                 _0x2B:
000105 cfd8      	RJMP _0x1E
                 _0x20:
                 ; 0000 004F       }
                 _0x33:
000106 91e9      	LD   R30,Y+
000107 bfef      	OUT  SREG,R30
000108 91f9      	LD   R31,Y+
000109 91e9      	LD   R30,Y+
00010a 91b9      	LD   R27,Y+
00010b 91a9      	LD   R26,Y+
00010c 9199      	LD   R25,Y+
00010d 9189      	LD   R24,Y+
00010e 9179      	LD   R23,Y+
00010f 9169      	LD   R22,Y+
000110 90f9      	LD   R15,Y+
000111 9019      	LD   R1,Y+
000112 9009      	LD   R0,Y+
000113 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 _0x2A:
00026a           	.BYTE 0xB
                 ;
                 ;void main(void)
                 ; 0000 0052 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0053 // Declare your local variables here
                 ; 0000 0054 
                 ; 0000 0055 // Input/Output Ports initialization
                 ; 0000 0056 // Port A initialization
                 ; 0000 0057 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0058 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000114 efe7      	LDI  R30,LOW(247)
000115 bbea      	OUT  0x1A,R30
                 ; 0000 0059 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=0
                 ; 0000 005A PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000116 e0e0      	LDI  R30,LOW(0)
000117 bbeb      	OUT  0x1B,R30
                 ; 0000 005B 
                 ; 0000 005C // Port B initialization
                 ; 0000 005D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005E DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000118 bbe7      	OUT  0x17,R30
                 ; 0000 005F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0060 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000119 bbe8      	OUT  0x18,R30
                 ; 0000 0061 
                 ; 0000 0062 // Port C initialization
                 ; 0000 0063 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0064 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00011a e0ef      	LDI  R30,LOW(15)
00011b bbe4      	OUT  0x14,R30
                 ; 0000 0065 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=1
                 ; 0000 0066 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (1<<PORTC0);
00011c e0e1      	LDI  R30,LOW(1)
00011d bbe5      	OUT  0x15,R30
                 ; 0000 0067 
                 ; 0000 0068 // Port D initialization
                 ; 0000 0069 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 006A DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00011e e0e0      	LDI  R30,LOW(0)
00011f bbe1      	OUT  0x11,R30
                 ; 0000 006B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=P Bit0=P
                 ; 0000 006C PORTD=(0<<PORTD7) | (0<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
000120 e3ef      	LDI  R30,LOW(63)
000121 bbe2      	OUT  0x12,R30
                 ; 0000 006D 
                 ; 0000 006E // External Interrupt(s) initialization
                 ; 0000 006F // INT0: On
                 ; 0000 0070 // INT0 Mode: Falling Edge
                 ; 0000 0071 // INT1: On
                 ; 0000 0072 // INT1 Mode: Falling Edge
                 ; 0000 0073 // INT2: Off
                 ; 0000 0074 GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
000122 b7eb      	IN   R30,0x3B
000123 6ce0      	ORI  R30,LOW(0xC0)
000124 bfeb      	OUT  0x3B,R30
                 ; 0000 0075 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
000125 e0ea      	LDI  R30,LOW(10)
000126 bfe5      	OUT  0x35,R30
                 ; 0000 0076 MCUCSR=(0<<ISC2);
000127 e0e0      	LDI  R30,LOW(0)
000128 bfe4      	OUT  0x34,R30
                 ; 0000 0077 GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
000129 ece0      	LDI  R30,LOW(192)
00012a bfea      	OUT  0x3A,R30
                 ; 0000 0078 
                 ; 0000 0079 // Alphanumeric LCD initialization
                 ; 0000 007A // Connections are specified in the
                 ; 0000 007B // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 007C // RS - PORTA Bit 0
                 ; 0000 007D // RD - PORTA Bit 1
                 ; 0000 007E // EN - PORTA Bit 2
                 ; 0000 007F // D4 - PORTA Bit 4
                 ; 0000 0080 // D5 - PORTA Bit 5
                 ; 0000 0081 // D6 - PORTA Bit 6
                 ; 0000 0082 // D7 - PORTA Bit 7
                 ; 0000 0083 // Characters/line: 16
                 ; 0000 0084 lcd_init(16);
00012b e1a0      	LDI  R26,LOW(16)
00012c d065      	RCALL _lcd_init
                 ; 0000 0085 
                 ; 0000 0086 // Global enable interrupts
                 ; 0000 0087 #asm("sei")
00012d 9478      	sei
                 ; 0000 0088 d=200;
00012e ece8      	LDI  R30,LOW(200)
00012f e0f0      	LDI  R31,HIGH(200)
000130 012f      	MOVW R4,R30
                 ; 0000 0089 while (1)
                 _0x2F:
                 ; 0000 008A       {
                 ; 0000 008B 
                 ; 0000 008C       }
000131 cfff      	RJMP _0x2F
                 ; 0000 008D       }
                 _0x32:
000132 cfff      	RJMP _0x32
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000133 93aa      	ST   -Y,R26
000134 b3eb      	IN   R30,0x1B
000135 70ef      	ANDI R30,LOW(0xF)
000136 2fae      	MOV  R26,R30
000137 81e8      	LD   R30,Y
000138 7fe0      	ANDI R30,LOW(0xF0)
000139 2bea      	OR   R30,R26
00013a bbeb      	OUT  0x1B,R30
                +
00013b e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00013c 958a     +DEC R24
00013d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00013e 9ada      	SBI  0x1B,2
                +
00013f e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000140 958a     +DEC R24
000141 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000142 98da      	CBI  0x1B,2
                +
000143 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000146 c076      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000147 93aa      	ST   -Y,R26
000148 81a8      	LD   R26,Y
000149 dfe9      	RCALL __lcd_write_nibble_G100
00014a 81e8          ld    r30,y
00014b 95e2          swap  r30
00014c 83e8          st    y,r30
00014d 81a8      	LD   R26,Y
00014e dfe4      	RCALL __lcd_write_nibble_G100
                +
00014f e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000150 958a     +DEC R24
000151 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000152 c06a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000153 93aa      	ST   -Y,R26
000154 81e8      	LD   R30,Y
000155 e0f0      	LDI  R31,0
000156 55ef      	SUBI R30,LOW(-__base_y_G100)
000157 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000158 81e0      	LD   R30,Z
000159 81a9      	LDD  R26,Y+1
00015a 0fae      	ADD  R26,R30
00015b dfeb      	RCALL __lcd_write_data
00015c 8079      	LDD  R7,Y+1
00015d 8068      	LDD  R6,Y+0
00015e 9622      	ADIW R28,2
00015f 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000160 e0a2      	LDI  R26,LOW(2)
000161 940e 0666 	CALL SUBOPT_0x2
000163 e0ac      	LDI  R26,LOW(12)
000164 dfe2      	RCALL __lcd_write_data
000165 e0a1      	LDI  R26,LOW(1)
000166 940e 0666 	CALL SUBOPT_0x2
000168 e0e0      	LDI  R30,LOW(0)
000169 2e6e      	MOV  R6,R30
00016a 2e7e      	MOV  R7,R30
00016b 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00016c 93aa      	ST   -Y,R26
00016d 81a8      	LD   R26,Y
00016e 30aa      	CPI  R26,LOW(0xA)
00016f f011      	BREQ _0x2000005
000170 1479      	CP   R7,R9
000171 f048      	BRLO _0x2000004
                 _0x2000005:
000172 e0e0      	LDI  R30,LOW(0)
000173 93ea      	ST   -Y,R30
000174 9463      	INC  R6
000175 2da6      	MOV  R26,R6
000176 dfdc      	RCALL _lcd_gotoxy
000177 81a8      	LD   R26,Y
000178 30aa      	CPI  R26,LOW(0xA)
000179 f409      	BRNE _0x2000007
00017a c042      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
00017b 9473      	INC  R7
00017c 9ad8      	SBI  0x1B,0
00017d 81a8      	LD   R26,Y
00017e dfc8      	RCALL __lcd_write_data
00017f 98d8      	CBI  0x1B,0
000180 c03c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000181 93ba      	ST   -Y,R27
000182 93aa      	ST   -Y,R26
000183 931a      	ST   -Y,R17
                 _0x2000008:
000184 81a9      	LDD  R26,Y+1
000185 81ba      	LDD  R27,Y+1+1
000186 91ed      	LD   R30,X+
000187 83a9      	STD  Y+1,R26
000188 83ba      	STD  Y+1+1,R27
000189 2f1e      	MOV  R17,R30
00018a 30e0      	CPI  R30,0
00018b f019      	BREQ _0x200000A
00018c 2fa1      	MOV  R26,R17
00018d dfde      	RCALL _lcd_putchar
00018e cff5      	RJMP _0x2000008
                 _0x200000A:
00018f 8118      	LDD  R17,Y+0
000190 9623      	ADIW R28,3
000191 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000192 93aa      	ST   -Y,R26
000193 b3ea      	IN   R30,0x1A
000194 6fe0      	ORI  R30,LOW(0xF0)
000195 bbea      	OUT  0x1A,R30
000196 9ad2      	SBI  0x1A,2
000197 9ad0      	SBI  0x1A,0
000198 9ad1      	SBI  0x1A,1
000199 98da      	CBI  0x1B,2
00019a 98d8      	CBI  0x1B,0
00019b 98d9      	CBI  0x1B,1
00019c 8098      	LDD  R9,Y+0
00019d 81e8      	LD   R30,Y
00019e 58e0      	SUBI R30,-LOW(128)
                +
00019f 93e0 02a3+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001a1 81e8      	LD   R30,Y
0001a2 54e0      	SUBI R30,-LOW(192)
                +
0001a3 93e0 02a4+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001a5 e1a4      	LDI  R26,LOW(20)
0001a6 e0b0      	LDI  R27,0
0001a7 940e 0767 	CALL _delay_ms
0001a9 940e 066c 	CALL SUBOPT_0x3
0001ab 940e 066c 	CALL SUBOPT_0x3
0001ad 940e 066c 	CALL SUBOPT_0x3
0001af e2a0      	LDI  R26,LOW(32)
0001b0 df82      	RCALL __lcd_write_nibble_G100
                +
0001b1 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001b2 958a     +DEC R24
0001b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001b4 e2a8      	LDI  R26,LOW(40)
0001b5 df91      	RCALL __lcd_write_data
0001b6 e0a4      	LDI  R26,LOW(4)
0001b7 df8f      	RCALL __lcd_write_data
0001b8 e8a5      	LDI  R26,LOW(133)
0001b9 df8d      	RCALL __lcd_write_data
0001ba e0a6      	LDI  R26,LOW(6)
0001bb df8b      	RCALL __lcd_write_data
0001bc dfa3      	RCALL _lcd_clear
                 _0x20C0006:
0001bd 9621      	ADIW R28,1
0001be 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001bf 93ba      	ST   -Y,R27
0001c0 93aa      	ST   -Y,R26
0001c1 931a      	ST   -Y,R17
0001c2 930a      	ST   -Y,R16
0001c3 81aa      	LDD  R26,Y+2
0001c4 81bb      	LDD  R27,Y+2+1
0001c5 9612      	ADIW R26,2
0001c6 940e 09af 	CALL __GETW1P
0001c8 9730      	SBIW R30,0
0001c9 f129      	BREQ _0x2020010
0001ca 81aa      	LDD  R26,Y+2
0001cb 81bb      	LDD  R27,Y+2+1
0001cc 9614      	ADIW R26,4
0001cd 940e 09af 	CALL __GETW1P
0001cf 018f      	MOVW R16,R30
0001d0 9730      	SBIW R30,0
0001d1 f061      	BREQ _0x2020012
                +
0001d2 3002     +CPI R16 , LOW ( 2 )
0001d3 e0e0     +LDI R30 , HIGH ( 2 )
0001d4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001d5 f080      	BRLO _0x2020013
0001d6 01f8      	MOVW R30,R16
0001d7 9731      	SBIW R30,1
0001d8 018f      	MOVW R16,R30
                +
0001d9 81aa     +LDD R26 , Y + 2
0001da 81bb     +LDD R27 , Y + 2 + 1
0001db 9614     +ADIW R26 , 4
0001dc 93ed     +ST X + , R30
0001dd 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001de 81aa      	LDD  R26,Y+2
0001df 81bb      	LDD  R27,Y+2+1
0001e0 9612      	ADIW R26,2
0001e1 940e 0673 	CALL SUBOPT_0x4
0001e3 9731      	SBIW R30,1
0001e4 81ac      	LDD  R26,Y+4
0001e5 83a0      	STD  Z+0,R26
                 _0x2020013:
0001e6 81aa      	LDD  R26,Y+2
0001e7 81bb      	LDD  R27,Y+2+1
0001e8 940e 09af 	CALL __GETW1P
0001ea 23ff      	TST  R31
0001eb f012      	BRMI _0x2020014
0001ec 940e 0673 	CALL SUBOPT_0x4
                 _0x2020014:
0001ee c006      	RJMP _0x2020015
                 _0x2020010:
0001ef 81aa      	LDD  R26,Y+2
0001f0 81bb      	LDD  R27,Y+2+1
0001f1 efef      	LDI  R30,LOW(65535)
0001f2 efff      	LDI  R31,HIGH(65535)
0001f3 93ed      	ST   X+,R30
0001f4 93fc      	ST   X,R31
                 _0x2020015:
0001f5 8119      	LDD  R17,Y+1
0001f6 8108      	LDD  R16,Y+0
0001f7 9625      	ADIW R28,5
0001f8 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0001f9 940e 0679 	CALL SUBOPT_0x5
0001fb e8e0      	LDI  R30,LOW(128)
0001fc 83ea      	STD  Y+2,R30
0001fd e3ef      	LDI  R30,LOW(63)
0001fe 83eb      	STD  Y+3,R30
0001ff 940e 09ea 	CALL __SAVELOCR4
000201 85ee      	LDD  R30,Y+14
000202 85ff      	LDD  R31,Y+14+1
000203 3fef      	CPI  R30,LOW(0xFFFF)
000204 efaf      	LDI  R26,HIGH(0xFFFF)
000205 07fa      	CPC  R31,R26
000206 f449      	BRNE _0x2020019
000207 85e8      	LDD  R30,Y+8
000208 85f9      	LDD  R31,Y+8+1
000209 93fa      	ST   -Y,R31
00020a 93ea      	ST   -Y,R30
                +
00020b e7ac     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00020c e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00020d 940e 0519 	CALL _strcpyf
00020f c0b7      	RJMP _0x20C0005
                 _0x2020019:
000210 3fef      	CPI  R30,LOW(0x7FFF)
000211 e7af      	LDI  R26,HIGH(0x7FFF)
000212 07fa      	CPC  R31,R26
000213 f449      	BRNE _0x2020018
000214 85e8      	LDD  R30,Y+8
000215 85f9      	LDD  R31,Y+8+1
000216 93fa      	ST   -Y,R31
000217 93ea      	ST   -Y,R30
                +
000218 e7ad     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000219 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
00021a 940e 0519 	CALL _strcpyf
00021c c0aa      	RJMP _0x20C0005
                 _0x2020018:
00021d 85ab      	LDD  R26,Y+11
00021e 30a7      	CPI  R26,LOW(0x7)
00021f f010      	BRLO _0x202001B
000220 e0e6      	LDI  R30,LOW(6)
000221 87eb      	STD  Y+11,R30
                 _0x202001B:
000222 851b      	LDD  R17,Y+11
                 _0x202001C:
000223 2fe1      	MOV  R30,R17
000224 5011      	SUBI R17,1
000225 30e0      	CPI  R30,0
000226 f019      	BREQ _0x202001E
000227 940e 0680 	CALL SUBOPT_0x6
000229 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
00022a 85ec     +LDD R30 , Y + 12
00022b 85fd     +LDD R31 , Y + 12 + 1
00022c 856e     +LDD R22 , Y + 12 + 2
00022d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00022e 940e 09e4 	CALL __CPD10
000230 f421      	BRNE _0x202001F
000231 e030      	LDI  R19,LOW(0)
000232 940e 0680 	CALL SUBOPT_0x6
000234 c02d      	RJMP _0x2020020
                 _0x202001F:
000235 853b      	LDD  R19,Y+11
000236 940e 068f 	CALL SUBOPT_0x7
000238 f009      	BREQ PC+2
000239 f408      	BRCC PC+2
00023a c00b      	RJMP _0x2020021
00023b 940e 0680 	CALL SUBOPT_0x6
                 _0x2020022:
00023d 940e 068f 	CALL SUBOPT_0x7
00023f f028      	BRLO _0x2020024
000240 940e 069a 	CALL SUBOPT_0x8
000242 940e 069f 	CALL SUBOPT_0x9
000244 cff8      	RJMP _0x2020022
                 _0x2020024:
000245 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000246 940e 068f 	CALL SUBOPT_0x7
000248 f440      	BRSH _0x2020028
000249 940e 069a 	CALL SUBOPT_0x8
00024b 940e 06ab 	CALL SUBOPT_0xA
00024d 940e 06b2 	CALL SUBOPT_0xB
00024f 5031      	SUBI R19,LOW(1)
000250 cff5      	RJMP _0x2020026
                 _0x2020028:
000251 940e 0680 	CALL SUBOPT_0x6
                 _0x2020025:
                +
000253 85ec     +LDD R30 , Y + 12
000254 85fd     +LDD R31 , Y + 12 + 1
000255 856e     +LDD R22 , Y + 12 + 2
000256 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000257 940e 06b7 	CALL SUBOPT_0xC
000259 940e 06b2 	CALL SUBOPT_0xB
00025b 940e 068f 	CALL SUBOPT_0x7
00025d f020      	BRLO _0x2020029
00025e 940e 069a 	CALL SUBOPT_0x8
000260 940e 069f 	CALL SUBOPT_0x9
                 _0x2020029:
                 _0x2020020:
000262 e010      	LDI  R17,LOW(0)
                 _0x202002A:
000263 85eb      	LDD  R30,Y+11
000264 17e1      	CP   R30,R17
000265 f1a8      	BRLO _0x202002C
                +
000266 81ac     +LDD R26 , Y + 4
000267 81bd     +LDD R27 , Y + 4 + 1
000268 818e     +LDD R24 , Y + 4 + 2
000269 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00026a 940e 06be 	CALL SUBOPT_0xD
00026c 940e 06b7 	CALL SUBOPT_0xC
00026e 01df      	MOVW R26,R30
00026f 01cb      	MOVW R24,R22
000270 940e 0570 	CALL _floor
                +
000272 83ec     +STD Y + 4 , R30
000273 83fd     +STD Y + 4 + 1 , R31
000274 836e     +STD Y + 4 + 2 , R22
000275 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000276 940e 069a 	CALL SUBOPT_0x8
000278 940e 08b5 	CALL __DIVF21
00027a 940e 07a4 	CALL __CFD1U
00027c 2f0e      	MOV  R16,R30
00027d 940e 06c5 	CALL SUBOPT_0xE
00027f 940e 06cc 	CALL SUBOPT_0xF
000281 27ff      	CLR  R31
000282 2766      	CLR  R22
000283 2777      	CLR  R23
000284 940e 07dd 	CALL __CDF1
                +
000286 81ac     +LDD R26 , Y + 4
000287 81bd     +LDD R27 , Y + 4 + 1
000288 818e     +LDD R24 , Y + 4 + 2
000289 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00028a 940e 0867 	CALL __MULF12
00028c 940e 069a 	CALL SUBOPT_0x8
00028e 940e 06d1 	CALL SUBOPT_0x10
000290 940e 06b2 	CALL SUBOPT_0xB
000292 2fe1      	MOV  R30,R17
000293 5f1f      	SUBI R17,-1
000294 30e0      	CPI  R30,0
000295 f669      	BRNE _0x202002A
000296 940e 06c5 	CALL SUBOPT_0xE
000298 e2ee      	LDI  R30,LOW(46)
000299 93ec      	ST   X,R30
00029a cfc8      	RJMP _0x202002A
                 _0x202002C:
00029b 940e 06d6 	CALL SUBOPT_0x11
00029d 9731      	SBIW R30,1
00029e 85aa      	LDD  R26,Y+10
00029f 83a0      	STD  Z+0,R26
0002a0 3030      	CPI  R19,0
0002a1 f42c      	BRGE _0x202002E
0002a2 9531      	NEG  R19
0002a3 85a8      	LDD  R26,Y+8
0002a4 85b9      	LDD  R27,Y+8+1
0002a5 e2ed      	LDI  R30,LOW(45)
0002a6 c003      	RJMP _0x2020113
                 _0x202002E:
0002a7 85a8      	LDD  R26,Y+8
0002a8 85b9      	LDD  R27,Y+8+1
0002a9 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
0002aa 93ec      	ST   X,R30
0002ab 940e 06d6 	CALL SUBOPT_0x11
0002ad 940e 06d6 	CALL SUBOPT_0x11
0002af 9731      	SBIW R30,1
0002b0 01bf      	MOVW R22,R30
0002b1 2fa3      	MOV  R26,R19
0002b2 e0ea      	LDI  R30,LOW(10)
0002b3 940e 0943 	CALL __DIVB21
0002b5 5de0      	SUBI R30,-LOW(48)
0002b6 01db      	MOVW R26,R22
0002b7 93ec      	ST   X,R30
0002b8 940e 06d6 	CALL SUBOPT_0x11
0002ba 9731      	SBIW R30,1
0002bb 01bf      	MOVW R22,R30
0002bc 2fa3      	MOV  R26,R19
0002bd e0ea      	LDI  R30,LOW(10)
0002be 940e 0985 	CALL __MODB21
0002c0 5de0      	SUBI R30,-LOW(48)
0002c1 01db      	MOVW R26,R22
0002c2 93ec      	ST   X,R30
0002c3 85a8      	LDD  R26,Y+8
0002c4 85b9      	LDD  R27,Y+8+1
0002c5 e0e0      	LDI  R30,LOW(0)
0002c6 93ec      	ST   X,R30
                 _0x20C0005:
0002c7 940e 09f1 	CALL __LOADLOCR4
0002c9 9660      	ADIW R28,16
0002ca 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0002cb 93ba      	ST   -Y,R27
0002cc 93aa      	ST   -Y,R26
0002cd 97ef      	SBIW R28,63
0002ce 9761      	SBIW R28,17
0002cf 940e 09e8 	CALL __SAVELOCR6
0002d1 e010      	LDI  R17,0
                +
0002d2 01fe     +MOVW R30 , R28
0002d3 5ae8     +SUBI R30 , LOW ( - 88 )
0002d4 4fff     +SBCI R31 , HIGH ( - 88 )
0002d5 9001     +LD R0 , Z +
0002d6 81f0     +LD R31 , Z
0002d7 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002d8 87e8      	STD  Y+8,R30
0002d9 87f9      	STD  Y+8+1,R31
                +
0002da 01fe     +MOVW R30 , R28
0002db 5aea     +SUBI R30 , LOW ( - 86 )
0002dc 4fff     +SBCI R31 , HIGH ( - 86 )
0002dd 9001     +LD R0 , Z +
0002de 81f0     +LD R31 , Z
0002df 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002e0 83ee      	STD  Y+6,R30
0002e1 83ff      	STD  Y+6+1,R31
0002e2 81ae      	LDD  R26,Y+6
0002e3 81bf      	LDD  R27,Y+6+1
0002e4 e0e0      	LDI  R30,LOW(0)
0002e5 e0f0      	LDI  R31,HIGH(0)
0002e6 93ed      	ST   X+,R30
0002e7 93fc      	ST   X,R31
                 _0x2020030:
0002e8 01de      	MOVW R26,R28
0002e9 5aa4      	SUBI R26,LOW(-(92))
0002ea 4fbf      	SBCI R27,HIGH(-(92))
0002eb 940e 0673 	CALL SUBOPT_0x4
0002ed 9731      	SBIW R30,1
0002ee 91e4      	LPM  R30,Z
0002ef 2f2e      	MOV  R18,R30
0002f0 30e0      	CPI  R30,0
0002f1 f409      	BRNE PC+2
0002f2 c1e9      	RJMP _0x2020032
0002f3 2fe1      	MOV  R30,R17
0002f4 30e0      	CPI  R30,0
0002f5 f439      	BRNE _0x2020036
0002f6 3225      	CPI  R18,37
0002f7 f411      	BRNE _0x2020037
0002f8 e011      	LDI  R17,LOW(1)
0002f9 c002      	RJMP _0x2020038
                 _0x2020037:
0002fa 940e 06dc 	CALL SUBOPT_0x12
                 _0x2020038:
0002fc c1de      	RJMP _0x2020035
                 _0x2020036:
0002fd 30e1      	CPI  R30,LOW(0x1)
0002fe f4c1      	BRNE _0x2020039
0002ff 3225      	CPI  R18,37
000300 f419      	BRNE _0x202003A
000301 940e 06dc 	CALL SUBOPT_0x12
000303 c1d6      	RJMP _0x2020114
                 _0x202003A:
000304 e012      	LDI  R17,LOW(2)
000305 e0e0      	LDI  R30,LOW(0)
000306 8bed      	STD  Y+21,R30
000307 e000      	LDI  R16,LOW(0)
000308 322d      	CPI  R18,45
000309 f411      	BRNE _0x202003B
00030a e001      	LDI  R16,LOW(1)
00030b c1cf      	RJMP _0x2020035
                 _0x202003B:
00030c 322b      	CPI  R18,43
00030d f419      	BRNE _0x202003C
00030e e2eb      	LDI  R30,LOW(43)
00030f 8bed      	STD  Y+21,R30
000310 c1ca      	RJMP _0x2020035
                 _0x202003C:
000311 3220      	CPI  R18,32
000312 f419      	BRNE _0x202003D
000313 e2e0      	LDI  R30,LOW(32)
000314 8bed      	STD  Y+21,R30
000315 c1c5      	RJMP _0x2020035
                 _0x202003D:
000316 c002      	RJMP _0x202003E
                 _0x2020039:
000317 30e2      	CPI  R30,LOW(0x2)
000318 f439      	BRNE _0x202003F
                 _0x202003E:
000319 e050      	LDI  R21,LOW(0)
00031a e013      	LDI  R17,LOW(3)
00031b 3320      	CPI  R18,48
00031c f411      	BRNE _0x2020040
00031d 6800      	ORI  R16,LOW(128)
00031e c1bc      	RJMP _0x2020035
                 _0x2020040:
00031f c002      	RJMP _0x2020041
                 _0x202003F:
000320 30e3      	CPI  R30,LOW(0x3)
000321 f491      	BRNE _0x2020042
                 _0x2020041:
000322 3320      	CPI  R18,48
000323 f010      	BRLO _0x2020044
000324 332a      	CPI  R18,58
000325 f008      	BRLO _0x2020045
                 _0x2020044:
000326 c007      	RJMP _0x2020043
                 _0x2020045:
000327 e0aa      	LDI  R26,LOW(10)
000328 9f5a      	MUL  R21,R26
000329 2d50      	MOV  R21,R0
00032a 2fe2      	MOV  R30,R18
00032b 53e0      	SUBI R30,LOW(48)
00032c 0f5e      	ADD  R21,R30
00032d c1ad      	RJMP _0x2020035
                 _0x2020043:
00032e e040      	LDI  R20,LOW(0)
00032f 322e      	CPI  R18,46
000330 f411      	BRNE _0x2020046
000331 e014      	LDI  R17,LOW(4)
000332 c1a8      	RJMP _0x2020035
                 _0x2020046:
000333 c00f      	RJMP _0x2020047
                 _0x2020042:
000334 30e4      	CPI  R30,LOW(0x4)
000335 f499      	BRNE _0x2020049
000336 3320      	CPI  R18,48
000337 f010      	BRLO _0x202004B
000338 332a      	CPI  R18,58
000339 f008      	BRLO _0x202004C
                 _0x202004B:
00033a c008      	RJMP _0x202004A
                 _0x202004C:
00033b 6200      	ORI  R16,LOW(32)
00033c e0aa      	LDI  R26,LOW(10)
00033d 9f4a      	MUL  R20,R26
00033e 2d40      	MOV  R20,R0
00033f 2fe2      	MOV  R30,R18
000340 53e0      	SUBI R30,LOW(48)
000341 0f4e      	ADD  R20,R30
000342 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000343 362c      	CPI  R18,108
000344 f419      	BRNE _0x202004D
000345 6002      	ORI  R16,LOW(2)
000346 e015      	LDI  R17,LOW(5)
000347 c193      	RJMP _0x2020035
                 _0x202004D:
000348 c003      	RJMP _0x202004E
                 _0x2020049:
000349 30e5      	CPI  R30,LOW(0x5)
00034a f009      	BREQ PC+2
00034b c18f      	RJMP _0x2020035
                 _0x202004E:
00034c 2fe2      	MOV  R30,R18
00034d 36e3      	CPI  R30,LOW(0x63)
00034e f459      	BRNE _0x2020053
00034f 940e 06e3 	CALL SUBOPT_0x13
000351 940e 06ea 	CALL SUBOPT_0x14
000353 940e 06e3 	CALL SUBOPT_0x13
000355 81a4      	LDD  R26,Z+4
000356 93aa      	ST   -Y,R26
000357 940e 06f1 	CALL SUBOPT_0x15
000359 c180      	RJMP _0x2020054
                 _0x2020053:
00035a 34e5      	CPI  R30,LOW(0x45)
00035b f011      	BREQ _0x2020057
00035c 36e5      	CPI  R30,LOW(0x65)
00035d f409      	BRNE _0x2020058
                 _0x2020057:
00035e c003      	RJMP _0x2020059
                 _0x2020058:
00035f 36e6      	CPI  R30,LOW(0x66)
000360 f009      	BREQ PC+2
000361 c048      	RJMP _0x202005A
                 _0x2020059:
000362 01fe      	MOVW R30,R28
000363 9676      	ADIW R30,22
000364 87ee      	STD  Y+14,R30
000365 87ff      	STD  Y+14+1,R31
000366 940e 06f7 	CALL SUBOPT_0x16
000368 940e 09b3 	CALL __GETD1P
00036a 940e 06fe 	CALL SUBOPT_0x17
00036c 940e 0703 	CALL SUBOPT_0x18
00036e 85ad      	LDD  R26,Y+13
00036f 23aa      	TST  R26
000370 f032      	BRMI _0x202005B
000371 89ad      	LDD  R26,Y+21
000372 32ab      	CPI  R26,LOW(0x2B)
000373 f059      	BREQ _0x202005D
000374 32a0      	CPI  R26,LOW(0x20)
000375 f081      	BREQ _0x202005F
000376 c017      	RJMP _0x2020060
                 _0x202005B:
000377 940e 0705 	CALL SUBOPT_0x19
000379 940e 0771 	CALL __ANEGF1
00037b 940e 06fe 	CALL SUBOPT_0x17
00037d e2ed      	LDI  R30,LOW(45)
00037e 8bed      	STD  Y+21,R30
                 _0x202005D:
00037f ff07      	SBRS R16,7
000380 c005      	RJMP _0x2020061
000381 89ed      	LDD  R30,Y+21
000382 93ea      	ST   -Y,R30
000383 940e 06f1 	CALL SUBOPT_0x15
000385 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000386 85ee      	LDD  R30,Y+14
000387 85ff      	LDD  R31,Y+14+1
000388 9631      	ADIW R30,1
000389 87ee      	STD  Y+14,R30
00038a 87ff      	STD  Y+14+1,R31
00038b 9731      	SBIW R30,1
00038c 89ad      	LDD  R26,Y+21
00038d 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
00038e ff05      	SBRS R16,5
00038f e046      	LDI  R20,LOW(6)
000390 3626      	CPI  R18,102
000391 f451      	BRNE _0x2020064
000392 940e 0705 	CALL SUBOPT_0x19
000394 940e 09cd 	CALL __PUTPARD1
000396 934a      	ST   -Y,R20
000397 89ab      	LDD  R26,Y+19
000398 89bc      	LDD  R27,Y+19+1
000399 940e 0587 	CALL _ftoa
00039b c009      	RJMP _0x2020065
                 _0x2020064:
00039c 940e 0705 	CALL SUBOPT_0x19
00039e 940e 09cd 	CALL __PUTPARD1
0003a0 934a      	ST   -Y,R20
0003a1 932a      	ST   -Y,R18
0003a2 89ac      	LDD  R26,Y+20
0003a3 89bd      	LDD  R27,Y+20+1
0003a4 de54      	RCALL __ftoe_G101
                 _0x2020065:
0003a5 01fe      	MOVW R30,R28
0003a6 9676      	ADIW R30,22
0003a7 940e 070a 	CALL SUBOPT_0x1A
0003a9 c01e      	RJMP _0x2020066
                 _0x202005A:
0003aa 37e3      	CPI  R30,LOW(0x73)
0003ab f439      	BRNE _0x2020068
0003ac 940e 0703 	CALL SUBOPT_0x18
0003ae 940e 0712 	CALL SUBOPT_0x1B
0003b0 940e 070a 	CALL SUBOPT_0x1A
0003b2 c00e      	RJMP _0x2020069
                 _0x2020068:
0003b3 37e0      	CPI  R30,LOW(0x70)
0003b4 f4c1      	BRNE _0x202006B
0003b5 940e 0703 	CALL SUBOPT_0x18
0003b7 940e 0712 	CALL SUBOPT_0x1B
0003b9 87ee      	STD  Y+14,R30
0003ba 87ff      	STD  Y+14+1,R31
0003bb 85ae      	LDD  R26,Y+14
0003bc 85bf      	LDD  R27,Y+14+1
0003bd 940e 0532 	CALL _strlenf
0003bf 2f1e      	MOV  R17,R30
0003c0 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0003c1 770f      	ANDI R16,LOW(127)
0003c2 3040      	CPI  R20,0
0003c3 f011      	BREQ _0x202006D
0003c4 1741      	CP   R20,R17
0003c5 f008      	BRLO _0x202006E
                 _0x202006D:
0003c6 c001      	RJMP _0x202006C
                 _0x202006E:
0003c7 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0003c8 e040      	LDI  R20,LOW(0)
0003c9 e0e0      	LDI  R30,LOW(0)
0003ca 8bec      	STD  Y+20,R30
0003cb e030      	LDI  R19,LOW(0)
0003cc c06d      	RJMP _0x202006F
                 _0x202006B:
0003cd 36e4      	CPI  R30,LOW(0x64)
0003ce f011      	BREQ _0x2020072
0003cf 36e9      	CPI  R30,LOW(0x69)
0003d0 f411      	BRNE _0x2020073
                 _0x2020072:
0003d1 6004      	ORI  R16,LOW(4)
0003d2 c002      	RJMP _0x2020074
                 _0x2020073:
0003d3 37e5      	CPI  R30,LOW(0x75)
0003d4 f4a1      	BRNE _0x2020075
                 _0x2020074:
0003d5 e0ea      	LDI  R30,LOW(10)
0003d6 8bec      	STD  Y+20,R30
0003d7 ff01      	SBRS R16,1
0003d8 c008      	RJMP _0x2020076
                +
0003d9 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003da ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003db e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003dc e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003dd 940e 0717 	CALL SUBOPT_0x1C
0003df e01a      	LDI  R17,LOW(10)
0003e0 c022      	RJMP _0x2020077
                 _0x2020076:
                +
0003e1 e1e0     +LDI R30 , LOW ( 0x2710 )
0003e2 e2f7     +LDI R31 , HIGH ( 0x2710 )
0003e3 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003e4 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003e5 940e 0717 	CALL SUBOPT_0x1C
0003e7 e015      	LDI  R17,LOW(5)
0003e8 c01a      	RJMP _0x2020077
                 _0x2020075:
0003e9 35e8      	CPI  R30,LOW(0x58)
0003ea f411      	BRNE _0x2020079
0003eb 6008      	ORI  R16,LOW(8)
0003ec c003      	RJMP _0x202007A
                 _0x2020079:
0003ed 37e8      	CPI  R30,LOW(0x78)
0003ee f009      	BREQ PC+2
0003ef c0ea      	RJMP _0x20200B8
                 _0x202007A:
0003f0 e1e0      	LDI  R30,LOW(16)
0003f1 8bec      	STD  Y+20,R30
0003f2 ff01      	SBRS R16,1
0003f3 c008      	RJMP _0x202007C
                +
0003f4 e0e0     +LDI R30 , LOW ( 0x10000000 )
0003f5 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0003f6 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003f7 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003f8 940e 0717 	CALL SUBOPT_0x1C
0003fa e018      	LDI  R17,LOW(8)
0003fb c007      	RJMP _0x2020077
                 _0x202007C:
                +
0003fc e0e0     +LDI R30 , LOW ( 0x1000 )
0003fd e1f0     +LDI R31 , HIGH ( 0x1000 )
0003fe e060     +LDI R22 , BYTE3 ( 0x1000 )
0003ff e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000400 940e 0717 	CALL SUBOPT_0x1C
000402 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000403 3040      	CPI  R20,0
000404 f011      	BREQ _0x202007D
000405 770f      	ANDI R16,LOW(127)
000406 c001      	RJMP _0x202007E
                 _0x202007D:
000407 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000408 ff01      	SBRS R16,1
000409 c008      	RJMP _0x202007F
00040a 940e 0703 	CALL SUBOPT_0x18
00040c 940e 06f7 	CALL SUBOPT_0x16
00040e 9614      	ADIW R26,4
00040f 940e 09b3 	CALL __GETD1P
000411 c00f      	RJMP _0x2020115
                 _0x202007F:
000412 ff02      	SBRS R16,2
000413 c007      	RJMP _0x2020081
000414 940e 0703 	CALL SUBOPT_0x18
000416 940e 0712 	CALL SUBOPT_0x1B
000418 940e 0930 	CALL __CWD1
00041a c006      	RJMP _0x2020115
                 _0x2020081:
00041b 940e 0703 	CALL SUBOPT_0x18
00041d 940e 0712 	CALL SUBOPT_0x1B
00041f 2766      	CLR  R22
000420 2777      	CLR  R23
                 _0x2020115:
                +
000421 87ea     +STD Y + 10 , R30
000422 87fb     +STD Y + 10 + 1 , R31
000423 876c     +STD Y + 10 + 2 , R22
000424 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000425 ff02      	SBRS R16,2
000426 c012      	RJMP _0x2020083
000427 85ad      	LDD  R26,Y+13
000428 23aa      	TST  R26
000429 f442      	BRPL _0x2020084
00042a 940e 0705 	CALL SUBOPT_0x19
00042c 940e 0922 	CALL __ANEGD1
00042e 940e 06fe 	CALL SUBOPT_0x17
000430 e2ed      	LDI  R30,LOW(45)
000431 8bed      	STD  Y+21,R30
                 _0x2020084:
000432 89ed      	LDD  R30,Y+21
000433 30e0      	CPI  R30,0
000434 f019      	BREQ _0x2020085
000435 5f1f      	SUBI R17,-LOW(1)
000436 5f4f      	SUBI R20,-LOW(1)
000437 c001      	RJMP _0x2020086
                 _0x2020085:
000438 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000439 2f34      	MOV  R19,R20
                 _0x202006F:
00043a fd00      	SBRC R16,0
00043b c014      	RJMP _0x2020087
                 _0x2020088:
00043c 1715      	CP   R17,R21
00043d f410      	BRSH _0x202008B
00043e 1735      	CP   R19,R21
00043f f008      	BRLO _0x202008C
                 _0x202008B:
000440 c00f      	RJMP _0x202008A
                 _0x202008C:
000441 ff07      	SBRS R16,7
000442 c008      	RJMP _0x202008D
000443 ff02      	SBRS R16,2
000444 c004      	RJMP _0x202008E
000445 7f0b      	ANDI R16,LOW(251)
000446 892d      	LDD  R18,Y+21
000447 5011      	SUBI R17,LOW(1)
000448 c001      	RJMP _0x202008F
                 _0x202008E:
000449 e320      	LDI  R18,LOW(48)
                 _0x202008F:
00044a c001      	RJMP _0x2020090
                 _0x202008D:
00044b e220      	LDI  R18,LOW(32)
                 _0x2020090:
00044c 940e 06dc 	CALL SUBOPT_0x12
00044e 5051      	SUBI R21,LOW(1)
00044f cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000450 1714      	CP   R17,R20
000451 f490      	BRSH _0x2020093
000452 6100      	ORI  R16,LOW(16)
000453 ff02      	SBRS R16,2
000454 c006      	RJMP _0x2020094
000455 940e 071c 	CALL SUBOPT_0x1D
000457 f009      	BREQ _0x2020095
000458 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000459 5011      	SUBI R17,LOW(1)
00045a 5041      	SUBI R20,LOW(1)
                 _0x2020094:
00045b e3e0      	LDI  R30,LOW(48)
00045c 93ea      	ST   -Y,R30
00045d 940e 06f1 	CALL SUBOPT_0x15
00045f 3050      	CPI  R21,0
000460 f009      	BREQ _0x2020096
000461 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000462 5041      	SUBI R20,LOW(1)
000463 cfec      	RJMP _0x2020091
                 _0x2020093:
000464 2f31      	MOV  R19,R17
000465 89ec      	LDD  R30,Y+20
000466 30e0      	CPI  R30,0
000467 f4b9      	BRNE _0x2020097
                 _0x2020098:
000468 3030      	CPI  R19,0
000469 f0a1      	BREQ _0x202009A
00046a ff03      	SBRS R16,3
00046b c006      	RJMP _0x202009B
00046c 85ee      	LDD  R30,Y+14
00046d 85ff      	LDD  R31,Y+14+1
00046e 9125      	LPM  R18,Z+
00046f 87ee      	STD  Y+14,R30
000470 87ff      	STD  Y+14+1,R31
000471 c005      	RJMP _0x202009C
                 _0x202009B:
000472 85ae      	LDD  R26,Y+14
000473 85bf      	LDD  R27,Y+14+1
000474 912d      	LD   R18,X+
000475 87ae      	STD  Y+14,R26
000476 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000477 940e 06dc 	CALL SUBOPT_0x12
000479 3050      	CPI  R21,0
00047a f009      	BREQ _0x202009D
00047b 5051      	SUBI R21,LOW(1)
                 _0x202009D:
00047c 5031      	SUBI R19,LOW(1)
00047d cfea      	RJMP _0x2020098
                 _0x202009A:
00047e c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
00047f 940e 072e 	CALL SUBOPT_0x1E
000481 940e 0960 	CALL __DIVD21U
000483 2f2e      	MOV  R18,R30
000484 302a      	CPI  R18,10
000485 f030      	BRLO _0x20200A2
000486 ff03      	SBRS R16,3
000487 c002      	RJMP _0x20200A3
000488 5c29      	SUBI R18,-LOW(55)
000489 c001      	RJMP _0x20200A4
                 _0x20200A3:
00048a 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
00048b c001      	RJMP _0x20200A5
                 _0x20200A2:
00048c 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
00048d fd04      	SBRC R16,4
00048e c021      	RJMP _0x20200A7
00048f 3321      	CPI  R18,49
000490 f460      	BRSH _0x20200A9
                +
000491 89a8     +LDD R26 , Y + 16
000492 89b9     +LDD R27 , Y + 16 + 1
000493 898a     +LDD R24 , Y + 16 + 2
000494 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000495 30a1     +CPI R26 , LOW ( 0x1 )
000496 e0e0     +LDI R30 , HIGH ( 0x1 )
000497 07be     +CPC R27 , R30
000498 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000499 078e     +CPC R24 , R30
00049a e0e0     +LDI R30 , BYTE4 ( 0x1 )
00049b 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00049c f409      	BRNE _0x20200A8
                 _0x20200A9:
00049d c00b      	RJMP _0x20200AB
                 _0x20200A8:
00049e 1743      	CP   R20,R19
00049f f440      	BRSH _0x2020116
0004a0 1753      	CP   R21,R19
0004a1 f010      	BRLO _0x20200AE
0004a2 ff00      	SBRS R16,0
0004a3 c001      	RJMP _0x20200AF
                 _0x20200AE:
0004a4 c010      	RJMP _0x20200AD
                 _0x20200AF:
0004a5 e220      	LDI  R18,LOW(32)
0004a6 ff07      	SBRS R16,7
0004a7 c008      	RJMP _0x20200B0
                 _0x2020116:
0004a8 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0004a9 6100      	ORI  R16,LOW(16)
0004aa ff02      	SBRS R16,2
0004ab c004      	RJMP _0x20200B1
0004ac 940e 071c 	CALL SUBOPT_0x1D
0004ae f009      	BREQ _0x20200B2
0004af 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0004b0 940e 06dc 	CALL SUBOPT_0x12
0004b2 3050      	CPI  R21,0
0004b3 f009      	BREQ _0x20200B3
0004b4 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0004b5 5031      	SUBI R19,LOW(1)
0004b6 940e 072e 	CALL SUBOPT_0x1E
0004b8 940e 0991 	CALL __MODD21U
0004ba 940e 06fe 	CALL SUBOPT_0x17
0004bc 89ec      	LDD  R30,Y+20
                +
0004bd 89a8     +LDD R26 , Y + 16
0004be 89b9     +LDD R27 , Y + 16 + 1
0004bf 898a     +LDD R24 , Y + 16 + 2
0004c0 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0004c1 27ff      	CLR  R31
0004c2 2766      	CLR  R22
0004c3 2777      	CLR  R23
0004c4 940e 0960 	CALL __DIVD21U
0004c6 940e 0717 	CALL SUBOPT_0x1C
                +
0004c8 89e8     +LDD R30 , Y + 16
0004c9 89f9     +LDD R31 , Y + 16 + 1
0004ca 896a     +LDD R22 , Y + 16 + 2
0004cb 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004cc 940e 09e4 	CALL __CPD10
0004ce f009      	BREQ _0x20200A1
0004cf cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0004d0 ff00      	SBRS R16,0
0004d1 c008      	RJMP _0x20200B4
                 _0x20200B5:
0004d2 3050      	CPI  R21,0
0004d3 f031      	BREQ _0x20200B7
0004d4 5051      	SUBI R21,LOW(1)
0004d5 e2e0      	LDI  R30,LOW(32)
0004d6 93ea      	ST   -Y,R30
0004d7 940e 06f1 	CALL SUBOPT_0x15
0004d9 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0004da e010      	LDI  R17,LOW(0)
                 _0x2020035:
0004db ce0c      	RJMP _0x2020030
                 _0x2020032:
0004dc 81ae      	LDD  R26,Y+6
0004dd 81bf      	LDD  R27,Y+6+1
0004de 940e 09af 	CALL __GETW1P
0004e0 940e 09ef 	CALL __LOADLOCR6
0004e2 96ef      	ADIW R28,63
0004e3 966f      	ADIW R28,31
0004e4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004e5 92ff      	PUSH R15
0004e6 2ef8      	MOV  R15,R24
0004e7 9726      	SBIW R28,6
0004e8 940e 09ea 	CALL __SAVELOCR4
0004ea 940e 0737 	CALL SUBOPT_0x1F
0004ec 9730      	SBIW R30,0
0004ed f419      	BRNE _0x20200B9
0004ee efef      	LDI  R30,LOW(65535)
0004ef efff      	LDI  R31,HIGH(65535)
0004f0 c023      	RJMP _0x20C0004
                 _0x20200B9:
0004f1 01de      	MOVW R26,R28
0004f2 9616      	ADIW R26,6
0004f3 940e 091a 	CALL __ADDW2R15
0004f5 018d      	MOVW R16,R26
0004f6 940e 0737 	CALL SUBOPT_0x1F
0004f8 83ee      	STD  Y+6,R30
0004f9 83ff      	STD  Y+6+1,R31
0004fa e0e0      	LDI  R30,LOW(0)
0004fb 87e8      	STD  Y+8,R30
0004fc 87e9      	STD  Y+8+1,R30
0004fd 01de      	MOVW R26,R28
0004fe 961a      	ADIW R26,10
0004ff 940e 091a 	CALL __ADDW2R15
000501 940e 09af 	CALL __GETW1P
000503 93fa      	ST   -Y,R31
000504 93ea      	ST   -Y,R30
000505 931a      	ST   -Y,R17
000506 930a      	ST   -Y,R16
000507 ebef      	LDI  R30,LOW(_put_buff_G101)
000508 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000509 93fa      	ST   -Y,R31
00050a 93ea      	ST   -Y,R30
00050b 01de      	MOVW R26,R28
00050c 961a      	ADIW R26,10
00050d ddbd      	RCALL __print_G101
00050e 019f      	MOVW R18,R30
00050f 81ae      	LDD  R26,Y+6
000510 81bf      	LDD  R27,Y+6+1
000511 e0e0      	LDI  R30,LOW(0)
000512 93ec      	ST   X,R30
000513 01f9      	MOVW R30,R18
                 _0x20C0004:
000514 940e 09f1 	CALL __LOADLOCR4
000516 962a      	ADIW R28,10
000517 90ff      	POP  R15
000518 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000519 93ba      	ST   -Y,R27
00051a 93aa      	ST   -Y,R26
00051b 91e9          ld   r30,y+
00051c 91f9          ld   r31,y+
00051d 91a9          ld   r26,y+
00051e 91b9          ld   r27,y+
00051f 01cd          movw r24,r26
                 strcpyf0:
000520 9005      	lpm  r0,z+
000521 920d          st   x+,r0
000522 2000          tst  r0
000523 f7e1          brne strcpyf0
000524 01fc          movw r30,r24
000525 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000526 93ba      	ST   -Y,R27
000527 93aa      	ST   -Y,R26
000528 91a9          ld   r26,y+
000529 91b9          ld   r27,y+
00052a 27ee          clr  r30
00052b 27ff          clr  r31
                 strlen0:
00052c 916d          ld   r22,x+
00052d 2366          tst  r22
00052e f011          breq strlen1
00052f 9631          adiw r30,1
000530 cffb          rjmp strlen0
                 strlen1:
000531 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000532 93ba      	ST   -Y,R27
000533 93aa      	ST   -Y,R26
000534 27aa          clr  r26
000535 27bb          clr  r27
000536 91e9          ld   r30,y+
000537 91f9          ld   r31,y+
                 strlenf0:
000538 9005      	lpm  r0,z+
000539 2000          tst  r0
00053a f011          breq strlenf1
00053b 9611          adiw r26,1
00053c cffb          rjmp strlenf0
                 strlenf1:
00053d 01fd          movw r30,r26
00053e 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00053f 940e 09d2 	CALL __PUTPARD2
000541 817b         ldd  r23,y+3
000542 816a         ldd  r22,y+2
000543 81f9         ldd  r31,y+1
000544 81e8         ld   r30,y
000545 fb77         bst  r23,7
000546 0f77         lsl  r23
000547 fd67         sbrc r22,7
000548 6071         sbr  r23,1
000549 2f97         mov  r25,r23
00054a 579e         subi r25,0x7e
00054b f081         breq __ftrunc0
00054c f078         brcs __ftrunc0
00054d 3198         cpi  r25,24
00054e f490         brsh __ftrunc1
00054f 27aa         clr  r26
000550 27bb         clr  r27
000551 2788         clr  r24
                 __ftrunc2:
000552 9408         sec
000553 9587         ror  r24
000554 95b7         ror  r27
000555 95a7         ror  r26
000556 959a         dec  r25
000557 f7d1         brne __ftrunc2
000558 23ea         and  r30,r26
000559 23fb         and  r31,r27
00055a 2368         and  r22,r24
00055b c005         rjmp __ftrunc1
                 __ftrunc0:
00055c 94e8         clt
00055d 2777         clr  r23
00055e 27ee         clr  r30
00055f 27ff         clr  r31
000560 2766         clr  r22
                 __ftrunc1:
000561 776f         cbr  r22,0x80
000562 9576         lsr  r23
000563 f408         brcc __ftrunc3
000564 6860         sbr  r22,0x80
                 __ftrunc3:
000565 f977         bld  r23,7
000566 91a9         ld   r26,y+
000567 91b9         ld   r27,y+
000568 9189         ld   r24,y+
000569 9199         ld   r25,y+
00056a 17ea         cp   r30,r26
00056b 07fb         cpc  r31,r27
00056c 0768         cpc  r22,r24
00056d 0779         cpc  r23,r25
00056e fb97         bst  r25,7
00056f 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000570 940e 09d2 	CALL __PUTPARD2
000572 940e 09c3 	CALL __GETD2S0
000574 940e 053f 	CALL _ftrunc
000576 940e 09c8 	CALL __PUTD1S0
000578 f419          brne __floor1
                 __floor0:
000579 940e 09be 	CALL __GETD1S0
00057b c009      	RJMP _0x20C0003
                 __floor1:
00057c f7e6          brtc __floor0
00057d 940e 09be 	CALL __GETD1S0
                +
00057f e0a0     +LDI R26 , LOW ( 0x3F800000 )
000580 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000581 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000582 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000583 940e 0810 	CALL __SUBF12
                 _0x20C0003:
000585 9624      	ADIW R28,4
000586 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000587 d0f1      	RCALL SUBOPT_0x5
000588 e0e0      	LDI  R30,LOW(0)
000589 83ea      	STD  Y+2,R30
00058a e3ef      	LDI  R30,LOW(63)
00058b 83eb      	STD  Y+3,R30
00058c 931a      	ST   -Y,R17
00058d 930a      	ST   -Y,R16
00058e 85eb      	LDD  R30,Y+11
00058f 85fc      	LDD  R31,Y+11+1
000590 3fef      	CPI  R30,LOW(0xFFFF)
000591 efaf      	LDI  R26,HIGH(0xFFFF)
000592 07fa      	CPC  R31,R26
000593 f431      	BRNE _0x20A000D
000594 d1a9      	RCALL SUBOPT_0x20
                +
000595 e8a4     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000596 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000597 940e 0519 	CALL _strcpyf
000599 c08a      	RJMP _0x20C0002
                 _0x20A000D:
00059a 3fef      	CPI  R30,LOW(0x7FFF)
00059b e7af      	LDI  R26,HIGH(0x7FFF)
00059c 07fa      	CPC  R31,R26
00059d f431      	BRNE _0x20A000C
00059e d19f      	RCALL SUBOPT_0x20
                +
00059f e8a5     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0005a0 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0005a1 940e 0519 	CALL _strcpyf
0005a3 c080      	RJMP _0x20C0002
                 _0x20A000C:
0005a4 85ac      	LDD  R26,Y+12
0005a5 23aa      	TST  R26
0005a6 f452      	BRPL _0x20A000F
                +
0005a7 85e9     +LDD R30 , Y + 9
0005a8 85fa     +LDD R31 , Y + 9 + 1
0005a9 856b     +LDD R22 , Y + 9 + 2
0005aa 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005ab 940e 0771 	CALL __ANEGF1
0005ad d195      	RCALL SUBOPT_0x21
0005ae d199      	RCALL SUBOPT_0x22
0005af e2ed      	LDI  R30,LOW(45)
0005b0 93ec      	ST   X,R30
                 _0x20A000F:
0005b1 85a8      	LDD  R26,Y+8
0005b2 30a7      	CPI  R26,LOW(0x7)
0005b3 f010      	BRLO _0x20A0010
0005b4 e0e6      	LDI  R30,LOW(6)
0005b5 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005b6 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005b7 2fe1      	MOV  R30,R17
0005b8 5011      	SUBI R17,1
0005b9 30e0      	CPI  R30,0
0005ba f021      	BREQ _0x20A0013
0005bb d193      	RCALL SUBOPT_0x23
0005bc d101      	RCALL SUBOPT_0xD
0005bd d196      	RCALL SUBOPT_0x24
0005be cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005bf d199      	RCALL SUBOPT_0x25
0005c0 940e 0817 	CALL __ADDF12
0005c2 d180      	RCALL SUBOPT_0x21
0005c3 e010      	LDI  R17,LOW(0)
                +
0005c4 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0005c5 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0005c6 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0005c7 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0005c8 d18b      	RCALL SUBOPT_0x24
                 _0x20A0014:
0005c9 d18f      	RCALL SUBOPT_0x25
0005ca 940e 08fa 	CALL __CMPF12
0005cc f068      	BRLO _0x20A0016
0005cd d181      	RCALL SUBOPT_0x23
0005ce d0dc      	RCALL SUBOPT_0xA
0005cf d184      	RCALL SUBOPT_0x24
0005d0 5f1f      	SUBI R17,-LOW(1)
0005d1 3217      	CPI  R17,39
0005d2 f030      	BRLO _0x20A0017
0005d3 d16a      	RCALL SUBOPT_0x20
                +
0005d4 e8a9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005d5 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005d6 940e 0519 	CALL _strcpyf
0005d8 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005d9 cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005da 3010      	CPI  R17,0
0005db f421      	BRNE _0x20A0018
0005dc d16b      	RCALL SUBOPT_0x22
0005dd e3e0      	LDI  R30,LOW(48)
0005de 93ec      	ST   X,R30
0005df c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005e0 2fe1      	MOV  R30,R17
0005e1 5011      	SUBI R17,1
0005e2 30e0      	CPI  R30,0
0005e3 f0e1      	BREQ _0x20A001C
0005e4 d16a      	RCALL SUBOPT_0x23
0005e5 d0d8      	RCALL SUBOPT_0xD
0005e6 d0d0      	RCALL SUBOPT_0xC
0005e7 01df      	MOVW R26,R30
0005e8 01cb      	MOVW R24,R22
0005e9 940e 0570 	CALL _floor
0005eb d168      	RCALL SUBOPT_0x24
0005ec d16c      	RCALL SUBOPT_0x25
0005ed 940e 08b5 	CALL __DIVF21
0005ef 940e 07a4 	CALL __CFD1U
0005f1 2f0e      	MOV  R16,R30
0005f2 d155      	RCALL SUBOPT_0x22
0005f3 d0d8      	RCALL SUBOPT_0xF
0005f4 e0f0      	LDI  R31,0
0005f5 d159      	RCALL SUBOPT_0x23
0005f6 940e 0930 	CALL __CWD1
0005f8 940e 07dd 	CALL __CDF1
0005fa 940e 0867 	CALL __MULF12
0005fc d165      	RCALL SUBOPT_0x26
0005fd d0d3      	RCALL SUBOPT_0x10
0005fe d144      	RCALL SUBOPT_0x21
0005ff cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000600 85e8      	LDD  R30,Y+8
000601 30e0      	CPI  R30,0
000602 f0e9      	BREQ _0x20C0001
000603 d144      	RCALL SUBOPT_0x22
000604 e2ee      	LDI  R30,LOW(46)
000605 93ec      	ST   X,R30
                 _0x20A001E:
000606 85e8      	LDD  R30,Y+8
000607 50e1      	SUBI R30,LOW(1)
000608 87e8      	STD  Y+8,R30
000609 5fef      	SUBI R30,-LOW(1)
00060a f0a9      	BREQ _0x20A0020
00060b d156      	RCALL SUBOPT_0x26
00060c d09e      	RCALL SUBOPT_0xA
00060d d135      	RCALL SUBOPT_0x21
                +
00060e 85e9     +LDD R30 , Y + 9
00060f 85fa     +LDD R31 , Y + 9 + 1
000610 856b     +LDD R22 , Y + 9 + 2
000611 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000612 940e 07a4 	CALL __CFD1U
000614 2f0e      	MOV  R16,R30
000615 d132      	RCALL SUBOPT_0x22
000616 d0b5      	RCALL SUBOPT_0xF
000617 e0f0      	LDI  R31,0
000618 d149      	RCALL SUBOPT_0x26
000619 940e 0930 	CALL __CWD1
00061b 940e 07dd 	CALL __CDF1
00061d d0b3      	RCALL SUBOPT_0x10
00061e d124      	RCALL SUBOPT_0x21
00061f cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000620 81ae      	LDD  R26,Y+6
000621 81bf      	LDD  R27,Y+6+1
000622 e0e0      	LDI  R30,LOW(0)
000623 93ec      	ST   X,R30
                 _0x20C0002:
000624 8119      	LDD  R17,Y+1
000625 8108      	LDD  R16,Y+0
000626 962d      	ADIW R28,13
000627 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _w:
000275           	.BYTE 0x4
                 _st:
000279           	.BYTE 0x28
                 __base_y_G100:
0002a1           	.BYTE 0x4
                 __seed_G105:
0002a5           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
000628 920a      	ST   -Y,R0
000629 921a      	ST   -Y,R1
00062a 92fa      	ST   -Y,R15
00062b 936a      	ST   -Y,R22
00062c 937a      	ST   -Y,R23
00062d 938a      	ST   -Y,R24
00062e 939a      	ST   -Y,R25
00062f 93aa      	ST   -Y,R26
000630 93ba      	ST   -Y,R27
000631 93ea      	ST   -Y,R30
000632 93fa      	ST   -Y,R31
000633 b7ef      	IN   R30,SREG
000634 93ea      	ST   -Y,R30
000635 b3e5      	IN   R30,0x15
000636 30e1      	CPI  R30,LOW(0x1)
000637 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x1:
000638 01f2      	MOVW R30,R4
000639 e9a8      	LDI  R26,LOW(15000)
00063a e3ba      	LDI  R27,HIGH(15000)
00063b 940e 095b 	CALL __DIVW21
00063d e7a5      	LDI  R26,LOW(_w)
00063e e0b2      	LDI  R27,HIGH(_w)
00063f 940e 0930 	CALL __CWD1
000641 940e 07dd 	CALL __CDF1
000643 940e 09b9 	CALL __PUTDP1
000645 e7e9      	LDI  R30,LOW(_st)
000646 e0f2      	LDI  R31,HIGH(_st)
000647 93fa      	ST   -Y,R31
000648 93ea      	ST   -Y,R30
                +
000649 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
00064a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
00064d 91e0 0275 	LDS  R30,_w
00064f 91f0 0276 	LDS  R31,_w+1
000651 9160 0277 	LDS  R22,_w+2
000653 9170 0278 	LDS  R23,_w+3
000655 940e 09cd 	CALL __PUTPARD1
000657 01f2      	MOVW R30,R4
000658 940e 0930 	CALL __CWD1
00065a 940e 09cd 	CALL __PUTPARD1
00065c e088      	LDI  R24,8
00065d 940e 04e5 	CALL _sprintf
00065f 962c      	ADIW R28,12
000660 940e 0160 	CALL _lcd_clear
000662 e7a9      	LDI  R26,LOW(_st)
000663 e0b2      	LDI  R27,HIGH(_st)
000664 940c 0181 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000666 940e 0147 	CALL __lcd_write_data
000668 e0a3      	LDI  R26,LOW(3)
000669 e0b0      	LDI  R27,0
00066a 940c 0767 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
00066c e3a0      	LDI  R26,LOW(48)
00066d 940e 0133 	CALL __lcd_write_nibble_G100
                +
00066f e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000670 958a     +DEC R24
000671 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000673 91ed      	LD   R30,X+
000674 91fd      	LD   R31,X+
000675 9631      	ADIW R30,1
000676 93fe      	ST   -X,R31
000677 93ee      	ST   -X,R30
000678 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000679 93ba      	ST   -Y,R27
00067a 93aa      	ST   -Y,R26
00067b 9724      	SBIW R28,4
00067c e0e0      	LDI  R30,LOW(0)
00067d 83e8      	ST   Y,R30
00067e 83e9      	STD  Y+1,R30
00067f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x6:
                +
000680 81ac     +LDD R26 , Y + 4
000681 81bd     +LDD R27 , Y + 4 + 1
000682 818e     +LDD R24 , Y + 4 + 2
000683 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000684 e0e0     +LDI R30 , LOW ( 0x41200000 )
000685 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000686 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000687 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000688 940e 0867 	CALL __MULF12
                +
00068a 83ec     +STD Y + 4 , R30
00068b 83fd     +STD Y + 4 + 1 , R31
00068c 836e     +STD Y + 4 + 2 , R22
00068d 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00068e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
                +
00068f 81ec     +LDD R30 , Y + 4
000690 81fd     +LDD R31 , Y + 4 + 1
000691 816e     +LDD R22 , Y + 4 + 2
000692 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000693 85ac     +LDD R26 , Y + 12
000694 85bd     +LDD R27 , Y + 12 + 1
000695 858e     +LDD R24 , Y + 12 + 2
000696 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000697 940e 08fa 	CALL __CMPF12
000699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
00069a 85ac     +LDD R26 , Y + 12
00069b 85bd     +LDD R27 , Y + 12 + 1
00069c 858e     +LDD R24 , Y + 12 + 2
00069d 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00069e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
                +
00069f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006a0 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006a1 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006a2 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006a3 940e 0867 	CALL __MULF12
                +
0006a5 87ec     +STD Y + 12 , R30
0006a6 87fd     +STD Y + 12 + 1 , R31
0006a7 876e     +STD Y + 12 + 2 , R22
0006a8 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006a9 5f3f      	SUBI R19,-LOW(1)
0006aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
0006ab e0e0     +LDI R30 , LOW ( 0x41200000 )
0006ac e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006ad e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006ae e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006af 940e 0867 	CALL __MULF12
0006b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
0006b2 87ec     +STD Y + 12 , R30
0006b3 87fd     +STD Y + 12 + 1 , R31
0006b4 876e     +STD Y + 12 + 2 , R22
0006b5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
0006b7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0006b8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0006b9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0006ba e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0006bb 940e 0817 	CALL __ADDF12
0006bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
0006be eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006bf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006c0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006c1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006c2 940e 0867 	CALL __MULF12
0006c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0006c5 85a8      	LDD  R26,Y+8
0006c6 85b9      	LDD  R27,Y+8+1
0006c7 9611      	ADIW R26,1
0006c8 87a8      	STD  Y+8,R26
0006c9 87b9      	STD  Y+8+1,R27
0006ca 9711      	SBIW R26,1
0006cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006cc 2fe0      	MOV  R30,R16
0006cd 5de0      	SUBI R30,-LOW(48)
0006ce 93ec      	ST   X,R30
0006cf 2fe0      	MOV  R30,R16
0006d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0006d1 940e 09d7 	CALL __SWAPD12
0006d3 940e 0810 	CALL __SUBF12
0006d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
0006d6 85e8      	LDD  R30,Y+8
0006d7 85f9      	LDD  R31,Y+8+1
0006d8 9631      	ADIW R30,1
0006d9 87e8      	STD  Y+8,R30
0006da 87f9      	STD  Y+8+1,R31
0006db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
0006dc 932a      	ST   -Y,R18
0006dd 81af      	LDD  R26,Y+7
0006de 85b8      	LDD  R27,Y+7+1
0006df 85e9      	LDD  R30,Y+9
0006e0 85fa      	LDD  R31,Y+9+1
0006e1 9509      	ICALL
0006e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x13:
                +
0006e3 01fe     +MOVW R30 , R28
0006e4 5ae6     +SUBI R30 , LOW ( - 90 )
0006e5 4fff     +SBCI R31 , HIGH ( - 90 )
0006e6 9001     +LD R0 , Z +
0006e7 81f0     +LD R31 , Z
0006e8 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x14:
0006ea 9734      	SBIW R30,4
                +
0006eb 01de     +MOVW R26 , R28
0006ec 5aa6     +SUBI R26 , LOW ( - 90 )
0006ed 4fbf     +SBCI R27 , HIGH ( - 90 )
0006ee 93ed     +ST X + , R30
0006ef 93fc     +ST X , R31
                 	__PUTW1SX 90
0006f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
0006f1 81af      	LDD  R26,Y+7
0006f2 85b8      	LDD  R27,Y+7+1
0006f3 85e9      	LDD  R30,Y+9
0006f4 85fa      	LDD  R31,Y+9+1
0006f5 9509      	ICALL
0006f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x16:
                +
0006f7 01de     +MOVW R26 , R28
0006f8 5aa6     +SUBI R26 , LOW ( - 90 )
0006f9 4fbf     +SBCI R27 , HIGH ( - 90 )
0006fa 900d     +LD R0 , X +
0006fb 91bc     +LD R27 , X
0006fc 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
0006fe 87ea     +STD Y + 10 , R30
0006ff 87fb     +STD Y + 10 + 1 , R31
000700 876c     +STD Y + 10 + 2 , R22
000701 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000702 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
000703 dfdf      	RCALL SUBOPT_0x13
000704 cfe5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
000705 85ea     +LDD R30 , Y + 10
000706 85fb     +LDD R31 , Y + 10 + 1
000707 856c     +LDD R22 , Y + 10 + 2
000708 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000709 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
00070a 87ee      	STD  Y+14,R30
00070b 87ff      	STD  Y+14+1,R31
00070c 85ae      	LDD  R26,Y+14
00070d 85bf      	LDD  R27,Y+14+1
00070e 940e 0526 	CALL _strlen
000710 2f1e      	MOV  R17,R30
000711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000712 dfe4      	RCALL SUBOPT_0x16
000713 9614      	ADIW R26,4
000714 940e 09af 	CALL __GETW1P
000716 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
                +
000717 8be8     +STD Y + 16 , R30
000718 8bf9     +STD Y + 16 + 1 , R31
000719 8b6a     +STD Y + 16 + 2 , R22
00071a 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00071b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1D:
00071c 7f0b      	ANDI R16,LOW(251)
00071d 89ed      	LDD  R30,Y+21
00071e 93ea      	ST   -Y,R30
                +
00071f 01de     +MOVW R26 , R28
000720 5aa9     +SUBI R26 , LOW ( - 87 )
000721 4fbf     +SBCI R27 , HIGH ( - 87 )
000722 900d     +LD R0 , X +
000723 91bc     +LD R27 , X
000724 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000725 01fe     +MOVW R30 , R28
000726 5ae7     +SUBI R30 , LOW ( - 89 )
000727 4fff     +SBCI R31 , HIGH ( - 89 )
000728 9001     +LD R0 , Z +
000729 81f0     +LD R31 , Z
00072a 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00072b 9509      	ICALL
00072c 3050      	CPI  R21,0
00072d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
                +
00072e 89e8     +LDD R30 , Y + 16
00072f 89f9     +LDD R31 , Y + 16 + 1
000730 896a     +LDD R22 , Y + 16 + 2
000731 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000732 85aa     +LDD R26 , Y + 10
000733 85bb     +LDD R27 , Y + 10 + 1
000734 858c     +LDD R24 , Y + 10 + 2
000735 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000737 01de      	MOVW R26,R28
000738 961c      	ADIW R26,12
000739 940e 091a 	CALL __ADDW2R15
00073b 940e 09af 	CALL __GETW1P
00073d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
00073e 81ee      	LDD  R30,Y+6
00073f 81ff      	LDD  R31,Y+6+1
000740 93fa      	ST   -Y,R31
000741 93ea      	ST   -Y,R30
000742 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
                +
000743 87e9     +STD Y + 9 , R30
000744 87fa     +STD Y + 9 + 1 , R31
000745 876b     +STD Y + 9 + 2 , R22
000746 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000747 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22:
000748 81ae      	LDD  R26,Y+6
000749 81bf      	LDD  R27,Y+6+1
00074a 9611      	ADIW R26,1
00074b 83ae      	STD  Y+6,R26
00074c 83bf      	STD  Y+6+1,R27
00074d 9711      	SBIW R26,1
00074e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00074f 81aa     +LDD R26 , Y + 2
000750 81bb     +LDD R27 , Y + 2 + 1
000751 818c     +LDD R24 , Y + 2 + 2
000752 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000753 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000754 83ea     +STD Y + 2 , R30
000755 83fb     +STD Y + 2 + 1 , R31
000756 836c     +STD Y + 2 + 2 , R22
000757 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
                +
000759 81ea     +LDD R30 , Y + 2
00075a 81fb     +LDD R31 , Y + 2 + 1
00075b 816c     +LDD R22 , Y + 2 + 2
00075c 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00075d 85a9     +LDD R26 , Y + 9
00075e 85ba     +LDD R27 , Y + 9 + 1
00075f 858b     +LDD R24 , Y + 9 + 2
000760 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000762 85a9     +LDD R26 , Y + 9
000763 85ba     +LDD R27 , Y + 9 + 1
000764 858b     +LDD R24 , Y + 9 + 2
000765 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000766 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000767 9610      	adiw r26,0
000768 f039      	breq __delay_ms1
                 __delay_ms0:
000769 95a8      	wdr
                +
00076a ef8a     +LDI R24 , LOW ( 0xFA )
00076b e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00076c 9701     +SBIW R24 , 1
00076d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00076e 9711      	sbiw r26,1
00076f f7c9      	brne __delay_ms0
                 __delay_ms1:
000770 9508      	ret
                 
                 __ANEGF1:
000771 9730      	SBIW R30,0
000772 4060      	SBCI R22,0
000773 4070      	SBCI R23,0
000774 f009      	BREQ __ANEGF10
000775 5870      	SUBI R23,0x80
                 __ANEGF10:
000776 9508      	RET
                 
                 __ROUND_REPACK:
000777 2355      	TST  R21
000778 f442      	BRPL __REPACK
000779 3850      	CPI  R21,0x80
00077a f411      	BRNE __ROUND_REPACK0
00077b ffe0      	SBRS R30,0
00077c c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00077d 9631      	ADIW R30,1
00077e 1f69      	ADC  R22,R25
00077f 1f79      	ADC  R23,R25
000780 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000781 e850      	LDI  R21,0x80
000782 2757      	EOR  R21,R23
000783 f411      	BRNE __REPACK0
000784 935f      	PUSH R21
000785 c0cf      	RJMP __ZERORES
                 __REPACK0:
000786 3f5f      	CPI  R21,0xFF
000787 f031      	BREQ __REPACK1
000788 0f66      	LSL  R22
000789 0c00      	LSL  R0
00078a 9557      	ROR  R21
00078b 9567      	ROR  R22
00078c 2f75      	MOV  R23,R21
00078d 9508      	RET
                 __REPACK1:
00078e 935f      	PUSH R21
00078f 2000      	TST  R0
000790 f00a      	BRMI __REPACK2
000791 c0cf      	RJMP __MAXRES
                 __REPACK2:
000792 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000793 e850      	LDI  R21,0x80
000794 2e19      	MOV  R1,R25
000795 2215      	AND  R1,R21
000796 0f88      	LSL  R24
000797 1f99      	ROL  R25
000798 2795      	EOR  R25,R21
000799 0f55      	LSL  R21
00079a 9587      	ROR  R24
                 
                 __UNPACK1:
00079b e850      	LDI  R21,0x80
00079c 2e07      	MOV  R0,R23
00079d 2205      	AND  R0,R21
00079e 0f66      	LSL  R22
00079f 1f77      	ROL  R23
0007a0 2775      	EOR  R23,R21
0007a1 0f55      	LSL  R21
0007a2 9567      	ROR  R22
0007a3 9508      	RET
                 
                 __CFD1U:
0007a4 9468      	SET
0007a5 c001      	RJMP __CFD1U0
                 __CFD1:
0007a6 94e8      	CLT
                 __CFD1U0:
0007a7 935f      	PUSH R21
0007a8 dff2      	RCALL __UNPACK1
0007a9 3870      	CPI  R23,0x80
0007aa f018      	BRLO __CFD10
0007ab 3f7f      	CPI  R23,0xFF
0007ac f408      	BRCC __CFD10
0007ad c0a7      	RJMP __ZERORES
                 __CFD10:
0007ae e156      	LDI  R21,22
0007af 1b57      	SUB  R21,R23
0007b0 f4aa      	BRPL __CFD11
0007b1 9551      	NEG  R21
0007b2 3058      	CPI  R21,8
0007b3 f40e      	BRTC __CFD19
0007b4 3059      	CPI  R21,9
                 __CFD19:
0007b5 f030      	BRLO __CFD17
0007b6 efef      	SER  R30
0007b7 efff      	SER  R31
0007b8 ef6f      	SER  R22
0007b9 e77f      	LDI  R23,0x7F
0007ba f977      	BLD  R23,7
0007bb c01a      	RJMP __CFD15
                 __CFD17:
0007bc 2777      	CLR  R23
0007bd 2355      	TST  R21
0007be f0b9      	BREQ __CFD15
                 __CFD18:
0007bf 0fee      	LSL  R30
0007c0 1fff      	ROL  R31
0007c1 1f66      	ROL  R22
0007c2 1f77      	ROL  R23
0007c3 955a      	DEC  R21
0007c4 f7d1      	BRNE __CFD18
0007c5 c010      	RJMP __CFD15
                 __CFD11:
0007c6 2777      	CLR  R23
                 __CFD12:
0007c7 3058      	CPI  R21,8
0007c8 f028      	BRLO __CFD13
0007c9 2fef      	MOV  R30,R31
0007ca 2ff6      	MOV  R31,R22
0007cb 2f67      	MOV  R22,R23
0007cc 5058      	SUBI R21,8
0007cd cff9      	RJMP __CFD12
                 __CFD13:
0007ce 2355      	TST  R21
0007cf f031      	BREQ __CFD15
                 __CFD14:
0007d0 9576      	LSR  R23
0007d1 9567      	ROR  R22
0007d2 95f7      	ROR  R31
0007d3 95e7      	ROR  R30
0007d4 955a      	DEC  R21
0007d5 f7d1      	BRNE __CFD14
                 __CFD15:
0007d6 2000      	TST  R0
0007d7 f40a      	BRPL __CFD16
0007d8 d149      	RCALL __ANEGD1
                 __CFD16:
0007d9 915f      	POP  R21
0007da 9508      	RET
                 
                 __CDF1U:
0007db 9468      	SET
0007dc c001      	RJMP __CDF1U0
                 __CDF1:
0007dd 94e8      	CLT
                 __CDF1U0:
0007de 9730      	SBIW R30,0
0007df 4060      	SBCI R22,0
0007e0 4070      	SBCI R23,0
0007e1 f0b1      	BREQ __CDF10
0007e2 2400      	CLR  R0
0007e3 f026      	BRTS __CDF11
0007e4 2377      	TST  R23
0007e5 f412      	BRPL __CDF11
0007e6 9400      	COM  R0
0007e7 d13a      	RCALL __ANEGD1
                 __CDF11:
0007e8 2e17      	MOV  R1,R23
0007e9 e17e      	LDI  R23,30
0007ea 2011      	TST  R1
                 __CDF12:
0007eb f032      	BRMI __CDF13
0007ec 957a      	DEC  R23
0007ed 0fee      	LSL  R30
0007ee 1fff      	ROL  R31
0007ef 1f66      	ROL  R22
0007f0 1c11      	ROL  R1
0007f1 cff9      	RJMP __CDF12
                 __CDF13:
0007f2 2fef      	MOV  R30,R31
0007f3 2ff6      	MOV  R31,R22
0007f4 2d61      	MOV  R22,R1
0007f5 935f      	PUSH R21
0007f6 df8a      	RCALL __REPACK
0007f7 915f      	POP  R21
                 __CDF10:
0007f8 9508      	RET
                 
                 __SWAPACC:
0007f9 934f      	PUSH R20
0007fa 01af      	MOVW R20,R30
0007fb 01fd      	MOVW R30,R26
0007fc 01da      	MOVW R26,R20
0007fd 01ab      	MOVW R20,R22
0007fe 01bc      	MOVW R22,R24
0007ff 01ca      	MOVW R24,R20
000800 2d40      	MOV  R20,R0
000801 2c01      	MOV  R0,R1
000802 2e14      	MOV  R1,R20
000803 914f      	POP  R20
000804 9508      	RET
                 
                 __UADD12:
000805 0fea      	ADD  R30,R26
000806 1ffb      	ADC  R31,R27
000807 1f68      	ADC  R22,R24
000808 9508      	RET
                 
                 __NEGMAN1:
000809 95e0      	COM  R30
00080a 95f0      	COM  R31
00080b 9560      	COM  R22
00080c 5fef      	SUBI R30,-1
00080d 4fff      	SBCI R31,-1
00080e 4f6f      	SBCI R22,-1
00080f 9508      	RET
                 
                 __SUBF12:
000810 935f      	PUSH R21
000811 df81      	RCALL __UNPACK
000812 3890      	CPI  R25,0x80
000813 f171      	BREQ __ADDF129
000814 e850      	LDI  R21,0x80
000815 2615      	EOR  R1,R21
                 
000816 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000817 935f      	PUSH R21
000818 df7a      	RCALL __UNPACK
000819 3890      	CPI  R25,0x80
00081a f139      	BREQ __ADDF129
                 
                 __ADDF120:
00081b 3870      	CPI  R23,0x80
00081c f121      	BREQ __ADDF128
                 __ADDF121:
00081d 2f57      	MOV  R21,R23
00081e 1b59      	SUB  R21,R25
00081f f12b      	BRVS __ADDF1211
000820 f412      	BRPL __ADDF122
000821 dfd7      	RCALL __SWAPACC
000822 cffa      	RJMP __ADDF121
                 __ADDF122:
000823 3158      	CPI  R21,24
000824 f018      	BRLO __ADDF123
000825 27aa      	CLR  R26
000826 27bb      	CLR  R27
000827 2788      	CLR  R24
                 __ADDF123:
000828 3058      	CPI  R21,8
000829 f028      	BRLO __ADDF124
00082a 2fab      	MOV  R26,R27
00082b 2fb8      	MOV  R27,R24
00082c 2788      	CLR  R24
00082d 5058      	SUBI R21,8
00082e cff9      	RJMP __ADDF123
                 __ADDF124:
00082f 2355      	TST  R21
000830 f029      	BREQ __ADDF126
                 __ADDF125:
000831 9586      	LSR  R24
000832 95b7      	ROR  R27
000833 95a7      	ROR  R26
000834 955a      	DEC  R21
000835 f7d9      	BRNE __ADDF125
                 __ADDF126:
000836 2d50      	MOV  R21,R0
000837 2551      	EOR  R21,R1
000838 f072      	BRMI __ADDF127
000839 dfcb      	RCALL __UADD12
00083a f438      	BRCC __ADDF129
00083b 9567      	ROR  R22
00083c 95f7      	ROR  R31
00083d 95e7      	ROR  R30
00083e 9573      	INC  R23
00083f f413      	BRVC __ADDF129
000840 c020      	RJMP __MAXRES
                 __ADDF128:
000841 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000842 df3e      	RCALL __REPACK
000843 915f      	POP  R21
000844 9508      	RET
                 __ADDF1211:
000845 f7d8      	BRCC __ADDF128
000846 cffb      	RJMP __ADDF129
                 __ADDF127:
000847 1bea      	SUB  R30,R26
000848 0bfb      	SBC  R31,R27
000849 0b68      	SBC  R22,R24
00084a f051      	BREQ __ZERORES
00084b f410      	BRCC __ADDF1210
00084c 9400      	COM  R0
00084d dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00084e 2366      	TST  R22
00084f f392      	BRMI __ADDF129
000850 0fee      	LSL  R30
000851 1fff      	ROL  R31
000852 1f66      	ROL  R22
000853 957a      	DEC  R23
000854 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000855 27ee      	CLR  R30
000856 27ff      	CLR  R31
000857 2766      	CLR  R22
000858 2777      	CLR  R23
000859 915f      	POP  R21
00085a 9508      	RET
                 
                 __MINRES:
00085b efef      	SER  R30
00085c efff      	SER  R31
00085d e76f      	LDI  R22,0x7F
00085e ef7f      	SER  R23
00085f 915f      	POP  R21
000860 9508      	RET
                 
                 __MAXRES:
000861 efef      	SER  R30
000862 efff      	SER  R31
000863 e76f      	LDI  R22,0x7F
000864 e77f      	LDI  R23,0x7F
000865 915f      	POP  R21
000866 9508      	RET
                 
                 __MULF12:
000867 935f      	PUSH R21
000868 df2a      	RCALL __UNPACK
000869 3870      	CPI  R23,0x80
00086a f351      	BREQ __ZERORES
00086b 3890      	CPI  R25,0x80
00086c f341      	BREQ __ZERORES
00086d 2401      	EOR  R0,R1
00086e 9408      	SEC
00086f 1f79      	ADC  R23,R25
000870 f423      	BRVC __MULF124
000871 f31c      	BRLT __ZERORES
                 __MULF125:
000872 2000      	TST  R0
000873 f33a      	BRMI __MINRES
000874 cfec      	RJMP __MAXRES
                 __MULF124:
000875 920f      	PUSH R0
000876 931f      	PUSH R17
000877 932f      	PUSH R18
000878 933f      	PUSH R19
000879 934f      	PUSH R20
00087a 2711      	CLR  R17
00087b 2722      	CLR  R18
00087c 2799      	CLR  R25
00087d 9f68      	MUL  R22,R24
00087e 01a0      	MOVW R20,R0
00087f 9f8f      	MUL  R24,R31
000880 2d30      	MOV  R19,R0
000881 0d41      	ADD  R20,R1
000882 1f59      	ADC  R21,R25
000883 9f6b      	MUL  R22,R27
000884 0d30      	ADD  R19,R0
000885 1d41      	ADC  R20,R1
000886 1f59      	ADC  R21,R25
000887 9f8e      	MUL  R24,R30
000888 d027      	RCALL __MULF126
000889 9fbf      	MUL  R27,R31
00088a d025      	RCALL __MULF126
00088b 9f6a      	MUL  R22,R26
00088c d023      	RCALL __MULF126
00088d 9fbe      	MUL  R27,R30
00088e d01d      	RCALL __MULF127
00088f 9faf      	MUL  R26,R31
000890 d01b      	RCALL __MULF127
000891 9fae      	MUL  R26,R30
000892 0d11      	ADD  R17,R1
000893 1f29      	ADC  R18,R25
000894 1f39      	ADC  R19,R25
000895 1f49      	ADC  R20,R25
000896 1f59      	ADC  R21,R25
000897 2fe3      	MOV  R30,R19
000898 2ff4      	MOV  R31,R20
000899 2f65      	MOV  R22,R21
00089a 2f52      	MOV  R21,R18
00089b 914f      	POP  R20
00089c 913f      	POP  R19
00089d 912f      	POP  R18
00089e 911f      	POP  R17
00089f 900f      	POP  R0
0008a0 2366      	TST  R22
0008a1 f02a      	BRMI __MULF122
0008a2 0f55      	LSL  R21
0008a3 1fee      	ROL  R30
0008a4 1fff      	ROL  R31
0008a5 1f66      	ROL  R22
0008a6 c002      	RJMP __MULF123
                 __MULF122:
0008a7 9573      	INC  R23
0008a8 f24b      	BRVS __MULF125
                 __MULF123:
0008a9 decd      	RCALL __ROUND_REPACK
0008aa 915f      	POP  R21
0008ab 9508      	RET
                 
                 __MULF127:
0008ac 0d10      	ADD  R17,R0
0008ad 1d21      	ADC  R18,R1
0008ae 1f39      	ADC  R19,R25
0008af c002      	RJMP __MULF128
                 __MULF126:
0008b0 0d20      	ADD  R18,R0
0008b1 1d31      	ADC  R19,R1
                 __MULF128:
0008b2 1f49      	ADC  R20,R25
0008b3 1f59      	ADC  R21,R25
0008b4 9508      	RET
                 
                 __DIVF21:
0008b5 935f      	PUSH R21
0008b6 dedc      	RCALL __UNPACK
0008b7 3870      	CPI  R23,0x80
0008b8 f421      	BRNE __DIVF210
0008b9 2011      	TST  R1
                 __DIVF211:
0008ba f40a      	BRPL __DIVF219
0008bb cf9f      	RJMP __MINRES
                 __DIVF219:
0008bc cfa4      	RJMP __MAXRES
                 __DIVF210:
0008bd 3890      	CPI  R25,0x80
0008be f409      	BRNE __DIVF218
                 __DIVF217:
0008bf cf95      	RJMP __ZERORES
                 __DIVF218:
0008c0 2401      	EOR  R0,R1
0008c1 9408      	SEC
0008c2 0b97      	SBC  R25,R23
0008c3 f41b      	BRVC __DIVF216
0008c4 f3d4      	BRLT __DIVF217
0008c5 2000      	TST  R0
0008c6 cff3      	RJMP __DIVF211
                 __DIVF216:
0008c7 2f79      	MOV  R23,R25
0008c8 931f      	PUSH R17
0008c9 932f      	PUSH R18
0008ca 933f      	PUSH R19
0008cb 934f      	PUSH R20
0008cc 2411      	CLR  R1
0008cd 2711      	CLR  R17
0008ce 2722      	CLR  R18
0008cf 2733      	CLR  R19
0008d0 2744      	CLR  R20
0008d1 2755      	CLR  R21
0008d2 e290      	LDI  R25,32
                 __DIVF212:
0008d3 17ae      	CP   R26,R30
0008d4 07bf      	CPC  R27,R31
0008d5 0786      	CPC  R24,R22
0008d6 0741      	CPC  R20,R17
0008d7 f030      	BRLO __DIVF213
0008d8 1bae      	SUB  R26,R30
0008d9 0bbf      	SBC  R27,R31
0008da 0b86      	SBC  R24,R22
0008db 0b41      	SBC  R20,R17
0008dc 9408      	SEC
0008dd c001      	RJMP __DIVF214
                 __DIVF213:
0008de 9488      	CLC
                 __DIVF214:
0008df 1f55      	ROL  R21
0008e0 1f22      	ROL  R18
0008e1 1f33      	ROL  R19
0008e2 1c11      	ROL  R1
0008e3 1faa      	ROL  R26
0008e4 1fbb      	ROL  R27
0008e5 1f88      	ROL  R24
0008e6 1f44      	ROL  R20
0008e7 959a      	DEC  R25
0008e8 f751      	BRNE __DIVF212
0008e9 01f9      	MOVW R30,R18
0008ea 2d61      	MOV  R22,R1
0008eb 914f      	POP  R20
0008ec 913f      	POP  R19
0008ed 912f      	POP  R18
0008ee 911f      	POP  R17
0008ef 2366      	TST  R22
0008f0 f032      	BRMI __DIVF215
0008f1 0f55      	LSL  R21
0008f2 1fee      	ROL  R30
0008f3 1fff      	ROL  R31
0008f4 1f66      	ROL  R22
0008f5 957a      	DEC  R23
0008f6 f243      	BRVS __DIVF217
                 __DIVF215:
0008f7 de7f      	RCALL __ROUND_REPACK
0008f8 915f      	POP  R21
0008f9 9508      	RET
                 
                 __CMPF12:
0008fa 2399      	TST  R25
0008fb f09a      	BRMI __CMPF120
0008fc 2377      	TST  R23
0008fd f042      	BRMI __CMPF121
0008fe 1797      	CP   R25,R23
0008ff f048      	BRLO __CMPF122
000900 f429      	BRNE __CMPF121
000901 17ae      	CP   R26,R30
000902 07bf      	CPC  R27,R31
000903 0786      	CPC  R24,R22
000904 f020      	BRLO __CMPF122
000905 f031      	BREQ __CMPF123
                 __CMPF121:
000906 9498      	CLZ
000907 9488      	CLC
000908 9508      	RET
                 __CMPF122:
000909 9498      	CLZ
00090a 9408      	SEC
00090b 9508      	RET
                 __CMPF123:
00090c 9418      	SEZ
00090d 9488      	CLC
00090e 9508      	RET
                 __CMPF120:
00090f 2377      	TST  R23
000910 f7c2      	BRPL __CMPF122
000911 1797      	CP   R25,R23
000912 f398      	BRLO __CMPF121
000913 f7a9      	BRNE __CMPF122
000914 17ea      	CP   R30,R26
000915 07fb      	CPC  R31,R27
000916 0768      	CPC  R22,R24
000917 f388      	BRLO __CMPF122
000918 f399      	BREQ __CMPF123
000919 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00091a 2400      	CLR  R0
00091b 0daf      	ADD  R26,R15
00091c 1db0      	ADC  R27,R0
00091d 9508      	RET
                 
                 __ANEGW1:
00091e 95f1      	NEG  R31
00091f 95e1      	NEG  R30
000920 40f0      	SBCI R31,0
000921 9508      	RET
                 
                 __ANEGD1:
000922 95f0      	COM  R31
000923 9560      	COM  R22
000924 9570      	COM  R23
000925 95e1      	NEG  R30
000926 4fff      	SBCI R31,-1
000927 4f6f      	SBCI R22,-1
000928 4f7f      	SBCI R23,-1
000929 9508      	RET
                 
                 __CBD1:
00092a 2ffe      	MOV  R31,R30
00092b 0fff      	ADD  R31,R31
00092c 0bff      	SBC  R31,R31
00092d 2f6f      	MOV  R22,R31
00092e 2f7f      	MOV  R23,R31
00092f 9508      	RET
                 
                 __CWD1:
000930 2f6f      	MOV  R22,R31
000931 0f66      	ADD  R22,R22
000932 0b66      	SBC  R22,R22
000933 2f76      	MOV  R23,R22
000934 9508      	RET
                 
                 __DIVB21U:
000935 2400      	CLR  R0
000936 e098      	LDI  R25,8
                 __DIVB21U1:
000937 0faa      	LSL  R26
000938 1c00      	ROL  R0
000939 1a0e      	SUB  R0,R30
00093a f410      	BRCC __DIVB21U2
00093b 0e0e      	ADD  R0,R30
00093c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00093d 60a1      	SBR  R26,1
                 __DIVB21U3:
00093e 959a      	DEC  R25
00093f f7b9      	BRNE __DIVB21U1
000940 2fea      	MOV  R30,R26
000941 2da0      	MOV  R26,R0
000942 9508      	RET
                 
                 __DIVB21:
000943 d051      	RCALL __CHKSIGNB
000944 dff0      	RCALL __DIVB21U
000945 f40e      	BRTC __DIVB211
000946 95e1      	NEG  R30
                 __DIVB211:
000947 9508      	RET
                 
                 __DIVW21U:
000948 2400      	CLR  R0
000949 2411      	CLR  R1
00094a e190      	LDI  R25,16
                 __DIVW21U1:
00094b 0faa      	LSL  R26
00094c 1fbb      	ROL  R27
00094d 1c00      	ROL  R0
00094e 1c11      	ROL  R1
00094f 1a0e      	SUB  R0,R30
000950 0a1f      	SBC  R1,R31
000951 f418      	BRCC __DIVW21U2
000952 0e0e      	ADD  R0,R30
000953 1e1f      	ADC  R1,R31
000954 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000955 60a1      	SBR  R26,1
                 __DIVW21U3:
000956 959a      	DEC  R25
000957 f799      	BRNE __DIVW21U1
000958 01fd      	MOVW R30,R26
000959 01d0      	MOVW R26,R0
00095a 9508      	RET
                 
                 __DIVW21:
00095b d045      	RCALL __CHKSIGNW
00095c dfeb      	RCALL __DIVW21U
00095d f40e      	BRTC __DIVW211
00095e dfbf      	RCALL __ANEGW1
                 __DIVW211:
00095f 9508      	RET
                 
                 __DIVD21U:
000960 933f      	PUSH R19
000961 934f      	PUSH R20
000962 935f      	PUSH R21
000963 2400      	CLR  R0
000964 2411      	CLR  R1
000965 2744      	CLR  R20
000966 2755      	CLR  R21
000967 e230      	LDI  R19,32
                 __DIVD21U1:
000968 0faa      	LSL  R26
000969 1fbb      	ROL  R27
00096a 1f88      	ROL  R24
00096b 1f99      	ROL  R25
00096c 1c00      	ROL  R0
00096d 1c11      	ROL  R1
00096e 1f44      	ROL  R20
00096f 1f55      	ROL  R21
000970 1a0e      	SUB  R0,R30
000971 0a1f      	SBC  R1,R31
000972 0b46      	SBC  R20,R22
000973 0b57      	SBC  R21,R23
000974 f428      	BRCC __DIVD21U2
000975 0e0e      	ADD  R0,R30
000976 1e1f      	ADC  R1,R31
000977 1f46      	ADC  R20,R22
000978 1f57      	ADC  R21,R23
000979 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00097a 60a1      	SBR  R26,1
                 __DIVD21U3:
00097b 953a      	DEC  R19
00097c f759      	BRNE __DIVD21U1
00097d 01fd      	MOVW R30,R26
00097e 01bc      	MOVW R22,R24
00097f 01d0      	MOVW R26,R0
000980 01ca      	MOVW R24,R20
000981 915f      	POP  R21
000982 914f      	POP  R20
000983 913f      	POP  R19
000984 9508      	RET
                 
                 __MODB21:
000985 94e8      	CLT
000986 ffa7      	SBRS R26,7
000987 c002      	RJMP __MODB211
000988 95a1      	NEG  R26
000989 9468      	SET
                 __MODB211:
00098a fde7      	SBRC R30,7
00098b 95e1      	NEG  R30
00098c dfa8      	RCALL __DIVB21U
00098d 2fea      	MOV  R30,R26
00098e f40e      	BRTC __MODB212
00098f 95e1      	NEG  R30
                 __MODB212:
000990 9508      	RET
                 
                 __MODD21U:
000991 dfce      	RCALL __DIVD21U
000992 01fd      	MOVW R30,R26
000993 01bc      	MOVW R22,R24
000994 9508      	RET
                 
                 __CHKSIGNB:
000995 94e8      	CLT
000996 ffe7      	SBRS R30,7
000997 c002      	RJMP __CHKSB1
000998 95e1      	NEG  R30
000999 9468      	SET
                 __CHKSB1:
00099a ffa7      	SBRS R26,7
00099b c004      	RJMP __CHKSB2
00099c 95a1      	NEG  R26
00099d f800      	BLD  R0,0
00099e 9403      	INC  R0
00099f fa00      	BST  R0,0
                 __CHKSB2:
0009a0 9508      	RET
                 
                 __CHKSIGNW:
0009a1 94e8      	CLT
0009a2 fff7      	SBRS R31,7
0009a3 c002      	RJMP __CHKSW1
0009a4 df79      	RCALL __ANEGW1
0009a5 9468      	SET
                 __CHKSW1:
0009a6 ffb7      	SBRS R27,7
0009a7 c006      	RJMP __CHKSW2
0009a8 95a0      	COM  R26
0009a9 95b0      	COM  R27
0009aa 9611      	ADIW R26,1
0009ab f800      	BLD  R0,0
0009ac 9403      	INC  R0
0009ad fa00      	BST  R0,0
                 __CHKSW2:
0009ae 9508      	RET
                 
                 __GETW1P:
0009af 91ed      	LD   R30,X+
0009b0 91fc      	LD   R31,X
0009b1 9711      	SBIW R26,1
0009b2 9508      	RET
                 
                 __GETD1P:
0009b3 91ed      	LD   R30,X+
0009b4 91fd      	LD   R31,X+
0009b5 916d      	LD   R22,X+
0009b6 917c      	LD   R23,X
0009b7 9713      	SBIW R26,3
0009b8 9508      	RET
                 
                 __PUTDP1:
0009b9 93ed      	ST   X+,R30
0009ba 93fd      	ST   X+,R31
0009bb 936d      	ST   X+,R22
0009bc 937c      	ST   X,R23
0009bd 9508      	RET
                 
                 __GETD1S0:
0009be 81e8      	LD   R30,Y
0009bf 81f9      	LDD  R31,Y+1
0009c0 816a      	LDD  R22,Y+2
0009c1 817b      	LDD  R23,Y+3
0009c2 9508      	RET
                 
                 __GETD2S0:
0009c3 81a8      	LD   R26,Y
0009c4 81b9      	LDD  R27,Y+1
0009c5 818a      	LDD  R24,Y+2
0009c6 819b      	LDD  R25,Y+3
0009c7 9508      	RET
                 
                 __PUTD1S0:
0009c8 83e8      	ST   Y,R30
0009c9 83f9      	STD  Y+1,R31
0009ca 836a      	STD  Y+2,R22
0009cb 837b      	STD  Y+3,R23
0009cc 9508      	RET
                 
                 __PUTPARD1:
0009cd 937a      	ST   -Y,R23
0009ce 936a      	ST   -Y,R22
0009cf 93fa      	ST   -Y,R31
0009d0 93ea      	ST   -Y,R30
0009d1 9508      	RET
                 
                 __PUTPARD2:
0009d2 939a      	ST   -Y,R25
0009d3 938a      	ST   -Y,R24
0009d4 93ba      	ST   -Y,R27
0009d5 93aa      	ST   -Y,R26
0009d6 9508      	RET
                 
                 __SWAPD12:
0009d7 2e18      	MOV  R1,R24
0009d8 2f86      	MOV  R24,R22
0009d9 2d61      	MOV  R22,R1
0009da 2e19      	MOV  R1,R25
0009db 2f97      	MOV  R25,R23
0009dc 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0009dd 2e1b      	MOV  R1,R27
0009de 2fbf      	MOV  R27,R31
0009df 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0009e0 2e1a      	MOV  R1,R26
0009e1 2fae      	MOV  R26,R30
0009e2 2de1      	MOV  R30,R1
0009e3 9508      	RET
                 
                 __CPD10:
0009e4 9730      	SBIW R30,0
0009e5 4060      	SBCI R22,0
0009e6 4070      	SBCI R23,0
0009e7 9508      	RET
                 
                 __SAVELOCR6:
0009e8 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009e9 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009ea 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009eb 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009ec 931a      	ST   -Y,R17
0009ed 930a      	ST   -Y,R16
0009ee 9508      	RET
                 
                 __LOADLOCR6:
0009ef 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009f0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009f1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009f2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009f3 8119      	LDD  R17,Y+1
0009f4 8108      	LD   R16,Y
0009f5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  70 r1 :  40 r2 :   0 r3 :   0 r4 :  13 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 111 r23:  97 
r24:  74 r25:  63 r26: 220 r27: 101 r28:  30 r29:   1 r30: 458 r31: 152 
x  :  44 y  : 392 z  :  24 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  15 
adiw  :  35 and   :   5 andi  :   7 asr   :   1 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  72 brpl  :   9 brsh  :   6 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 173 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :  10 
cp    :  14 cpc   :  18 cpi   :  92 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  17 inc   :   6 jmp   :  24 ld    :  62 ldd   : 191 ldi   : 223 
lds   :   4 lpm   :  12 lsl   :  16 lsr   :   3 mov   :  82 movw  :  63 
mul   :  11 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   1 
ori   :  10 out   :  35 pop   :  22 push  :  22 rcall :  87 ret   :  95 
reti  :   1 rjmp  : 154 rol   :  35 ror   :  16 sbc   :  12 sbci  :  21 
sbi   :   5 sbic  :   6 sbis  :   6 sbiw  :  29 sbr   :   5 sbrc  :   4 
sbrs  :  22 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 110 std   :  86 sts   :   2 sub   :   7 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 84 out of 116 (72.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013ec   5016     84   5100   32768  15.6%
[.dseg] 0x000060 0x0002a9      0     73     73    2048   3.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 9 warnings
